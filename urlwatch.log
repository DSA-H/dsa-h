2014-05-22 13:42:38,993 [JavaFX Application Thread] DEBUG org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
2014-05-22 13:42:38,996 [JavaFX Application Thread] DEBUG org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
2014-05-22 13:42:38,999 [JavaFX Application Thread] DEBUG org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
2014-05-22 13:42:38,999 [JavaFX Application Thread] DEBUG org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2014-05-22 13:42:39,009 [JavaFX Application Thread] INFO  org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@324c4f64: startup date [Thu May 22 13:42:39 CEST 2014]; root of context hierarchy
2014-05-22 13:42:39,051 [JavaFX Application Thread] DEBUG org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
2014-05-22 13:42:39,051 [JavaFX Application Thread] DEBUG org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
2014-05-22 13:42:39,051 [JavaFX Application Thread] DEBUG org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
2014-05-22 13:42:39,051 [JavaFX Application Thread] DEBUG org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2014-05-22 13:42:39,063 [JavaFX Application Thread] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml]
2014-05-22 13:42:39,086 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2014-05-22 13:42:39,122 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver - Loading schema mappings from [META-INF/spring.schemas]
2014-05-22 13:42:39,128 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver - Loaded schema mappings: {http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2014-05-22 13:42:39,134 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
2014-05-22 13:42:39,186 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.2.xsd
2014-05-22 13:42:39,190 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.2.xsd
2014-05-22 13:42:39,206 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader - Loading bean definitions
2014-05-22 13:42:39,248 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2014-05-22 13:42:39,284 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loaded 35 bean definitions from location pattern [applicationContext.xml]
2014-05-22 13:42:39,285 [JavaFX Application Thread] DEBUG org.springframework.context.support.ClassPathXmlApplicationContext - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@324c4f64: org.springframework.beans.factory.support.DefaultListableBeanFactory@55c7a0d2: defining beans [dataSource,sessionFactory,loader,regionDao,regionBorderDao,traderDao,productDao,traderCategoryDao,locationDao,productCategoryDao,productUnitDao,regionService,regionBorderService,locationService,productService,productCategoryService,productUnitService,traderCategoryService,traderService,pathService,assortmentNatureService,MainMenuController,RegionListController,EditRegionController,LocationListController,EditLocationController,productListController,editProductController,TraderCategoryList,editTraderCategory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager]; root of factory hierarchy
2014-05-22 13:42:39,526 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2014-05-22 13:42:39,527 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2014-05-22 13:42:39,543 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2014-05-22 13:42:39,572 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2014-05-22 13:42:39,574 [JavaFX Application Thread] DEBUG org.springframework.context.support.ClassPathXmlApplicationContext - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3ea74fa9]
2014-05-22 13:42:39,576 [JavaFX Application Thread] DEBUG org.springframework.context.support.ClassPathXmlApplicationContext - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@37548bb4]
2014-05-22 13:42:39,580 [JavaFX Application Thread] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@55c7a0d2: defining beans [dataSource,sessionFactory,loader,regionDao,regionBorderDao,traderDao,productDao,traderCategoryDao,locationDao,productCategoryDao,productUnitDao,regionService,regionBorderService,locationService,productService,productCategoryService,productUnitService,traderCategoryService,traderService,pathService,assortmentNatureService,MainMenuController,RegionListController,EditRegionController,LocationListController,EditLocationController,productListController,editProductController,TraderCategoryList,editTraderCategory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager]; root of factory hierarchy
2014-05-22 13:42:39,581 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSource'
2014-05-22 13:42:39,581 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'dataSource'
2014-05-22 13:42:39,581 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2014-05-22 13:42:39,596 [JavaFX Application Thread] INFO  org.springframework.jdbc.datasource.DriverManagerDataSource - Loaded JDBC driver: org.hsqldb.jdbc.JDBCDriver
2014-05-22 13:42:39,597 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:39,597 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:39,600 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2014-05-22 13:42:39,603 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2014-05-22 13:42:39,604 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2014-05-22 13:42:39,606 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2014-05-22 13:42:39,610 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2014-05-22 13:42:39,611 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:39,613 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'dataSource'
2014-05-22 13:42:39,614 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sessionFactory'
2014-05-22 13:42:39,614 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'sessionFactory'
2014-05-22 13:42:39,630 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2014-05-22 13:42:39,636 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource'
2014-05-22 13:42:39,664 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2014-05-22 13:42:39,696 [JavaFX Application Thread] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2014-05-22 13:42:39,720 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@35d80688
2014-05-22 13:42:39,720 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@35d80688
2014-05-22 13:42:39,720 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@35d80688
2014-05-22 13:42:39,723 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@59b712b3
2014-05-22 13:42:39,723 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2446f810
2014-05-22 13:42:39,724 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@307e198a
2014-05-22 13:42:39,725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6e6de73f
2014-05-22 13:42:39,725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6e6de73f
2014-05-22 13:42:39,725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6e6de73f
2014-05-22 13:42:39,726 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1217ddea
2014-05-22 13:42:39,726 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1217ddea
2014-05-22 13:42:39,726 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1217ddea
2014-05-22 13:42:39,729 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@790b87aa
2014-05-22 13:42:39,730 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@790b87aa
2014-05-22 13:42:39,730 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@790b87aa
2014-05-22 13:42:39,731 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@198b2577
2014-05-22 13:42:39,731 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@198b2577
2014-05-22 13:42:39,731 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@198b2577
2014-05-22 13:42:39,733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@653f7aee
2014-05-22 13:42:39,734 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@653f7aee
2014-05-22 13:42:39,734 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@653f7aee
2014-05-22 13:42:39,736 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@452065d4
2014-05-22 13:42:39,736 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@452065d4
2014-05-22 13:42:39,736 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@452065d4
2014-05-22 13:42:39,738 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3b42e09b
2014-05-22 13:42:39,738 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3b42e09b
2014-05-22 13:42:39,739 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3b42e09b
2014-05-22 13:42:39,741 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@57840f2d
2014-05-22 13:42:39,741 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@57840f2d
2014-05-22 13:42:39,742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@c2309a6
2014-05-22 13:42:39,742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@c2309a6
2014-05-22 13:42:39,744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2de901f0
2014-05-22 13:42:39,744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2de901f0
2014-05-22 13:42:39,745 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@523f55fe
2014-05-22 13:42:39,746 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a7d0e42
2014-05-22 13:42:39,747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2a00b954
2014-05-22 13:42:39,747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a00b954
2014-05-22 13:42:39,751 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@27f4f37d
2014-05-22 13:42:39,751 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@27f4f37d
2014-05-22 13:42:39,752 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@650a9ba2
2014-05-22 13:42:39,753 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@650a9ba2
2014-05-22 13:42:39,754 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e93eecc
2014-05-22 13:42:39,754 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e93eecc
2014-05-22 13:42:39,754 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e93eecc
2014-05-22 13:42:39,755 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2ff529e3
2014-05-22 13:42:39,756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5dfb8f74
2014-05-22 13:42:39,756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5dfb8f74
2014-05-22 13:42:39,757 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5dfb8f74
2014-05-22 13:42:39,757 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30902636
2014-05-22 13:42:39,758 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@105eedf7
2014-05-22 13:42:39,758 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@105eedf7
2014-05-22 13:42:39,759 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7966ff1f
2014-05-22 13:42:39,759 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7966ff1f
2014-05-22 13:42:39,760 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@318ea687
2014-05-22 13:42:39,760 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@318ea687
2014-05-22 13:42:39,761 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2505c859
2014-05-22 13:42:39,761 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2505c859
2014-05-22 13:42:39,763 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@327010c6
2014-05-22 13:42:39,763 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@327010c6
2014-05-22 13:42:39,763 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@fd23619
2014-05-22 13:42:39,764 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4a604628
2014-05-22 13:42:39,765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@f441c89
2014-05-22 13:42:39,765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@f441c89
2014-05-22 13:42:39,765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@f441c89
2014-05-22 13:42:39,766 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@472863da
2014-05-22 13:42:39,766 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@472863da
2014-05-22 13:42:39,766 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@472863da
2014-05-22 13:42:39,767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5490b5db
2014-05-22 13:42:39,768 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6865fdf0
2014-05-22 13:42:39,768 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6865fdf0
2014-05-22 13:42:39,768 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6865fdf0
2014-05-22 13:42:39,769 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@387cfaf4
2014-05-22 13:42:39,769 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@387cfaf4
2014-05-22 13:42:39,769 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@387cfaf4
2014-05-22 13:42:39,770 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3f2d99d
2014-05-22 13:42:39,770 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5c89eb2b
2014-05-22 13:42:39,775 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@892d44a
2014-05-22 13:42:39,775 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@892d44a
2014-05-22 13:42:39,776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7654de85
2014-05-22 13:42:39,780 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3bd8026c
2014-05-22 13:42:39,780 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bd8026c
2014-05-22 13:42:39,783 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7863fe05
2014-05-22 13:42:39,783 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7863fe05
2014-05-22 13:42:39,785 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71239b10
2014-05-22 13:42:39,786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@243ef2af
2014-05-22 13:42:39,788 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@271d7dbd
2014-05-22 13:42:39,790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@974f719
2014-05-22 13:42:39,790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@974f719
2014-05-22 13:42:39,791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3b263fcb
2014-05-22 13:42:39,791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@15c4cb89
2014-05-22 13:42:39,791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@676d1695
2014-05-22 13:42:39,791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4275a9d5
2014-05-22 13:42:39,791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@48a70e37
2014-05-22 13:42:39,791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7b0c0c29
2014-05-22 13:42:39,791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@745a7463
2014-05-22 13:42:39,791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b0e403c
2014-05-22 13:42:39,807 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
2014-05-22 13:42:39,813 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.2.5.Final}
2014-05-22 13:42:39,814 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2014-05-22 13:42:39,816 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2014-05-22 13:42:39,827 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2014-05-22 13:42:39,827 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2014-05-22 13:42:39,828 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2014-05-22 13:42:39,828 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2014-05-22 13:42:39,828 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2014-05-22 13:42:39,829 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2014-05-22 13:42:39,830 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2014-05-22 13:42:39,830 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2014-05-22 13:42:39,831 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2014-05-22 13:42:39,831 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2014-05-22 13:42:39,831 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2014-05-22 13:42:39,832 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2014-05-22 13:42:39,832 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2014-05-22 13:42:39,833 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2014-05-22 13:42:39,834 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2014-05-22 13:42:39,859 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2014-05-22 13:42:39,859 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
2014-05-22 13:42:39,860 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Located [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd] in classpath
2014-05-22 13:42:39,908 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2014-05-22 13:42:39,908 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
2014-05-22 13:42:39,908 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Located [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd] in classpath
2014-05-22 13:42:39,923 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2014-05-22 13:42:39,923 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
2014-05-22 13:42:39,925 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Located [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd] in classpath
2014-05-22 13:42:39,953 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2014-05-22 13:42:39,953 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
2014-05-22 13:42:39,953 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Located [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd] in classpath
2014-05-22 13:42:39,966 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2014-05-22 13:42:39,966 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
2014-05-22 13:42:39,966 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Located [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd] in classpath
2014-05-22 13:42:39,978 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2014-05-22 13:42:39,978 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
2014-05-22 13:42:39,979 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Located [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd] in classpath
2014-05-22 13:42:39,993 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2014-05-22 13:42:39,993 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
2014-05-22 13:42:39,993 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Located [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd] in classpath
2014-05-22 13:42:40,005 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2014-05-22 13:42:40,005 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
2014-05-22 13:42:40,005 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Located [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd] in classpath
2014-05-22 13:42:40,014 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2014-05-22 13:42:40,014 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
2014-05-22 13:42:40,015 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.xml.DTDEntityResolver - Located [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd] in classpath
2014-05-22 13:42:40,040 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2014-05-22 13:42:40,057 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {}
2014-05-22 13:42:40,086 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:42:40,400 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB461EF9920C.ENGINE - checkpointClose start
2014-05-22 13:42:40,424 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB461EF9920C.ENGINE - checkpointClose end
2014-05-22 13:42:40,451 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl - Database ->
       name : HSQL Database Engine
    version : 2.3.2
      major : 2
      minor : 3
2014-05-22 13:42:40,451 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.2
      major : 2
      minor : 3
2014-05-22 13:42:40,451 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl - JDBC version : 4.0
2014-05-22 13:42:40,469 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2014-05-22 13:42:40,623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files
2014-05-22 13:42:40,637 [JavaFX Application Thread] DEBUG org.hibernate.cfg.HbmBinder - Named query: Region.findAll -> 
        from Region ORDER BY name ASC
    
2014-05-22 13:42:40,638 [JavaFX Application Thread] DEBUG org.hibernate.cfg.HbmBinder - Named query: RegionBorder.findAll -> 
        from RegionBorder
    
2014-05-22 13:42:40,638 [JavaFX Application Thread] DEBUG org.hibernate.cfg.HbmBinder - Named query: RegionBorder.findAllForRegion -> 
        from RegionBorder WHERE pk.region1.id = :regionId OR pk.region2.id = :regionId
    
2014-05-22 13:42:40,638 [JavaFX Application Thread] DEBUG org.hibernate.cfg.HbmBinder - Named query: trader.getAllForLocation -> 
        from Trader WHERE location = :location ORDER BY id ASC
    
2014-05-22 13:42:40,638 [JavaFX Application Thread] DEBUG org.hibernate.cfg.HbmBinder - Named query: trader.getAllForCategory -> 
        from Trader WHERE category = :category ORDER BY id ASC
    
2014-05-22 13:42:40,639 [JavaFX Application Thread] DEBUG org.hibernate.cfg.HbmBinder - Named query: TraderCategory.findAll -> 
        from TraderCategory ORDER BY id ASC
    
2014-05-22 13:42:40,639 [JavaFX Application Thread] DEBUG org.hibernate.cfg.HbmBinder - Named query: Location.findAll -> 
        from Location ORDER BY name ASC
    
2014-05-22 13:42:40,639 [JavaFX Application Thread] DEBUG org.hibernate.cfg.HbmBinder - Named query: Product.findAll -> 
        from Product ORDER BY name ASC
    
2014-05-22 13:42:40,639 [JavaFX Application Thread] DEBUG org.hibernate.cfg.HbmBinder - Named query: ProductCategory.findAll -> 
        from ProductCategory ORDER BY name ASC
    
2014-05-22 13:42:40,639 [JavaFX Application Thread] DEBUG org.hibernate.cfg.HbmBinder - Named query: ProductUnit.findAll -> 
        from ProductUnit ORDER BY name ASC
    
2014-05-22 13:42:40,639 [JavaFX Application Thread] DEBUG org.hibernate.cfg.HbmBinder - Named query: AssortmentNature.findAll -> 
        from AssortmentNature ORDER BY id ASC
    
2014-05-22 13:42:40,640 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Process annotated classes
2014-05-22 13:42:40,644 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: sepm.dsa.model.Region
2014-05-22 13:42:40,688 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2014-05-22 13:42:40,689 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2014-05-22 13:42:40,695 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Region
2014-05-22 13:42:40,698 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity sepm.dsa.model.Region on table regions
2014-05-22 13:42:40,751 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=id, insertable=true, updatable=true, unique=true}
2014-05-22 13:42:40,755 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2014-05-22 13:42:40,760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2014-05-22 13:42:40,762 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2014-05-22 13:42:40,765 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='pk.region1'}
2014-05-22 13:42:40,766 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=borders1, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,768 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=null, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=element, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=borders1_KEY, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='borders1_KEY', referencedColumn='null', mappedBy='null'}
2014-05-22 13:42:40,779 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='pk.region1'}
2014-05-22 13:42:40,779 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='pk.region1'}
2014-05-22 13:42:40,780 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Collection role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:40,782 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property borders1
2014-05-22 13:42:40,783 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='pk.region2'}
2014-05-22 13:42:40,783 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=borders2, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,783 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=null, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,783 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=element, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,783 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=borders2_KEY, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,783 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='borders2_KEY', referencedColumn='null', mappedBy='null'}
2014-05-22 13:42:40,783 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='pk.region2'}
2014-05-22 13:42:40,783 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='pk.region2'}
2014-05-22 13:42:40,783 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Collection role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:40,784 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property borders2
2014-05-22 13:42:40,784 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=color, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,784 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property color with lazy=false
2014-05-22 13:42:40,784 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for color
2014-05-22 13:42:40,784 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property color
2014-05-22 13:42:40,784 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=comment, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,784 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property comment with lazy=false
2014-05-22 13:42:40,784 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for comment
2014-05-22 13:42:40,784 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property comment
2014-05-22 13:42:40,785 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=name, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,785 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2014-05-22 13:42:40,785 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2014-05-22 13:42:40,785 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2014-05-22 13:42:40,785 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=null, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,787 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=element, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,787 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,787 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
2014-05-22 13:42:40,788 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='regionId', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,788 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='productId', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,788 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Collection role: sepm.dsa.model.Region.products
2014-05-22 13:42:40,788 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property products
2014-05-22 13:42:40,788 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=rainfallChanceId, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,788 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property rainfallChanceId with lazy=false
2014-05-22 13:42:40,788 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for rainfallChanceId
2014-05-22 13:42:40,789 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property rainfallChanceId
2014-05-22 13:42:40,789 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(regions), mappingColumn=temperatureId, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,789 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property temperatureId with lazy=false
2014-05-22 13:42:40,789 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for temperatureId
2014-05-22 13:42:40,789 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property temperatureId
2014-05-22 13:42:40,791 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: sepm.dsa.model.RegionBorder
2014-05-22 13:42:40,791 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2014-05-22 13:42:40,791 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2014-05-22 13:42:40,791 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name RegionBorder
2014-05-22 13:42:40,792 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity sepm.dsa.model.RegionBorder on table borders
2014-05-22 13:42:40,801 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(borders), mappingColumn=pk, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,809 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='region1', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,809 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(borders), mappingColumn=region1, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,811 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property region1
2014-05-22 13:42:40,811 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='region2', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,812 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(borders), mappingColumn=region2, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,812 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property region2
2014-05-22 13:42:40,812 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property pk
2014-05-22 13:42:40,812 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(borders), mappingColumn=borderCost, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,812 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property borderCost with lazy=false
2014-05-22 13:42:40,812 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for borderCost
2014-05-22 13:42:40,812 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property borderCost
2014-05-22 13:42:40,813 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: sepm.dsa.model.Trader
2014-05-22 13:42:40,813 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2014-05-22 13:42:40,813 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2014-05-22 13:42:40,813 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Trader
2014-05-22 13:42:40,813 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity sepm.dsa.model.Trader on table traders
2014-05-22 13:42:40,818 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=id, insertable=true, updatable=true, unique=true}
2014-05-22 13:42:40,818 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2014-05-22 13:42:40,818 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2014-05-22 13:42:40,818 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2014-05-22 13:42:40,819 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,819 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=category, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,819 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property category
2014-05-22 13:42:40,820 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=charisma, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,820 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property charisma with lazy=false
2014-05-22 13:42:40,820 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for charisma
2014-05-22 13:42:40,820 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property charisma
2014-05-22 13:42:40,820 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=comment, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,820 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property comment with lazy=false
2014-05-22 13:42:40,821 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for comment
2014-05-22 13:42:40,821 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property comment
2014-05-22 13:42:40,821 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=convince, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,821 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property convince with lazy=false
2014-05-22 13:42:40,821 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for convince
2014-05-22 13:42:40,821 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property convince
2014-05-22 13:42:40,821 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='trader'}
2014-05-22 13:42:40,822 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=deals, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,822 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=null, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,822 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=element, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,822 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=deals_KEY, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,822 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='deals_KEY', referencedColumn='null', mappedBy='null'}
2014-05-22 13:42:40,822 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='trader'}
2014-05-22 13:42:40,822 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='trader'}
2014-05-22 13:42:40,823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Collection role: sepm.dsa.model.Trader.deals
2014-05-22 13:42:40,823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property deals
2014-05-22 13:42:40,823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=intelligence, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property intelligence with lazy=false
2014-05-22 13:42:40,823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for intelligence
2014-05-22 13:42:40,823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property intelligence
2014-05-22 13:42:40,823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=location, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property location
2014-05-22 13:42:40,824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=mut, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property mut with lazy=false
2014-05-22 13:42:40,824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for mut
2014-05-22 13:42:40,824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property mut
2014-05-22 13:42:40,824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=name, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2014-05-22 13:42:40,825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2014-05-22 13:42:40,825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2014-05-22 13:42:40,825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='trader'}
2014-05-22 13:42:40,825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=offers, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=null, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=element, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=offers_KEY, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='offers_KEY', referencedColumn='null', mappedBy='null'}
2014-05-22 13:42:40,826 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='trader'}
2014-05-22 13:42:40,826 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='trader'}
2014-05-22 13:42:40,826 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Collection role: sepm.dsa.model.Trader.offers
2014-05-22 13:42:40,826 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property offers
2014-05-22 13:42:40,826 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=size, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,826 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property size with lazy=false
2014-05-22 13:42:40,826 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for size
2014-05-22 13:42:40,826 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property size
2014-05-22 13:42:40,827 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=xPos, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,827 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property xPos with lazy=false
2014-05-22 13:42:40,827 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for xPos
2014-05-22 13:42:40,827 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property xPos
2014-05-22 13:42:40,827 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traders), mappingColumn=yPos, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,827 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property yPos with lazy=false
2014-05-22 13:42:40,827 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for yPos
2014-05-22 13:42:40,827 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property yPos
2014-05-22 13:42:40,828 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: sepm.dsa.model.Product
2014-05-22 13:42:40,828 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2014-05-22 13:42:40,828 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2014-05-22 13:42:40,828 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Product
2014-05-22 13:42:40,828 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity sepm.dsa.model.Product on table products
2014-05-22 13:42:40,841 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=id, insertable=true, updatable=true, unique=true}
2014-05-22 13:42:40,841 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2014-05-22 13:42:40,841 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2014-05-22 13:42:40,841 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2014-05-22 13:42:40,842 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=attributeId, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,842 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property attributeId with lazy=false
2014-05-22 13:42:40,842 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for attributeId
2014-05-22 13:42:40,842 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property attributeId
2014-05-22 13:42:40,842 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=null, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=element, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=categories_KEY, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='categories_KEY', referencedColumn='null', mappedBy='null'}
2014-05-22 13:42:40,843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='productId', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='categoryId', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Collection role: sepm.dsa.model.Product.categories
2014-05-22 13:42:40,843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property categories
2014-05-22 13:42:40,843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=comment, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property comment with lazy=false
2014-05-22 13:42:40,843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for comment
2014-05-22 13:42:40,844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property comment
2014-05-22 13:42:40,844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=cost, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property cost with lazy=false
2014-05-22 13:42:40,844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for cost
2014-05-22 13:42:40,844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property cost
2014-05-22 13:42:40,844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=name, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2014-05-22 13:42:40,844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2014-05-22 13:42:40,844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2014-05-22 13:42:40,845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=null, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=element, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=productionRegions_KEY, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='productionRegions_KEY', referencedColumn='null', mappedBy='null'}
2014-05-22 13:42:40,845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='productId', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='regionId', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Collection role: sepm.dsa.model.Product.productionRegions
2014-05-22 13:42:40,845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property productionRegions
2014-05-22 13:42:40,845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=quality, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property quality with lazy=false
2014-05-22 13:42:40,845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for quality
2014-05-22 13:42:40,846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property quality
2014-05-22 13:42:40,846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: sepm.dsa.model.Offer
2014-05-22 13:42:40,846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2014-05-22 13:42:40,846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2014-05-22 13:42:40,846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Offer
2014-05-22 13:42:40,846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity sepm.dsa.model.Offer on table offers
2014-05-22 13:42:40,860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(offers), mappingColumn=id, insertable=true, updatable=true, unique=true}
2014-05-22 13:42:40,861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2014-05-22 13:42:40,861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2014-05-22 13:42:40,861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2014-05-22 13:42:40,861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(offers), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2014-05-22 13:42:40,861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for amount
2014-05-22 13:42:40,861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property amount
2014-05-22 13:42:40,862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(offers), mappingColumn=pricePerUnit, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property pricePerUnit with lazy=false
2014-05-22 13:42:40,862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for pricePerUnit
2014-05-22 13:42:40,862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property pricePerUnit
2014-05-22 13:42:40,862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(offers), mappingColumn=product, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property product
2014-05-22 13:42:40,862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(offers), mappingColumn=qualityId, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property qualityId with lazy=false
2014-05-22 13:42:40,862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for qualityId
2014-05-22 13:42:40,862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property qualityId
2014-05-22 13:42:40,862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(offers), mappingColumn=trader, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property trader
2014-05-22 13:42:40,863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: sepm.dsa.model.Deal
2014-05-22 13:42:40,863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2014-05-22 13:42:40,863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2014-05-22 13:42:40,863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Deal
2014-05-22 13:42:40,863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity sepm.dsa.model.Deal on table deals
2014-05-22 13:42:40,873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deals), mappingColumn=id, insertable=true, updatable=true, unique=true}
2014-05-22 13:42:40,873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2014-05-22 13:42:40,873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2014-05-22 13:42:40,873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2014-05-22 13:42:40,874 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deals), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,874 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2014-05-22 13:42:40,875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for amount
2014-05-22 13:42:40,875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property amount
2014-05-22 13:42:40,875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deals), mappingColumn=date, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2014-05-22 13:42:40,875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2014-05-22 13:42:40,875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2014-05-22 13:42:40,875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deals), mappingColumn=price, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property price with lazy=false
2014-05-22 13:42:40,876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for price
2014-05-22 13:42:40,876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property price
2014-05-22 13:42:40,876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deals), mappingColumn=purchase, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property purchase with lazy=false
2014-05-22 13:42:40,876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for purchase
2014-05-22 13:42:40,876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property purchase
2014-05-22 13:42:40,876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deals), mappingColumn=qualityId, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property qualityId with lazy=false
2014-05-22 13:42:40,876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for qualityId
2014-05-22 13:42:40,876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property qualityId
2014-05-22 13:42:40,876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,877 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deals), mappingColumn=trader, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,877 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property trader
2014-05-22 13:42:40,877 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: sepm.dsa.model.TraderCategory
2014-05-22 13:42:40,877 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2014-05-22 13:42:40,877 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2014-05-22 13:42:40,877 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TraderCategory
2014-05-22 13:42:40,877 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity sepm.dsa.model.TraderCategory on table traderCategories
2014-05-22 13:42:40,879 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traderCategories), mappingColumn=id, insertable=true, updatable=true, unique=true}
2014-05-22 13:42:40,879 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2014-05-22 13:42:40,879 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2014-05-22 13:42:40,879 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traderCategories), mappingColumn=assortments, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traderCategories), mappingColumn=null, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traderCategories), mappingColumn=element, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traderCategories), mappingColumn=assortments_KEY, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='assortments_KEY', referencedColumn='null', mappedBy='null'}
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Collection role: sepm.dsa.model.TraderCategory.assortments
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property assortments
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traderCategories), mappingColumn=comment, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property comment with lazy=false
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for comment
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property comment
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(traderCategories), mappingColumn=name, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2014-05-22 13:42:40,880 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2014-05-22 13:42:40,881 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: sepm.dsa.model.AssortmentNature
2014-05-22 13:42:40,884 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2014-05-22 13:42:40,884 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2014-05-22 13:42:40,884 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name AssortmentNature
2014-05-22 13:42:40,884 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity sepm.dsa.model.AssortmentNature on table assortmentNatures
2014-05-22 13:42:40,887 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(assortmentNatures), mappingColumn=id, insertable=true, updatable=true, unique=true}
2014-05-22 13:42:40,887 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2014-05-22 13:42:40,888 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2014-05-22 13:42:40,888 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2014-05-22 13:42:40,888 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(assortmentNatures), mappingColumn=defaultOccurence, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,888 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property defaultOccurence with lazy=false
2014-05-22 13:42:40,888 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for defaultOccurence
2014-05-22 13:42:40,888 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property defaultOccurence
2014-05-22 13:42:40,888 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2014-05-22 13:42:40,888 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(assortmentNatures), mappingColumn=productCategory, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,889 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property productCategory
2014-05-22 13:42:40,889 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,889 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(assortmentNatures), mappingColumn=traderCategory, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,889 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property traderCategory
2014-05-22 13:42:40,889 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: sepm.dsa.model.ProductCategory
2014-05-22 13:42:40,889 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2014-05-22 13:42:40,889 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2014-05-22 13:42:40,889 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name ProductCategory
2014-05-22 13:42:40,889 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity sepm.dsa.model.ProductCategory on table productCategories
2014-05-22 13:42:40,891 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(productCategories), mappingColumn=id, insertable=true, updatable=true, unique=true}
2014-05-22 13:42:40,891 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2014-05-22 13:42:40,892 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2014-05-22 13:42:40,892 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2014-05-22 13:42:40,892 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='parent'}
2014-05-22 13:42:40,892 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(productCategories), mappingColumn=childs, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,892 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(productCategories), mappingColumn=null, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,892 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(productCategories), mappingColumn=element, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,892 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(productCategories), mappingColumn=childs_KEY, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,892 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='childs_KEY', referencedColumn='null', mappedBy='null'}
2014-05-22 13:42:40,892 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='parent'}
2014-05-22 13:42:40,892 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='parent'}
2014-05-22 13:42:40,893 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Collection role: sepm.dsa.model.ProductCategory.childs
2014-05-22 13:42:40,893 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property childs
2014-05-22 13:42:40,893 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(productCategories), mappingColumn=name, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,893 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2014-05-22 13:42:40,893 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2014-05-22 13:42:40,893 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2014-05-22 13:42:40,893 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2014-05-22 13:42:40,893 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(productCategories), mappingColumn=parent, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,893 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property parent
2014-05-22 13:42:40,893 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(productCategories), mappingColumn=null, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,894 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(productCategories), mappingColumn=element, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,894 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(productCategories), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,894 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
2014-05-22 13:42:40,894 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='categoryId', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,894 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='productId', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,894 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Collection role: sepm.dsa.model.ProductCategory.products
2014-05-22 13:42:40,894 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property products
2014-05-22 13:42:40,894 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: sepm.dsa.model.Location
2014-05-22 13:42:40,894 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2014-05-22 13:42:40,894 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2014-05-22 13:42:40,894 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Location
2014-05-22 13:42:40,894 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity sepm.dsa.model.Location on table locations
2014-05-22 13:42:40,898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=id, insertable=true, updatable=true, unique=true}
2014-05-22 13:42:40,898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2014-05-22 13:42:40,898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2014-05-22 13:42:40,898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2014-05-22 13:42:40,898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=comment, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property comment with lazy=false
2014-05-22 13:42:40,898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for comment
2014-05-22 13:42:40,898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property comment
2014-05-22 13:42:40,898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=height, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,899 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property height with lazy=false
2014-05-22 13:42:40,899 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for height
2014-05-22 13:42:40,899 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property height
2014-05-22 13:42:40,899 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=name, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,899 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2014-05-22 13:42:40,899 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2014-05-22 13:42:40,899 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2014-05-22 13:42:40,899 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=planFileName, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,899 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property planFileName with lazy=false
2014-05-22 13:42:40,899 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for planFileName
2014-05-22 13:42:40,899 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property planFileName
2014-05-22 13:42:40,900 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='region', referencedColumn='', mappedBy=''}
2014-05-22 13:42:40,900 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=region, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,900 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property region
2014-05-22 13:42:40,900 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=sizeId, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,900 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property sizeId with lazy=false
2014-05-22 13:42:40,901 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for sizeId
2014-05-22 13:42:40,901 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property sizeId
2014-05-22 13:42:40,901 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=weatherId, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,901 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property weatherId with lazy=false
2014-05-22 13:42:40,901 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for weatherId
2014-05-22 13:42:40,901 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property weatherId
2014-05-22 13:42:40,901 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=xCoord, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,902 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property xCoord with lazy=false
2014-05-22 13:42:40,902 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for xCoord
2014-05-22 13:42:40,903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property xCoord
2014-05-22 13:42:40,903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=yCoord, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property yCoord with lazy=false
2014-05-22 13:42:40,903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for yCoord
2014-05-22 13:42:40,903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property yCoord
2014-05-22 13:42:40,903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: sepm.dsa.model.ProductUnit
2014-05-22 13:42:40,903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2014-05-22 13:42:40,903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2014-05-22 13:42:40,903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name ProductUnit
2014-05-22 13:42:40,904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity sepm.dsa.model.ProductUnit on table ProductUnit
2014-05-22 13:42:40,905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ProductUnit), mappingColumn=id, insertable=true, updatable=true, unique=true}
2014-05-22 13:42:40,905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2014-05-22 13:42:40,905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2014-05-22 13:42:40,905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2014-05-22 13:42:40,905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ProductUnit), mappingColumn=name, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2014-05-22 13:42:40,906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2014-05-22 13:42:40,906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2014-05-22 13:42:40,906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ProductUnit), mappingColumn=unitType, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property unitType with lazy=false
2014-05-22 13:42:40,906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for unitType
2014-05-22 13:42:40,906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property unitType
2014-05-22 13:42:40,906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ProductUnit), mappingColumn=value, insertable=true, updatable=true, unique=false}
2014-05-22 13:42:40,906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property value with lazy=false
2014-05-22 13:42:40,906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for value
2014-05-22 13:42:40,906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property value
2014-05-22 13:42:40,907 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for id
2014-05-22 13:42:40,907 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for color
2014-05-22 13:42:40,907 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for comment
2014-05-22 13:42:40,907 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for name
2014-05-22 13:42:40,907 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for rainfallChanceId
2014-05-22 13:42:40,907 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for temperatureId
2014-05-22 13:42:40,907 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for borderCost
2014-05-22 13:42:40,907 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for id
2014-05-22 13:42:40,907 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for charisma
2014-05-22 13:42:40,907 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for comment
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for convince
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for intelligence
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for mut
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for name
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for size
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for xPos
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for yPos
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for id
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for attributeId
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for comment
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for cost
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for name
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for quality
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for id
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for amount
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for pricePerUnit
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for qualityId
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for id
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for amount
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for date
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for price
2014-05-22 13:42:40,910 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for purchase
2014-05-22 13:42:40,911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for qualityId
2014-05-22 13:42:40,911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for id
2014-05-22 13:42:40,911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for comment
2014-05-22 13:42:40,911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for name
2014-05-22 13:42:40,911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for id
2014-05-22 13:42:40,911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for defaultOccurence
2014-05-22 13:42:40,911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for id
2014-05-22 13:42:40,911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for name
2014-05-22 13:42:40,911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for id
2014-05-22 13:42:40,911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for comment
2014-05-22 13:42:40,911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for height
2014-05-22 13:42:40,911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for name
2014-05-22 13:42:40,911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for planFileName
2014-05-22 13:42:40,912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for sizeId
2014-05-22 13:42:40,912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for weatherId
2014-05-22 13:42:40,912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for xCoord
2014-05-22 13:42:40,912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for yCoord
2014-05-22 13:42:40,912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for id
2014-05-22 13:42:40,912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for name
2014-05-22 13:42:40,912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for unitType
2014-05-22 13:42:40,912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for value
2014-05-22 13:42:40,913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
2014-05-22 13:42:40,920 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2014-05-22 13:42:40,920 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2014-05-22 13:42:40,921 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing collection mappings
2014-05-22 13:42:40,921 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Second pass for collection: sepm.dsa.model.ProductCategory.products
2014-05-22 13:42:40,921 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Binding as ManyToMany: sepm.dsa.model.ProductCategory.products
2014-05-22 13:42:40,924 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Mapped collection key: categoryId, element: productId
2014-05-22 13:42:40,924 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Second pass for collection: sepm.dsa.model.TraderCategory.assortments
2014-05-22 13:42:40,924 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Binding a OneToMany: sepm.dsa.model.TraderCategory.assortments through a foreign key
2014-05-22 13:42:40,925 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Mapping collection: sepm.dsa.model.TraderCategory.assortments -> assortmentNatures
2014-05-22 13:42:40,925 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Mapped collection key: assortments_id, one-to-many: sepm.dsa.model.AssortmentNature
2014-05-22 13:42:40,925 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Second pass for collection: sepm.dsa.model.Product.productionRegions
2014-05-22 13:42:40,925 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Binding as ManyToMany: sepm.dsa.model.Product.productionRegions
2014-05-22 13:42:40,926 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Mapped collection key: productId, element: regionId
2014-05-22 13:42:40,926 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Second pass for collection: sepm.dsa.model.Product.categories
2014-05-22 13:42:40,926 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Binding as ManyToMany: sepm.dsa.model.Product.categories
2014-05-22 13:42:40,926 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Mapped collection key: productId, element: categoryId
2014-05-22 13:42:40,926 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Second pass for collection: sepm.dsa.model.Region.products
2014-05-22 13:42:40,926 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Binding as ManyToMany: sepm.dsa.model.Region.products
2014-05-22 13:42:40,926 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Mapped collection key: regionId, element: productId
2014-05-22 13:42:40,926 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Second pass for collection: sepm.dsa.model.Region.borders1
2014-05-22 13:42:40,926 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Binding a OneToMany: sepm.dsa.model.Region.borders1 through a foreign key
2014-05-22 13:42:40,926 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Mapping collection: sepm.dsa.model.Region.borders1 -> borders
2014-05-22 13:42:40,926 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder - Retrieving property sepm.dsa.model.RegionBorder.pk.region1
2014-05-22 13:42:40,927 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Mapped collection key: region1, one-to-many: sepm.dsa.model.RegionBorder
2014-05-22 13:42:40,927 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Second pass for collection: sepm.dsa.model.Region.borders2
2014-05-22 13:42:40,927 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Binding a OneToMany: sepm.dsa.model.Region.borders2 through a foreign key
2014-05-22 13:42:40,927 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Mapping collection: sepm.dsa.model.Region.borders2 -> borders
2014-05-22 13:42:40,927 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder - Retrieving property sepm.dsa.model.RegionBorder.pk.region2
2014-05-22 13:42:40,927 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Mapped collection key: region2, one-to-many: sepm.dsa.model.RegionBorder
2014-05-22 13:42:40,927 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Second pass for collection: sepm.dsa.model.Trader.deals
2014-05-22 13:42:40,928 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Binding a OneToMany: sepm.dsa.model.Trader.deals through a foreign key
2014-05-22 13:42:40,928 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Mapping collection: sepm.dsa.model.Trader.deals -> deals
2014-05-22 13:42:40,928 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder - Retrieving property sepm.dsa.model.Deal.trader
2014-05-22 13:42:40,928 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Mapped collection key: trader_id, one-to-many: sepm.dsa.model.Deal
2014-05-22 13:42:40,928 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Second pass for collection: sepm.dsa.model.Trader.offers
2014-05-22 13:42:40,928 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Binding a OneToMany: sepm.dsa.model.Trader.offers through a foreign key
2014-05-22 13:42:40,928 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Mapping collection: sepm.dsa.model.Trader.offers -> offers
2014-05-22 13:42:40,928 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder - Retrieving property sepm.dsa.model.Offer.trader
2014-05-22 13:42:40,928 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Mapped collection key: trader_id, one-to-many: sepm.dsa.model.Offer
2014-05-22 13:42:40,928 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Second pass for collection: sepm.dsa.model.ProductCategory.childs
2014-05-22 13:42:40,928 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Binding a OneToMany: sepm.dsa.model.ProductCategory.childs through a foreign key
2014-05-22 13:42:40,928 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Mapping collection: sepm.dsa.model.ProductCategory.childs -> productCategories
2014-05-22 13:42:40,928 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder - Retrieving property sepm.dsa.model.ProductCategory.parent
2014-05-22 13:42:40,928 [JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass - Mapped collection key: parent_id, one-to-many: sepm.dsa.model.ProductCategory
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing association property references
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.ProductCategory
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.TraderCategory
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.TraderCategory
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Region
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Region
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Trader
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Region
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Product
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Trader
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.ProductCategory
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Product
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.ProductCategory
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Region
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Product
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.TraderCategory
2014-05-22 13:42:40,929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Location
2014-05-22 13:42:40,944 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
2014-05-22 13:42:40,944 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
2014-05-22 13:42:40,944 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
2014-05-22 13:42:40,944 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
2014-05-22 13:42:40,944 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
2014-05-22 13:42:40,944 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled
2014-05-22 13:42:40,944 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
2014-05-22 13:42:40,944 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE
2014-05-22 13:42:40,944 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Connection release mode: auto
2014-05-22 13:42:40,944 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2014-05-22 13:42:40,947 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Using BatchFetchStyle : LEGACY
2014-05-22 13:42:40,947 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
2014-05-22 13:42:40,947 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
2014-05-22 13:42:40,947 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
2014-05-22 13:42:40,947 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
2014-05-22 13:42:40,947 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default null ordering: none
2014-05-22 13:42:40,947 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2014-05-22 13:42:40,949 [JavaFX Application Thread] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2014-05-22 13:42:40,950 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
2014-05-22 13:42:40,950 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled
2014-05-22 13:42:40,950 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
2014-05-22 13:42:40,950 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query cache: disabled
2014-05-22 13:42:40,950 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2014-05-22 13:42:40,951 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2014-05-22 13:42:40,951 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
2014-05-22 13:42:40,951 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
2014-05-22 13:42:40,951 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache direct-reference entries: disabled
2014-05-22 13:42:40,951 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Statistics: disabled
2014-05-22 13:42:40,951 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
2014-05-22 13:42:40,951 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
2014-05-22 13:42:40,951 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Named query checking : enabled
2014-05-22 13:42:40,951 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2014-05-22 13:42:40,951 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled
2014-05-22 13:42:40,951 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JTA Track by Thread: enabled
2014-05-22 13:42:40,958 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2014-05-22 13:42:40,967 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2014-05-22 13:42:40,967 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {javafx.version=8.0.5, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_05\jre\bin, java.vm.version=25.5-b02, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, idea.launcher.port=7532, user.script=, user.country=AT, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\tu\semester\4\ue_ss14\workspace\tu-sepm-dsa, java.runtime.version=1.8.0_05-b13, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javafx.runtime.version=8.0.5-b13, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_05\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\Michael\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.8.0_05\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\ProgramData\Lenovo\ReadyApps;C:\Program Files\apache-maven-3.2.1\bin;%ANT_HOME%\bin;%COMMANDS%;C:\Program Files\Java\jdk1.8.0_05\bin;D:\commands;C:\server\postgres\postgres93\bin;C:\server\mysql\MySQL Server 5.6\bin;C:\Program Files\TortoiseSVN\bin;C:\server\hsqldb\hsqldb23\bin;C:\Program Files (x86)\GNU\GnuPG\pub;C:\server\play\play-2.2.2;., hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@5dba3b73, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\Michael, user.timezone=Europe/Berlin, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA 13.1.1\bin, file.encoding=UTF-8, user.name=Michael, java.class.path=C:\Program Files\Java\jdk1.8.0_05\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\ext\zipfs.jar;D:\tu\semester\4\ue_ss14\workspace\tu-sepm-dsa\target\classes;C:\Users\Michael\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Michael\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Michael\.m2\repository\org\slf4j\slf4j-simple\1.6.2\slf4j-simple-1.6.2.jar;C:\Users\Michael\.m2\repository\org\slf4j\slf4j-api\1.6.2\slf4j-api-1.6.2.jar;C:\Users\Michael\.m2\repository\org\hibernate\hibernate-core\4.2.5.Final\hibernate-core-4.2.5.Final.jar;C:\Users\Michael\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Michael\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Michael\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Michael\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;C:\Users\Michael\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Michael\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.2.Final\hibernate-commons-annotations-4.0.2.Final.jar;C:\Users\Michael\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Michael\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Michael\.m2\repository\org\hibernate\hibernate-validator\5.1.0.Final\hibernate-validator-5.1.0.Final.jar;C:\Users\Michael\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\Michael\.m2\repository\com\fasterxml\classmate\1.0.0\classmate-1.0.0.jar;C:\Users\Michael\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar;C:\Users\Michael\.m2\repository\org\glassfish\web\javax.el\2.2.4\javax.el-2.2.4.jar;C:\Users\Michael\.m2\repository\org\springframework\spring-core\3.2.4.RELEASE\spring-core-3.2.4.RELEASE.jar;C:\Users\Michael\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Michael\.m2\repository\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;C:\Users\Michael\.m2\repository\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;C:\Users\Michael\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Michael\.m2\repository\org\springframework\spring-beans\3.2.4.RELEASE\spring-beans-3.2.4.RELEASE.jar;C:\Users\Michael\.m2\repository\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;C:\Users\Michael\.m2\repository\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;C:\Users\Michael\.m2\repository\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;C:\Users\Michael\.m2\repository\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;C:\Users\Michael\.m2\repository\org\hsqldb\hsqldb\2.3.2\hsqldb-2.3.2.jar;C:\Users\Michael\.m2\repository\org\controlsfx\controlsfx\8.0.5\controlsfx-8.0.5.jar;C:\Users\Michael\.m2\repository\org\jgrapht\jgrapht-core\0.9.0\jgrapht-core-0.9.0.jar;C:\Users\Michael\.m2\repository\com\tngtech\java\junit-dataprovider\1.6.0\junit-dataprovider-1.6.0.jar;C:\Users\Michael\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Michael\.m2\repository\commons-io\commons-io\1.3.2\commons-io-1.3.2.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA 13.1.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@279f2327, javax.persistence.validation.mode=none, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0_05\jre, sun.java.command=com.intellij.rt.execution.application.AppMain sepm.dsa.application.Main, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.specification.vendor=Oracle Corporation, user.language=de, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_05, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_05\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_05\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_05\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_05\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2014-05-22 13:42:40,977 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:40,977 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:40,977 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:40,978 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:40,978 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:40,978 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:40,978 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:40,978 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:40,978 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:40,979 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,056 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: sepm.dsa.model.Region
2014-05-22 13:42:41,056 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from regions where id =?
2014-05-22 13:42:41,056 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select region_.id, region_.color as color2_10_, region_.comment as comment3_10_, region_.name as name4_10_, region_.rainfallChanceId as rainfall5_10_, region_.temperatureId as temperat6_10_ from regions region_ where region_.id=?
2014-05-22 13:42:41,056 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into regions (color, comment, name, rainfallChanceId, temperatureId, id) values (?, ?, ?, ?, ?, ?)
2014-05-22 13:42:41,057 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update regions set color=?, comment=?, name=?, rainfallChanceId=?, temperatureId=? where id=?
2014-05-22 13:42:41,057 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from regions where id=?
2014-05-22 13:42:41,057 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into regions (id, color, comment, name, rainfallChanceId, temperatureId) values (default, ?, ?, ?, ?, ?)
2014-05-22 13:42:41,060 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: sepm.dsa.model.ProductCategory
2014-05-22 13:42:41,060 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from productCategories where id =?
2014-05-22 13:42:41,060 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select productcat_.id, productcat_.name as name2_6_, productcat_.parent_id as parent_i3_6_ from productCategories productcat_ where productcat_.id=?
2014-05-22 13:42:41,060 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into productCategories (name, parent_id, id) values (?, ?, ?)
2014-05-22 13:42:41,060 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update productCategories set name=?, parent_id=? where id=?
2014-05-22 13:42:41,060 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from productCategories where id=?
2014-05-22 13:42:41,060 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into productCategories (id, name, parent_id) values (default, ?, ?)
2014-05-22 13:42:41,064 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: sepm.dsa.model.Deal
2014-05-22 13:42:41,064 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from deals where id =?
2014-05-22 13:42:41,064 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select deal_.id, deal_.amount as amount2_3_, deal_.date as date3_3_, deal_.price as price4_3_, deal_.purchase as purchase5_3_, deal_.qualityId as qualityI6_3_, deal_.trader_id as trader_i7_3_ from deals deal_ where deal_.id=?
2014-05-22 13:42:41,064 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into deals (amount, date, price, purchase, qualityId, trader_id, id) values (?, ?, ?, ?, ?, ?, ?)
2014-05-22 13:42:41,064 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update deals set amount=?, date=?, price=?, purchase=?, qualityId=?, trader_id=? where id=?
2014-05-22 13:42:41,064 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from deals where id=?
2014-05-22 13:42:41,064 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into deals (id, amount, date, price, purchase, qualityId, trader_id) values (default, ?, ?, ?, ?, ?, ?)
2014-05-22 13:42:41,069 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: sepm.dsa.model.TraderCategory
2014-05-22 13:42:41,069 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from traderCategories where id =?
2014-05-22 13:42:41,069 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tradercate_.id, tradercate_.comment as comment2_11_, tradercate_.name as name3_11_ from traderCategories tradercate_ where tradercate_.id=?
2014-05-22 13:42:41,069 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into traderCategories (comment, name, id) values (?, ?, ?)
2014-05-22 13:42:41,069 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update traderCategories set comment=?, name=? where id=?
2014-05-22 13:42:41,069 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from traderCategories where id=?
2014-05-22 13:42:41,069 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into traderCategories (id, comment, name) values (default, ?, ?)
2014-05-22 13:42:41,075 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: sepm.dsa.model.Product
2014-05-22 13:42:41,075 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from products where id =?
2014-05-22 13:42:41,075 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select product_.id, product_.attributeId as attribut2_9_, product_.comment as comment3_9_, product_.cost as cost4_9_, product_.name as name5_9_, product_.quality as quality6_9_ from products product_ where product_.id=?
2014-05-22 13:42:41,075 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into products (attributeId, comment, cost, name, quality, id) values (?, ?, ?, ?, ?, ?)
2014-05-22 13:42:41,075 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update products set attributeId=?, comment=?, cost=?, name=?, quality=? where id=?
2014-05-22 13:42:41,075 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from products where id=?
2014-05-22 13:42:41,075 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into products (id, attributeId, comment, cost, name, quality) values (default, ?, ?, ?, ?, ?)
2014-05-22 13:42:41,078 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: sepm.dsa.model.ProductUnit
2014-05-22 13:42:41,078 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from ProductUnit where id =?
2014-05-22 13:42:41,078 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select productuni_.id, productuni_.name as name2_0_, productuni_.unitType as unitType3_0_, productuni_.value as value4_0_ from ProductUnit productuni_ where productuni_.id=?
2014-05-22 13:42:41,078 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into ProductUnit (name, unitType, value, id) values (?, ?, ?, ?)
2014-05-22 13:42:41,078 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update ProductUnit set name=?, unitType=?, value=? where id=?
2014-05-22 13:42:41,078 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from ProductUnit where id=?
2014-05-22 13:42:41,078 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into ProductUnit (id, name, unitType, value) values (default, ?, ?, ?)
2014-05-22 13:42:41,081 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: sepm.dsa.model.RegionBorder
2014-05-22 13:42:41,081 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select region1, region2 from borders where region1 =? and region2 =?
2014-05-22 13:42:41,081 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select regionbord_.region1, regionbord_.region2, regionbord_.borderCost as borderCo1_2_ from borders regionbord_ where regionbord_.region1=? and regionbord_.region2=?
2014-05-22 13:42:41,081 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into borders (borderCost, region1, region2) values (?, ?, ?)
2014-05-22 13:42:41,081 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update borders set borderCost=? where region1=? and region2=?
2014-05-22 13:42:41,081 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from borders where region1=? and region2=?
2014-05-22 13:42:41,086 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: sepm.dsa.model.Trader
2014-05-22 13:42:41,086 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from traders where id =?
2014-05-22 13:42:41,086 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select trader_.id, trader_.category_id as categor11_12_, trader_.charisma as charisma2_12_, trader_.comment as comment3_12_, trader_.convince as convince4_12_, trader_.intelligence as intellig5_12_, trader_.location_id as locatio12_12_, trader_.mut as mut6_12_, trader_.name as name7_12_, trader_.size as size8_12_, trader_.xPos as xPos9_12_, trader_.yPos as yPos10_12_ from traders trader_ where trader_.id=?
2014-05-22 13:42:41,086 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into traders (category_id, charisma, comment, convince, intelligence, location_id, mut, name, size, xPos, yPos, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-05-22 13:42:41,086 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update traders set category_id=?, charisma=?, comment=?, convince=?, intelligence=?, location_id=?, mut=?, name=?, size=?, xPos=?, yPos=? where id=?
2014-05-22 13:42:41,086 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from traders where id=?
2014-05-22 13:42:41,086 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into traders (id, category_id, charisma, comment, convince, intelligence, location_id, mut, name, size, xPos, yPos) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-05-22 13:42:41,092 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: sepm.dsa.model.Location
2014-05-22 13:42:41,092 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from locations where id =?
2014-05-22 13:42:41,092 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select location_.id, location_.comment as comment2_4_, location_.height as height3_4_, location_.name as name4_4_, location_.planFileName as planFile5_4_, location_.region as region10_4_, location_.sizeId as sizeId6_4_, location_.weatherId as weatherI7_4_, location_.xCoord as xCoord8_4_, location_.yCoord as yCoord9_4_ from locations location_ where location_.id=?
2014-05-22 13:42:41,092 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into locations (comment, height, name, planFileName, region, sizeId, weatherId, xCoord, yCoord, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-05-22 13:42:41,092 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update locations set comment=?, height=?, name=?, planFileName=?, region=?, sizeId=?, weatherId=?, xCoord=?, yCoord=? where id=?
2014-05-22 13:42:41,092 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from locations where id=?
2014-05-22 13:42:41,092 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into locations (id, comment, height, name, planFileName, region, sizeId, weatherId, xCoord, yCoord) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-05-22 13:42:41,095 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: sepm.dsa.model.AssortmentNature
2014-05-22 13:42:41,096 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from assortmentNatures where id =?
2014-05-22 13:42:41,096 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select assortment_.id, assortment_.defaultOccurence as defaultO2_1_, assortment_.productCategory_id as productC3_1_, assortment_.traderCategory_id as traderCa4_1_ from assortmentNatures assortment_ where assortment_.id=?
2014-05-22 13:42:41,096 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into assortmentNatures (defaultOccurence, productCategory_id, traderCategory_id, id) values (?, ?, ?, ?)
2014-05-22 13:42:41,096 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update assortmentNatures set defaultOccurence=?, productCategory_id=?, traderCategory_id=? where id=?
2014-05-22 13:42:41,096 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from assortmentNatures where id=?
2014-05-22 13:42:41,096 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into assortmentNatures (id, defaultOccurence, productCategory_id, traderCategory_id) values (default, ?, ?, ?)
2014-05-22 13:42:41,099 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: sepm.dsa.model.Offer
2014-05-22 13:42:41,099 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from offers where id =?
2014-05-22 13:42:41,099 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select offer_.id, offer_.amount as amount2_5_, offer_.pricePerUnit as pricePer3_5_, offer_.product_id as product_5_5_, offer_.qualityId as qualityI4_5_, offer_.trader_id as trader_i6_5_ from offers offer_ where offer_.id=?
2014-05-22 13:42:41,099 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into offers (amount, pricePerUnit, product_id, qualityId, trader_id, id) values (?, ?, ?, ?, ?, ?)
2014-05-22 13:42:41,099 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update offers set amount=?, pricePerUnit=?, product_id=?, qualityId=?, trader_id=? where id=?
2014-05-22 13:42:41,099 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from offers where id=?
2014-05-22 13:42:41,099 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into offers (id, amount, pricePerUnit, product_id, qualityId, trader_id) values (default, ?, ?, ?, ?, ?)
2014-05-22 13:42:41,106 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: sepm.dsa.model.Trader.offers
2014-05-22 13:42:41,106 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update offers set trader_id=? where id=?
2014-05-22 13:42:41,106 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update offers set  where id=?
2014-05-22 13:42:41,106 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update offers set trader_id=null where trader_id=? and id=?
2014-05-22 13:42:41,106 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update offers set trader_id=null where trader_id=?
2014-05-22 13:42:41,108 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: sepm.dsa.model.ProductCategory.products
2014-05-22 13:42:41,108 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: insert into product_categories (categoryId, productId) values (?, ?)
2014-05-22 13:42:41,108 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update product_categories set productId=? where categoryId=? and productId=?
2014-05-22 13:42:41,108 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: delete from product_categories where categoryId=? and productId=?
2014-05-22 13:42:41,108 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: delete from product_categories where categoryId=?
2014-05-22 13:42:41,108 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: sepm.dsa.model.Product.categories
2014-05-22 13:42:41,108 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: insert into product_categories (productId, categoryId) values (?, ?)
2014-05-22 13:42:41,108 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update product_categories set categoryId=? where productId=? and categoryId=?
2014-05-22 13:42:41,108 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: delete from product_categories where productId=? and categoryId=?
2014-05-22 13:42:41,108 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: delete from product_categories where productId=?
2014-05-22 13:42:41,108 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: sepm.dsa.model.Product.productionRegions
2014-05-22 13:42:41,108 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: insert into product_regions (productId, regionId) values (?, ?)
2014-05-22 13:42:41,108 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update product_regions set regionId=? where productId=? and regionId=?
2014-05-22 13:42:41,108 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: delete from product_regions where productId=? and regionId=?
2014-05-22 13:42:41,108 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: delete from product_regions where productId=?
2014-05-22 13:42:41,108 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: sepm.dsa.model.TraderCategory.assortments
2014-05-22 13:42:41,109 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update assortmentNatures set assortments_id=? where id=?
2014-05-22 13:42:41,109 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update assortmentNatures set  where id=?
2014-05-22 13:42:41,109 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update assortmentNatures set assortments_id=null where assortments_id=? and id=?
2014-05-22 13:42:41,109 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update assortmentNatures set assortments_id=null where assortments_id=?
2014-05-22 13:42:41,109 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: sepm.dsa.model.ProductCategory.childs
2014-05-22 13:42:41,109 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update productCategories set parent_id=? where id=?
2014-05-22 13:42:41,109 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update productCategories set  where id=?
2014-05-22 13:42:41,109 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update productCategories set parent_id=null where parent_id=? and id=?
2014-05-22 13:42:41,109 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update productCategories set parent_id=null where parent_id=?
2014-05-22 13:42:41,109 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: sepm.dsa.model.Region.borders1
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update borders set region1=? where region1=? and region2=?
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update borders set  where region1=? and region2=?
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update borders set region1=null where region1=? and region2=?
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update borders set region1=null where region1=?
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: sepm.dsa.model.Region.borders2
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update borders set region2=? where region1=? and region2=?
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update borders set  where region1=? and region2=?
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update borders set region2=null where region2=? and region1=?
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update borders set region2=null where region2=?
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: sepm.dsa.model.Region.products
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: insert into product_regions (regionId, productId) values (?, ?)
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update product_regions set productId=? where regionId=? and productId=?
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: delete from product_regions where regionId=? and productId=?
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: delete from product_regions where regionId=?
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: sepm.dsa.model.Trader.deals
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update deals set trader_id=? where id=?
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update deals set  where id=?
2014-05-22 13:42:41,110 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update deals set trader_id=null where trader_id=? and id=?
2014-05-22 13:42:41,111 [JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update deals set trader_id=null where trader_id=?
2014-05-22 13:42:41,137 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Region [NONE]: select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:41,138 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Region [READ]: select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:41,140 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Region [UPGRADE]: select region0_.id as id1_10_0_, region0_.color as color2_10_0_, region0_.comment as comment3_10_0_, region0_.name as name4_10_0_, region0_.rainfallChanceId as rainfall5_10_0_, region0_.temperatureId as temperat6_10_0_ from regions region0_ where region0_.id=?
2014-05-22 13:42:41,140 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Region [UPGRADE_NOWAIT]: select region0_.id as id1_10_0_, region0_.color as color2_10_0_, region0_.comment as comment3_10_0_, region0_.name as name4_10_0_, region0_.rainfallChanceId as rainfall5_10_0_, region0_.temperatureId as temperat6_10_0_ from regions region0_ where region0_.id=?
2014-05-22 13:42:41,141 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Region [FORCE]: select region0_.id as id1_10_0_, region0_.color as color2_10_0_, region0_.comment as comment3_10_0_, region0_.name as name4_10_0_, region0_.rainfallChanceId as rainfall5_10_0_, region0_.temperatureId as temperat6_10_0_ from regions region0_ where region0_.id=?
2014-05-22 13:42:41,141 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Region [PESSIMISTIC_READ]: select region0_.id as id1_10_0_, region0_.color as color2_10_0_, region0_.comment as comment3_10_0_, region0_.name as name4_10_0_, region0_.rainfallChanceId as rainfall5_10_0_, region0_.temperatureId as temperat6_10_0_ from regions region0_ where region0_.id=?
2014-05-22 13:42:41,141 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Region [PESSIMISTIC_WRITE]: select region0_.id as id1_10_0_, region0_.color as color2_10_0_, region0_.comment as comment3_10_0_, region0_.name as name4_10_0_, region0_.rainfallChanceId as rainfall5_10_0_, region0_.temperatureId as temperat6_10_0_ from regions region0_ where region0_.id=?
2014-05-22 13:42:41,141 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Region [PESSIMISTIC_FORCE_INCREMENT]: select region0_.id as id1_10_0_, region0_.color as color2_10_0_, region0_.comment as comment3_10_0_, region0_.name as name4_10_0_, region0_.rainfallChanceId as rainfall5_10_0_, region0_.temperatureId as temperat6_10_0_ from regions region0_ where region0_.id=?
2014-05-22 13:42:41,142 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Region [OPTIMISTIC]: select region0_.id as id1_10_0_, region0_.color as color2_10_0_, region0_.comment as comment3_10_0_, region0_.name as name4_10_0_, region0_.rainfallChanceId as rainfall5_10_0_, region0_.temperatureId as temperat6_10_0_ from regions region0_ where region0_.id=?
2014-05-22 13:42:41,143 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Region [OPTIMISTIC_FORCE_INCREMENT]: select region0_.id as id1_10_0_, region0_.color as color2_10_0_, region0_.comment as comment3_10_0_, region0_.name as name4_10_0_, region0_.rainfallChanceId as rainfall5_10_0_, region0_.temperatureId as temperat6_10_0_ from regions region0_ where region0_.id=?
2014-05-22 13:42:41,165 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity sepm.dsa.model.Region: select region0_.id as id1_10_1_, region0_.color as color2_10_1_, region0_.comment as comment3_10_1_, region0_.name as name4_10_1_, region0_.rainfallChanceId as rainfall5_10_1_, region0_.temperatureId as temperat6_10_1_, borders1x1_.region1 as region3_10_3_, borders1x1_.region1 as region3_2_3_, borders1x1_.region2 as region2_2_3_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 where region0_.id=?
2014-05-22 13:42:41,165 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity sepm.dsa.model.Region: select region0_.id as id1_10_1_, region0_.color as color2_10_1_, region0_.comment as comment3_10_1_, region0_.name as name4_10_1_, region0_.rainfallChanceId as rainfall5_10_1_, region0_.temperatureId as temperat6_10_1_, borders1x1_.region1 as region3_10_3_, borders1x1_.region1 as region3_2_3_, borders1x1_.region2 as region2_2_3_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 where region0_.id=?
2014-05-22 13:42:41,166 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductCategory [NONE]: select productcat0_.id as id1_6_2_, productcat0_.name as name2_6_2_, productcat0_.parent_id as parent_i3_6_2_, productcat1_.id as id1_6_0_, productcat1_.name as name2_6_0_, productcat1_.parent_id as parent_i3_6_0_, products2_.categoryId as category1_6_4_, product3_.id as productI2_7_4_, product3_.id as id1_9_1_, product3_.attributeId as attribut2_9_1_, product3_.comment as comment3_9_1_, product3_.cost as cost4_9_1_, product3_.name as name5_9_1_, product3_.quality as quality6_9_1_ from productCategories productcat0_ left outer join productCategories productcat1_ on productcat0_.parent_id=productcat1_.id left outer join product_categories products2_ on productcat1_.id=products2_.categoryId left outer join products product3_ on products2_.productId=product3_.id where productcat0_.id=?
2014-05-22 13:42:41,167 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductCategory [READ]: select productcat0_.id as id1_6_2_, productcat0_.name as name2_6_2_, productcat0_.parent_id as parent_i3_6_2_, productcat1_.id as id1_6_0_, productcat1_.name as name2_6_0_, productcat1_.parent_id as parent_i3_6_0_, products2_.categoryId as category1_6_4_, product3_.id as productI2_7_4_, product3_.id as id1_9_1_, product3_.attributeId as attribut2_9_1_, product3_.comment as comment3_9_1_, product3_.cost as cost4_9_1_, product3_.name as name5_9_1_, product3_.quality as quality6_9_1_ from productCategories productcat0_ left outer join productCategories productcat1_ on productcat0_.parent_id=productcat1_.id left outer join product_categories products2_ on productcat1_.id=products2_.categoryId left outer join products product3_ on products2_.productId=product3_.id where productcat0_.id=?
2014-05-22 13:42:41,167 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductCategory [UPGRADE]: select productcat0_.id as id1_6_0_, productcat0_.name as name2_6_0_, productcat0_.parent_id as parent_i3_6_0_ from productCategories productcat0_ where productcat0_.id=?
2014-05-22 13:42:41,167 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductCategory [UPGRADE_NOWAIT]: select productcat0_.id as id1_6_0_, productcat0_.name as name2_6_0_, productcat0_.parent_id as parent_i3_6_0_ from productCategories productcat0_ where productcat0_.id=?
2014-05-22 13:42:41,167 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductCategory [FORCE]: select productcat0_.id as id1_6_0_, productcat0_.name as name2_6_0_, productcat0_.parent_id as parent_i3_6_0_ from productCategories productcat0_ where productcat0_.id=?
2014-05-22 13:42:41,170 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductCategory [PESSIMISTIC_READ]: select productcat0_.id as id1_6_0_, productcat0_.name as name2_6_0_, productcat0_.parent_id as parent_i3_6_0_ from productCategories productcat0_ where productcat0_.id=?
2014-05-22 13:42:41,170 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductCategory [PESSIMISTIC_WRITE]: select productcat0_.id as id1_6_0_, productcat0_.name as name2_6_0_, productcat0_.parent_id as parent_i3_6_0_ from productCategories productcat0_ where productcat0_.id=?
2014-05-22 13:42:41,171 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductCategory [PESSIMISTIC_FORCE_INCREMENT]: select productcat0_.id as id1_6_0_, productcat0_.name as name2_6_0_, productcat0_.parent_id as parent_i3_6_0_ from productCategories productcat0_ where productcat0_.id=?
2014-05-22 13:42:41,171 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductCategory [OPTIMISTIC]: select productcat0_.id as id1_6_0_, productcat0_.name as name2_6_0_, productcat0_.parent_id as parent_i3_6_0_ from productCategories productcat0_ where productcat0_.id=?
2014-05-22 13:42:41,171 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductCategory [OPTIMISTIC_FORCE_INCREMENT]: select productcat0_.id as id1_6_0_, productcat0_.name as name2_6_0_, productcat0_.parent_id as parent_i3_6_0_ from productCategories productcat0_ where productcat0_.id=?
2014-05-22 13:42:41,171 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity sepm.dsa.model.ProductCategory: select productcat0_.id as id1_6_1_, productcat0_.name as name2_6_1_, productcat0_.parent_id as parent_i3_6_1_, childs1_.parent_id as parent_i3_6_3_, childs1_.id as id1_6_3_, childs1_.id as id1_6_0_, childs1_.name as name2_6_0_, childs1_.parent_id as parent_i3_6_0_ from productCategories productcat0_ left outer join productCategories childs1_ on productcat0_.id=childs1_.parent_id where productcat0_.id=?
2014-05-22 13:42:41,171 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity sepm.dsa.model.ProductCategory: select productcat0_.id as id1_6_1_, productcat0_.name as name2_6_1_, productcat0_.parent_id as parent_i3_6_1_, childs1_.parent_id as parent_i3_6_3_, childs1_.id as id1_6_3_, childs1_.id as id1_6_0_, childs1_.name as name2_6_0_, childs1_.parent_id as parent_i3_6_0_ from productCategories productcat0_ left outer join productCategories childs1_ on productcat0_.id=childs1_.parent_id where productcat0_.id=?
2014-05-22 13:42:41,175 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Deal [NONE]: select deal0_.id as id1_3_11_, deal0_.amount as amount2_3_11_, deal0_.date as date3_3_11_, deal0_.price as price4_3_11_, deal0_.purchase as purchase5_3_11_, deal0_.qualityId as qualityI6_3_11_, deal0_.trader_id as trader_i7_3_11_, trader1_.id as id1_12_0_, trader1_.category_id as categor11_12_0_, trader1_.charisma as charisma2_12_0_, trader1_.comment as comment3_12_0_, trader1_.convince as convince4_12_0_, trader1_.intelligence as intellig5_12_0_, trader1_.location_id as locatio12_12_0_, trader1_.mut as mut6_12_0_, trader1_.name as name7_12_0_, trader1_.size as size8_12_0_, trader1_.xPos as xPos9_12_0_, trader1_.yPos as yPos10_12_0_, tradercate2_.id as id1_11_1_, tradercate2_.comment as comment2_11_1_, tradercate2_.name as name3_11_1_, location3_.id as id1_4_2_, location3_.comment as comment2_4_2_, location3_.height as height3_4_2_, location3_.name as name4_4_2_, location3_.planFileName as planFile5_4_2_, location3_.region as region10_4_2_, location3_.sizeId as sizeId6_4_2_, location3_.weatherId as weatherI7_4_2_, location3_.xCoord as xCoord8_4_2_, location3_.yCoord as yCoord9_4_2_, region4_.id as id1_10_3_, region4_.color as color2_10_3_, region4_.comment as comment3_10_3_, region4_.name as name4_10_3_, region4_.rainfallChanceId as rainfall5_10_3_, region4_.temperatureId as temperat6_10_3_, borders1x5_.region1 as region3_10_13_, borders1x5_.region1 as region3_2_13_, borders1x5_.region2 as region2_2_13_, borders1x5_.region1 as region3_2_4_, borders1x5_.region2 as region2_2_4_, borders1x5_.borderCost as borderCo1_2_4_, borders2x6_.region2 as region2_10_14_, borders2x6_.region1 as region3_2_14_, borders2x6_.region2 as region2_2_14_, borders2x6_.region1 as region3_2_5_, borders2x6_.region2 as region2_2_5_, borders2x6_.borderCost as borderCo1_2_5_, products7_.regionId as regionId2_10_15_, product8_.id as productI1_8_15_, product8_.id as id1_9_6_, product8_.attributeId as attribut2_9_6_, product8_.comment as comment3_9_6_, product8_.cost as cost4_9_6_, product8_.name as name5_9_6_, product8_.quality as quality6_9_6_, categories9_.productId as productI2_9_16_, productcat10_.id as category1_7_16_, productcat10_.id as id1_6_7_, productcat10_.name as name2_6_7_, productcat10_.parent_id as parent_i3_6_7_, productcat11_.id as id1_6_8_, productcat11_.name as name2_6_8_, productcat11_.parent_id as parent_i3_6_8_, offers12_.trader_id as trader_i6_12_17_, offers12_.id as id1_5_17_, offers12_.id as id1_5_9_, offers12_.amount as amount2_5_9_, offers12_.pricePerUnit as pricePer3_5_9_, offers12_.product_id as product_5_5_9_, offers12_.qualityId as qualityI4_5_9_, offers12_.trader_id as trader_i6_5_9_, product13_.id as id1_9_10_, product13_.attributeId as attribut2_9_10_, product13_.comment as comment3_9_10_, product13_.cost as cost4_9_10_, product13_.name as name5_9_10_, product13_.quality as quality6_9_10_ from deals deal0_ inner join traders trader1_ on deal0_.trader_id=trader1_.id left outer join traderCategories tradercate2_ on trader1_.category_id=tradercate2_.id left outer join locations location3_ on trader1_.location_id=location3_.id left outer join regions region4_ on location3_.region=region4_.id left outer join borders borders1x5_ on region4_.id=borders1x5_.region1 left outer join borders borders2x6_ on region4_.id=borders2x6_.region2 left outer join product_regions products7_ on region4_.id=products7_.regionId left outer join products product8_ on products7_.productId=product8_.id left outer join product_categories categories9_ on product8_.id=categories9_.productId left outer join productCategories productcat10_ on categories9_.categoryId=productcat10_.id left outer join productCategories productcat11_ on productcat10_.parent_id=productcat11_.id left outer join offers offers12_ on trader1_.id=offers12_.trader_id left outer join products product13_ on offers12_.product_id=product13_.id where deal0_.id=?
2014-05-22 13:42:41,178 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Deal [READ]: select deal0_.id as id1_3_11_, deal0_.amount as amount2_3_11_, deal0_.date as date3_3_11_, deal0_.price as price4_3_11_, deal0_.purchase as purchase5_3_11_, deal0_.qualityId as qualityI6_3_11_, deal0_.trader_id as trader_i7_3_11_, trader1_.id as id1_12_0_, trader1_.category_id as categor11_12_0_, trader1_.charisma as charisma2_12_0_, trader1_.comment as comment3_12_0_, trader1_.convince as convince4_12_0_, trader1_.intelligence as intellig5_12_0_, trader1_.location_id as locatio12_12_0_, trader1_.mut as mut6_12_0_, trader1_.name as name7_12_0_, trader1_.size as size8_12_0_, trader1_.xPos as xPos9_12_0_, trader1_.yPos as yPos10_12_0_, tradercate2_.id as id1_11_1_, tradercate2_.comment as comment2_11_1_, tradercate2_.name as name3_11_1_, location3_.id as id1_4_2_, location3_.comment as comment2_4_2_, location3_.height as height3_4_2_, location3_.name as name4_4_2_, location3_.planFileName as planFile5_4_2_, location3_.region as region10_4_2_, location3_.sizeId as sizeId6_4_2_, location3_.weatherId as weatherI7_4_2_, location3_.xCoord as xCoord8_4_2_, location3_.yCoord as yCoord9_4_2_, region4_.id as id1_10_3_, region4_.color as color2_10_3_, region4_.comment as comment3_10_3_, region4_.name as name4_10_3_, region4_.rainfallChanceId as rainfall5_10_3_, region4_.temperatureId as temperat6_10_3_, borders1x5_.region1 as region3_10_13_, borders1x5_.region1 as region3_2_13_, borders1x5_.region2 as region2_2_13_, borders1x5_.region1 as region3_2_4_, borders1x5_.region2 as region2_2_4_, borders1x5_.borderCost as borderCo1_2_4_, borders2x6_.region2 as region2_10_14_, borders2x6_.region1 as region3_2_14_, borders2x6_.region2 as region2_2_14_, borders2x6_.region1 as region3_2_5_, borders2x6_.region2 as region2_2_5_, borders2x6_.borderCost as borderCo1_2_5_, products7_.regionId as regionId2_10_15_, product8_.id as productI1_8_15_, product8_.id as id1_9_6_, product8_.attributeId as attribut2_9_6_, product8_.comment as comment3_9_6_, product8_.cost as cost4_9_6_, product8_.name as name5_9_6_, product8_.quality as quality6_9_6_, categories9_.productId as productI2_9_16_, productcat10_.id as category1_7_16_, productcat10_.id as id1_6_7_, productcat10_.name as name2_6_7_, productcat10_.parent_id as parent_i3_6_7_, productcat11_.id as id1_6_8_, productcat11_.name as name2_6_8_, productcat11_.parent_id as parent_i3_6_8_, offers12_.trader_id as trader_i6_12_17_, offers12_.id as id1_5_17_, offers12_.id as id1_5_9_, offers12_.amount as amount2_5_9_, offers12_.pricePerUnit as pricePer3_5_9_, offers12_.product_id as product_5_5_9_, offers12_.qualityId as qualityI4_5_9_, offers12_.trader_id as trader_i6_5_9_, product13_.id as id1_9_10_, product13_.attributeId as attribut2_9_10_, product13_.comment as comment3_9_10_, product13_.cost as cost4_9_10_, product13_.name as name5_9_10_, product13_.quality as quality6_9_10_ from deals deal0_ inner join traders trader1_ on deal0_.trader_id=trader1_.id left outer join traderCategories tradercate2_ on trader1_.category_id=tradercate2_.id left outer join locations location3_ on trader1_.location_id=location3_.id left outer join regions region4_ on location3_.region=region4_.id left outer join borders borders1x5_ on region4_.id=borders1x5_.region1 left outer join borders borders2x6_ on region4_.id=borders2x6_.region2 left outer join product_regions products7_ on region4_.id=products7_.regionId left outer join products product8_ on products7_.productId=product8_.id left outer join product_categories categories9_ on product8_.id=categories9_.productId left outer join productCategories productcat10_ on categories9_.categoryId=productcat10_.id left outer join productCategories productcat11_ on productcat10_.parent_id=productcat11_.id left outer join offers offers12_ on trader1_.id=offers12_.trader_id left outer join products product13_ on offers12_.product_id=product13_.id where deal0_.id=?
2014-05-22 13:42:41,178 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Deal [UPGRADE]: select deal0_.id as id1_3_0_, deal0_.amount as amount2_3_0_, deal0_.date as date3_3_0_, deal0_.price as price4_3_0_, deal0_.purchase as purchase5_3_0_, deal0_.qualityId as qualityI6_3_0_, deal0_.trader_id as trader_i7_3_0_ from deals deal0_ where deal0_.id=?
2014-05-22 13:42:41,183 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Deal [UPGRADE_NOWAIT]: select deal0_.id as id1_3_0_, deal0_.amount as amount2_3_0_, deal0_.date as date3_3_0_, deal0_.price as price4_3_0_, deal0_.purchase as purchase5_3_0_, deal0_.qualityId as qualityI6_3_0_, deal0_.trader_id as trader_i7_3_0_ from deals deal0_ where deal0_.id=?
2014-05-22 13:42:41,183 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Deal [FORCE]: select deal0_.id as id1_3_0_, deal0_.amount as amount2_3_0_, deal0_.date as date3_3_0_, deal0_.price as price4_3_0_, deal0_.purchase as purchase5_3_0_, deal0_.qualityId as qualityI6_3_0_, deal0_.trader_id as trader_i7_3_0_ from deals deal0_ where deal0_.id=?
2014-05-22 13:42:41,183 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Deal [PESSIMISTIC_READ]: select deal0_.id as id1_3_0_, deal0_.amount as amount2_3_0_, deal0_.date as date3_3_0_, deal0_.price as price4_3_0_, deal0_.purchase as purchase5_3_0_, deal0_.qualityId as qualityI6_3_0_, deal0_.trader_id as trader_i7_3_0_ from deals deal0_ where deal0_.id=?
2014-05-22 13:42:41,183 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Deal [PESSIMISTIC_WRITE]: select deal0_.id as id1_3_0_, deal0_.amount as amount2_3_0_, deal0_.date as date3_3_0_, deal0_.price as price4_3_0_, deal0_.purchase as purchase5_3_0_, deal0_.qualityId as qualityI6_3_0_, deal0_.trader_id as trader_i7_3_0_ from deals deal0_ where deal0_.id=?
2014-05-22 13:42:41,184 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Deal [PESSIMISTIC_FORCE_INCREMENT]: select deal0_.id as id1_3_0_, deal0_.amount as amount2_3_0_, deal0_.date as date3_3_0_, deal0_.price as price4_3_0_, deal0_.purchase as purchase5_3_0_, deal0_.qualityId as qualityI6_3_0_, deal0_.trader_id as trader_i7_3_0_ from deals deal0_ where deal0_.id=?
2014-05-22 13:42:41,184 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Deal [OPTIMISTIC]: select deal0_.id as id1_3_0_, deal0_.amount as amount2_3_0_, deal0_.date as date3_3_0_, deal0_.price as price4_3_0_, deal0_.purchase as purchase5_3_0_, deal0_.qualityId as qualityI6_3_0_, deal0_.trader_id as trader_i7_3_0_ from deals deal0_ where deal0_.id=?
2014-05-22 13:42:41,184 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Deal [OPTIMISTIC_FORCE_INCREMENT]: select deal0_.id as id1_3_0_, deal0_.amount as amount2_3_0_, deal0_.date as date3_3_0_, deal0_.price as price4_3_0_, deal0_.purchase as purchase5_3_0_, deal0_.qualityId as qualityI6_3_0_, deal0_.trader_id as trader_i7_3_0_ from deals deal0_ where deal0_.id=?
2014-05-22 13:42:41,184 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity sepm.dsa.model.Deal: select deal0_.id as id1_3_2_, deal0_.amount as amount2_3_2_, deal0_.date as date3_3_2_, deal0_.price as price4_3_2_, deal0_.purchase as purchase5_3_2_, deal0_.qualityId as qualityI6_3_2_, deal0_.trader_id as trader_i7_3_2_, trader1_.id as id1_12_0_, trader1_.category_id as categor11_12_0_, trader1_.charisma as charisma2_12_0_, trader1_.comment as comment3_12_0_, trader1_.convince as convince4_12_0_, trader1_.intelligence as intellig5_12_0_, trader1_.location_id as locatio12_12_0_, trader1_.mut as mut6_12_0_, trader1_.name as name7_12_0_, trader1_.size as size8_12_0_, trader1_.xPos as xPos9_12_0_, trader1_.yPos as yPos10_12_0_, offers2_.trader_id as trader_i6_12_4_, offers2_.id as id1_5_4_, offers2_.id as id1_5_1_, offers2_.amount as amount2_5_1_, offers2_.pricePerUnit as pricePer3_5_1_, offers2_.product_id as product_5_5_1_, offers2_.qualityId as qualityI4_5_1_, offers2_.trader_id as trader_i6_5_1_ from deals deal0_ inner join traders trader1_ on deal0_.trader_id=trader1_.id left outer join offers offers2_ on trader1_.id=offers2_.trader_id where deal0_.id=?
2014-05-22 13:42:41,185 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity sepm.dsa.model.Deal: select deal0_.id as id1_3_2_, deal0_.amount as amount2_3_2_, deal0_.date as date3_3_2_, deal0_.price as price4_3_2_, deal0_.purchase as purchase5_3_2_, deal0_.qualityId as qualityI6_3_2_, deal0_.trader_id as trader_i7_3_2_, trader1_.id as id1_12_0_, trader1_.category_id as categor11_12_0_, trader1_.charisma as charisma2_12_0_, trader1_.comment as comment3_12_0_, trader1_.convince as convince4_12_0_, trader1_.intelligence as intellig5_12_0_, trader1_.location_id as locatio12_12_0_, trader1_.mut as mut6_12_0_, trader1_.name as name7_12_0_, trader1_.size as size8_12_0_, trader1_.xPos as xPos9_12_0_, trader1_.yPos as yPos10_12_0_, offers2_.trader_id as trader_i6_12_4_, offers2_.id as id1_5_4_, offers2_.id as id1_5_1_, offers2_.amount as amount2_5_1_, offers2_.pricePerUnit as pricePer3_5_1_, offers2_.product_id as product_5_5_1_, offers2_.qualityId as qualityI4_5_1_, offers2_.trader_id as trader_i6_5_1_ from deals deal0_ inner join traders trader1_ on deal0_.trader_id=trader1_.id left outer join offers offers2_ on trader1_.id=offers2_.trader_id where deal0_.id=?
2014-05-22 13:42:41,186 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.TraderCategory [NONE]: select tradercate0_.id as id1_11_0_, tradercate0_.comment as comment2_11_0_, tradercate0_.name as name3_11_0_ from traderCategories tradercate0_ where tradercate0_.id=?
2014-05-22 13:42:41,186 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.TraderCategory [READ]: select tradercate0_.id as id1_11_0_, tradercate0_.comment as comment2_11_0_, tradercate0_.name as name3_11_0_ from traderCategories tradercate0_ where tradercate0_.id=?
2014-05-22 13:42:41,186 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.TraderCategory [UPGRADE]: select tradercate0_.id as id1_11_0_, tradercate0_.comment as comment2_11_0_, tradercate0_.name as name3_11_0_ from traderCategories tradercate0_ where tradercate0_.id=?
2014-05-22 13:42:41,186 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.TraderCategory [UPGRADE_NOWAIT]: select tradercate0_.id as id1_11_0_, tradercate0_.comment as comment2_11_0_, tradercate0_.name as name3_11_0_ from traderCategories tradercate0_ where tradercate0_.id=?
2014-05-22 13:42:41,186 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.TraderCategory [FORCE]: select tradercate0_.id as id1_11_0_, tradercate0_.comment as comment2_11_0_, tradercate0_.name as name3_11_0_ from traderCategories tradercate0_ where tradercate0_.id=?
2014-05-22 13:42:41,186 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.TraderCategory [PESSIMISTIC_READ]: select tradercate0_.id as id1_11_0_, tradercate0_.comment as comment2_11_0_, tradercate0_.name as name3_11_0_ from traderCategories tradercate0_ where tradercate0_.id=?
2014-05-22 13:42:41,187 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.TraderCategory [PESSIMISTIC_WRITE]: select tradercate0_.id as id1_11_0_, tradercate0_.comment as comment2_11_0_, tradercate0_.name as name3_11_0_ from traderCategories tradercate0_ where tradercate0_.id=?
2014-05-22 13:42:41,187 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.TraderCategory [PESSIMISTIC_FORCE_INCREMENT]: select tradercate0_.id as id1_11_0_, tradercate0_.comment as comment2_11_0_, tradercate0_.name as name3_11_0_ from traderCategories tradercate0_ where tradercate0_.id=?
2014-05-22 13:42:41,187 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.TraderCategory [OPTIMISTIC]: select tradercate0_.id as id1_11_0_, tradercate0_.comment as comment2_11_0_, tradercate0_.name as name3_11_0_ from traderCategories tradercate0_ where tradercate0_.id=?
2014-05-22 13:42:41,187 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.TraderCategory [OPTIMISTIC_FORCE_INCREMENT]: select tradercate0_.id as id1_11_0_, tradercate0_.comment as comment2_11_0_, tradercate0_.name as name3_11_0_ from traderCategories tradercate0_ where tradercate0_.id=?
2014-05-22 13:42:41,187 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity sepm.dsa.model.TraderCategory: select tradercate0_.id as id1_11_2_, tradercate0_.comment as comment2_11_2_, tradercate0_.name as name3_11_2_, assortment1_.assortments_id as assortme5_11_4_, assortment1_.id as id1_1_4_, assortment1_.id as id1_1_0_, assortment1_.defaultOccurence as defaultO2_1_0_, assortment1_.productCategory_id as productC3_1_0_, assortment1_.traderCategory_id as traderCa4_1_0_, tradercate2_.id as id1_11_1_, tradercate2_.comment as comment2_11_1_, tradercate2_.name as name3_11_1_ from traderCategories tradercate0_ left outer join assortmentNatures assortment1_ on tradercate0_.id=assortment1_.assortments_id left outer join traderCategories tradercate2_ on assortment1_.traderCategory_id=tradercate2_.id where tradercate0_.id=?
2014-05-22 13:42:41,188 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity sepm.dsa.model.TraderCategory: select tradercate0_.id as id1_11_2_, tradercate0_.comment as comment2_11_2_, tradercate0_.name as name3_11_2_, assortment1_.assortments_id as assortme5_11_4_, assortment1_.id as id1_1_4_, assortment1_.id as id1_1_0_, assortment1_.defaultOccurence as defaultO2_1_0_, assortment1_.productCategory_id as productC3_1_0_, assortment1_.traderCategory_id as traderCa4_1_0_, tradercate2_.id as id1_11_1_, tradercate2_.comment as comment2_11_1_, tradercate2_.name as name3_11_1_ from traderCategories tradercate0_ left outer join assortmentNatures assortment1_ on tradercate0_.id=assortment1_.assortments_id left outer join traderCategories tradercate2_ on assortment1_.traderCategory_id=tradercate2_.id where tradercate0_.id=?
2014-05-22 13:42:41,188 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Product [NONE]: select product0_.id as id1_9_2_, product0_.attributeId as attribut2_9_2_, product0_.comment as comment3_9_2_, product0_.cost as cost4_9_2_, product0_.name as name5_9_2_, product0_.quality as quality6_9_2_, categories1_.productId as productI2_9_4_, productcat2_.id as category1_7_4_, productcat2_.id as id1_6_0_, productcat2_.name as name2_6_0_, productcat2_.parent_id as parent_i3_6_0_, productcat3_.id as id1_6_1_, productcat3_.name as name2_6_1_, productcat3_.parent_id as parent_i3_6_1_ from products product0_ left outer join product_categories categories1_ on product0_.id=categories1_.productId left outer join productCategories productcat2_ on categories1_.categoryId=productcat2_.id left outer join productCategories productcat3_ on productcat2_.parent_id=productcat3_.id where product0_.id=?
2014-05-22 13:42:41,189 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Product [READ]: select product0_.id as id1_9_2_, product0_.attributeId as attribut2_9_2_, product0_.comment as comment3_9_2_, product0_.cost as cost4_9_2_, product0_.name as name5_9_2_, product0_.quality as quality6_9_2_, categories1_.productId as productI2_9_4_, productcat2_.id as category1_7_4_, productcat2_.id as id1_6_0_, productcat2_.name as name2_6_0_, productcat2_.parent_id as parent_i3_6_0_, productcat3_.id as id1_6_1_, productcat3_.name as name2_6_1_, productcat3_.parent_id as parent_i3_6_1_ from products product0_ left outer join product_categories categories1_ on product0_.id=categories1_.productId left outer join productCategories productcat2_ on categories1_.categoryId=productcat2_.id left outer join productCategories productcat3_ on productcat2_.parent_id=productcat3_.id where product0_.id=?
2014-05-22 13:42:41,189 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Product [UPGRADE]: select product0_.id as id1_9_0_, product0_.attributeId as attribut2_9_0_, product0_.comment as comment3_9_0_, product0_.cost as cost4_9_0_, product0_.name as name5_9_0_, product0_.quality as quality6_9_0_ from products product0_ where product0_.id=?
2014-05-22 13:42:41,189 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Product [UPGRADE_NOWAIT]: select product0_.id as id1_9_0_, product0_.attributeId as attribut2_9_0_, product0_.comment as comment3_9_0_, product0_.cost as cost4_9_0_, product0_.name as name5_9_0_, product0_.quality as quality6_9_0_ from products product0_ where product0_.id=?
2014-05-22 13:42:41,189 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Product [FORCE]: select product0_.id as id1_9_0_, product0_.attributeId as attribut2_9_0_, product0_.comment as comment3_9_0_, product0_.cost as cost4_9_0_, product0_.name as name5_9_0_, product0_.quality as quality6_9_0_ from products product0_ where product0_.id=?
2014-05-22 13:42:41,189 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Product [PESSIMISTIC_READ]: select product0_.id as id1_9_0_, product0_.attributeId as attribut2_9_0_, product0_.comment as comment3_9_0_, product0_.cost as cost4_9_0_, product0_.name as name5_9_0_, product0_.quality as quality6_9_0_ from products product0_ where product0_.id=?
2014-05-22 13:42:41,189 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_9_0_, product0_.attributeId as attribut2_9_0_, product0_.comment as comment3_9_0_, product0_.cost as cost4_9_0_, product0_.name as name5_9_0_, product0_.quality as quality6_9_0_ from products product0_ where product0_.id=?
2014-05-22 13:42:41,189 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_9_0_, product0_.attributeId as attribut2_9_0_, product0_.comment as comment3_9_0_, product0_.cost as cost4_9_0_, product0_.name as name5_9_0_, product0_.quality as quality6_9_0_ from products product0_ where product0_.id=?
2014-05-22 13:42:41,190 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Product [OPTIMISTIC]: select product0_.id as id1_9_0_, product0_.attributeId as attribut2_9_0_, product0_.comment as comment3_9_0_, product0_.cost as cost4_9_0_, product0_.name as name5_9_0_, product0_.quality as quality6_9_0_ from products product0_ where product0_.id=?
2014-05-22 13:42:41,190 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_9_0_, product0_.attributeId as attribut2_9_0_, product0_.comment as comment3_9_0_, product0_.cost as cost4_9_0_, product0_.name as name5_9_0_, product0_.quality as quality6_9_0_ from products product0_ where product0_.id=?
2014-05-22 13:42:41,190 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity sepm.dsa.model.Product: select product0_.id as id1_9_2_, product0_.attributeId as attribut2_9_2_, product0_.comment as comment3_9_2_, product0_.cost as cost4_9_2_, product0_.name as name5_9_2_, product0_.quality as quality6_9_2_, categories1_.productId as productI2_9_4_, productcat2_.id as category1_7_4_, productcat2_.id as id1_6_0_, productcat2_.name as name2_6_0_, productcat2_.parent_id as parent_i3_6_0_, productcat3_.id as id1_6_1_, productcat3_.name as name2_6_1_, productcat3_.parent_id as parent_i3_6_1_ from products product0_ left outer join product_categories categories1_ on product0_.id=categories1_.productId left outer join productCategories productcat2_ on categories1_.categoryId=productcat2_.id left outer join productCategories productcat3_ on productcat2_.parent_id=productcat3_.id where product0_.id=?
2014-05-22 13:42:41,191 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity sepm.dsa.model.Product: select product0_.id as id1_9_2_, product0_.attributeId as attribut2_9_2_, product0_.comment as comment3_9_2_, product0_.cost as cost4_9_2_, product0_.name as name5_9_2_, product0_.quality as quality6_9_2_, categories1_.productId as productI2_9_4_, productcat2_.id as category1_7_4_, productcat2_.id as id1_6_0_, productcat2_.name as name2_6_0_, productcat2_.parent_id as parent_i3_6_0_, productcat3_.id as id1_6_1_, productcat3_.name as name2_6_1_, productcat3_.parent_id as parent_i3_6_1_ from products product0_ left outer join product_categories categories1_ on product0_.id=categories1_.productId left outer join productCategories productcat2_ on categories1_.categoryId=productcat2_.id left outer join productCategories productcat3_ on productcat2_.parent_id=productcat3_.id where product0_.id=?
2014-05-22 13:42:41,191 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductUnit [NONE]: select productuni0_.id as id1_0_0_, productuni0_.name as name2_0_0_, productuni0_.unitType as unitType3_0_0_, productuni0_.value as value4_0_0_ from ProductUnit productuni0_ where productuni0_.id=?
2014-05-22 13:42:41,191 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductUnit [READ]: select productuni0_.id as id1_0_0_, productuni0_.name as name2_0_0_, productuni0_.unitType as unitType3_0_0_, productuni0_.value as value4_0_0_ from ProductUnit productuni0_ where productuni0_.id=?
2014-05-22 13:42:41,191 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductUnit [UPGRADE]: select productuni0_.id as id1_0_0_, productuni0_.name as name2_0_0_, productuni0_.unitType as unitType3_0_0_, productuni0_.value as value4_0_0_ from ProductUnit productuni0_ where productuni0_.id=?
2014-05-22 13:42:41,192 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductUnit [UPGRADE_NOWAIT]: select productuni0_.id as id1_0_0_, productuni0_.name as name2_0_0_, productuni0_.unitType as unitType3_0_0_, productuni0_.value as value4_0_0_ from ProductUnit productuni0_ where productuni0_.id=?
2014-05-22 13:42:41,192 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductUnit [FORCE]: select productuni0_.id as id1_0_0_, productuni0_.name as name2_0_0_, productuni0_.unitType as unitType3_0_0_, productuni0_.value as value4_0_0_ from ProductUnit productuni0_ where productuni0_.id=?
2014-05-22 13:42:41,192 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductUnit [PESSIMISTIC_READ]: select productuni0_.id as id1_0_0_, productuni0_.name as name2_0_0_, productuni0_.unitType as unitType3_0_0_, productuni0_.value as value4_0_0_ from ProductUnit productuni0_ where productuni0_.id=?
2014-05-22 13:42:41,192 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductUnit [PESSIMISTIC_WRITE]: select productuni0_.id as id1_0_0_, productuni0_.name as name2_0_0_, productuni0_.unitType as unitType3_0_0_, productuni0_.value as value4_0_0_ from ProductUnit productuni0_ where productuni0_.id=?
2014-05-22 13:42:41,192 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductUnit [PESSIMISTIC_FORCE_INCREMENT]: select productuni0_.id as id1_0_0_, productuni0_.name as name2_0_0_, productuni0_.unitType as unitType3_0_0_, productuni0_.value as value4_0_0_ from ProductUnit productuni0_ where productuni0_.id=?
2014-05-22 13:42:41,192 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductUnit [OPTIMISTIC]: select productuni0_.id as id1_0_0_, productuni0_.name as name2_0_0_, productuni0_.unitType as unitType3_0_0_, productuni0_.value as value4_0_0_ from ProductUnit productuni0_ where productuni0_.id=?
2014-05-22 13:42:41,192 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.ProductUnit [OPTIMISTIC_FORCE_INCREMENT]: select productuni0_.id as id1_0_0_, productuni0_.name as name2_0_0_, productuni0_.unitType as unitType3_0_0_, productuni0_.value as value4_0_0_ from ProductUnit productuni0_ where productuni0_.id=?
2014-05-22 13:42:41,193 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity sepm.dsa.model.ProductUnit: select productuni0_.id as id1_0_0_, productuni0_.name as name2_0_0_, productuni0_.unitType as unitType3_0_0_, productuni0_.value as value4_0_0_ from ProductUnit productuni0_ where productuni0_.id=?
2014-05-22 13:42:41,193 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity sepm.dsa.model.ProductUnit: select productuni0_.id as id1_0_0_, productuni0_.name as name2_0_0_, productuni0_.unitType as unitType3_0_0_, productuni0_.value as value4_0_0_ from ProductUnit productuni0_ where productuni0_.id=?
2014-05-22 13:42:41,194 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.RegionBorder [NONE]: select regionbord0_.region1 as region3_2_0_, regionbord0_.region2 as region2_2_0_, regionbord0_.borderCost as borderCo1_2_0_ from borders regionbord0_ where regionbord0_.region1=? and regionbord0_.region2=?
2014-05-22 13:42:41,194 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.RegionBorder [READ]: select regionbord0_.region1 as region3_2_0_, regionbord0_.region2 as region2_2_0_, regionbord0_.borderCost as borderCo1_2_0_ from borders regionbord0_ where regionbord0_.region1=? and regionbord0_.region2=?
2014-05-22 13:42:41,194 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.RegionBorder [UPGRADE]: select regionbord0_.region1 as region3_2_0_, regionbord0_.region2 as region2_2_0_, regionbord0_.borderCost as borderCo1_2_0_ from borders regionbord0_ where regionbord0_.region1=? and regionbord0_.region2=?
2014-05-22 13:42:41,194 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.RegionBorder [UPGRADE_NOWAIT]: select regionbord0_.region1 as region3_2_0_, regionbord0_.region2 as region2_2_0_, regionbord0_.borderCost as borderCo1_2_0_ from borders regionbord0_ where regionbord0_.region1=? and regionbord0_.region2=?
2014-05-22 13:42:41,194 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.RegionBorder [FORCE]: select regionbord0_.region1 as region3_2_0_, regionbord0_.region2 as region2_2_0_, regionbord0_.borderCost as borderCo1_2_0_ from borders regionbord0_ where regionbord0_.region1=? and regionbord0_.region2=?
2014-05-22 13:42:41,194 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.RegionBorder [PESSIMISTIC_READ]: select regionbord0_.region1 as region3_2_0_, regionbord0_.region2 as region2_2_0_, regionbord0_.borderCost as borderCo1_2_0_ from borders regionbord0_ where regionbord0_.region1=? and regionbord0_.region2=?
2014-05-22 13:42:41,195 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.RegionBorder [PESSIMISTIC_WRITE]: select regionbord0_.region1 as region3_2_0_, regionbord0_.region2 as region2_2_0_, regionbord0_.borderCost as borderCo1_2_0_ from borders regionbord0_ where regionbord0_.region1=? and regionbord0_.region2=?
2014-05-22 13:42:41,195 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.RegionBorder [PESSIMISTIC_FORCE_INCREMENT]: select regionbord0_.region1 as region3_2_0_, regionbord0_.region2 as region2_2_0_, regionbord0_.borderCost as borderCo1_2_0_ from borders regionbord0_ where regionbord0_.region1=? and regionbord0_.region2=?
2014-05-22 13:42:41,195 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.RegionBorder [OPTIMISTIC]: select regionbord0_.region1 as region3_2_0_, regionbord0_.region2 as region2_2_0_, regionbord0_.borderCost as borderCo1_2_0_ from borders regionbord0_ where regionbord0_.region1=? and regionbord0_.region2=?
2014-05-22 13:42:41,195 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.RegionBorder [OPTIMISTIC_FORCE_INCREMENT]: select regionbord0_.region1 as region3_2_0_, regionbord0_.region2 as region2_2_0_, regionbord0_.borderCost as borderCo1_2_0_ from borders regionbord0_ where regionbord0_.region1=? and regionbord0_.region2=?
2014-05-22 13:42:41,195 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity sepm.dsa.model.RegionBorder: select regionbord0_.region1 as region3_2_0_, regionbord0_.region2 as region2_2_0_, regionbord0_.borderCost as borderCo1_2_0_ from borders regionbord0_ where regionbord0_.region1=? and regionbord0_.region2=?
2014-05-22 13:42:41,195 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity sepm.dsa.model.RegionBorder: select regionbord0_.region1 as region3_2_0_, regionbord0_.region2 as region2_2_0_, regionbord0_.borderCost as borderCo1_2_0_ from borders regionbord0_ where regionbord0_.region1=? and regionbord0_.region2=?
2014-05-22 13:42:41,196 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Trader [NONE]: select trader0_.id as id1_12_11_, trader0_.category_id as categor11_12_11_, trader0_.charisma as charisma2_12_11_, trader0_.comment as comment3_12_11_, trader0_.convince as convince4_12_11_, trader0_.intelligence as intellig5_12_11_, trader0_.location_id as locatio12_12_11_, trader0_.mut as mut6_12_11_, trader0_.name as name7_12_11_, trader0_.size as size8_12_11_, trader0_.xPos as xPos9_12_11_, trader0_.yPos as yPos10_12_11_, tradercate1_.id as id1_11_0_, tradercate1_.comment as comment2_11_0_, tradercate1_.name as name3_11_0_, deals2_.trader_id as trader_i7_12_13_, deals2_.id as id1_3_13_, deals2_.id as id1_3_1_, deals2_.amount as amount2_3_1_, deals2_.date as date3_3_1_, deals2_.price as price4_3_1_, deals2_.purchase as purchase5_3_1_, deals2_.qualityId as qualityI6_3_1_, deals2_.trader_id as trader_i7_3_1_, location3_.id as id1_4_2_, location3_.comment as comment2_4_2_, location3_.height as height3_4_2_, location3_.name as name4_4_2_, location3_.planFileName as planFile5_4_2_, location3_.region as region10_4_2_, location3_.sizeId as sizeId6_4_2_, location3_.weatherId as weatherI7_4_2_, location3_.xCoord as xCoord8_4_2_, location3_.yCoord as yCoord9_4_2_, region4_.id as id1_10_3_, region4_.color as color2_10_3_, region4_.comment as comment3_10_3_, region4_.name as name4_10_3_, region4_.rainfallChanceId as rainfall5_10_3_, region4_.temperatureId as temperat6_10_3_, borders1x5_.region1 as region3_10_14_, borders1x5_.region1 as region3_2_14_, borders1x5_.region2 as region2_2_14_, borders1x5_.region1 as region3_2_4_, borders1x5_.region2 as region2_2_4_, borders1x5_.borderCost as borderCo1_2_4_, borders2x6_.region2 as region2_10_15_, borders2x6_.region1 as region3_2_15_, borders2x6_.region2 as region2_2_15_, borders2x6_.region1 as region3_2_5_, borders2x6_.region2 as region2_2_5_, borders2x6_.borderCost as borderCo1_2_5_, products7_.regionId as regionId2_10_16_, product8_.id as productI1_8_16_, product8_.id as id1_9_6_, product8_.attributeId as attribut2_9_6_, product8_.comment as comment3_9_6_, product8_.cost as cost4_9_6_, product8_.name as name5_9_6_, product8_.quality as quality6_9_6_, categories9_.productId as productI2_9_17_, productcat10_.id as category1_7_17_, productcat10_.id as id1_6_7_, productcat10_.name as name2_6_7_, productcat10_.parent_id as parent_i3_6_7_, productcat11_.id as id1_6_8_, productcat11_.name as name2_6_8_, productcat11_.parent_id as parent_i3_6_8_, offers12_.trader_id as trader_i6_12_18_, offers12_.id as id1_5_18_, offers12_.id as id1_5_9_, offers12_.amount as amount2_5_9_, offers12_.pricePerUnit as pricePer3_5_9_, offers12_.product_id as product_5_5_9_, offers12_.qualityId as qualityI4_5_9_, offers12_.trader_id as trader_i6_5_9_, product13_.id as id1_9_10_, product13_.attributeId as attribut2_9_10_, product13_.comment as comment3_9_10_, product13_.cost as cost4_9_10_, product13_.name as name5_9_10_, product13_.quality as quality6_9_10_ from traders trader0_ inner join traderCategories tradercate1_ on trader0_.category_id=tradercate1_.id left outer join deals deals2_ on trader0_.id=deals2_.trader_id inner join locations location3_ on trader0_.location_id=location3_.id left outer join regions region4_ on location3_.region=region4_.id left outer join borders borders1x5_ on region4_.id=borders1x5_.region1 left outer join borders borders2x6_ on region4_.id=borders2x6_.region2 left outer join product_regions products7_ on region4_.id=products7_.regionId left outer join products product8_ on products7_.productId=product8_.id left outer join product_categories categories9_ on product8_.id=categories9_.productId left outer join productCategories productcat10_ on categories9_.categoryId=productcat10_.id left outer join productCategories productcat11_ on productcat10_.parent_id=productcat11_.id left outer join offers offers12_ on trader0_.id=offers12_.trader_id left outer join products product13_ on offers12_.product_id=product13_.id where trader0_.id=?
2014-05-22 13:42:41,199 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Trader [READ]: select trader0_.id as id1_12_11_, trader0_.category_id as categor11_12_11_, trader0_.charisma as charisma2_12_11_, trader0_.comment as comment3_12_11_, trader0_.convince as convince4_12_11_, trader0_.intelligence as intellig5_12_11_, trader0_.location_id as locatio12_12_11_, trader0_.mut as mut6_12_11_, trader0_.name as name7_12_11_, trader0_.size as size8_12_11_, trader0_.xPos as xPos9_12_11_, trader0_.yPos as yPos10_12_11_, tradercate1_.id as id1_11_0_, tradercate1_.comment as comment2_11_0_, tradercate1_.name as name3_11_0_, deals2_.trader_id as trader_i7_12_13_, deals2_.id as id1_3_13_, deals2_.id as id1_3_1_, deals2_.amount as amount2_3_1_, deals2_.date as date3_3_1_, deals2_.price as price4_3_1_, deals2_.purchase as purchase5_3_1_, deals2_.qualityId as qualityI6_3_1_, deals2_.trader_id as trader_i7_3_1_, location3_.id as id1_4_2_, location3_.comment as comment2_4_2_, location3_.height as height3_4_2_, location3_.name as name4_4_2_, location3_.planFileName as planFile5_4_2_, location3_.region as region10_4_2_, location3_.sizeId as sizeId6_4_2_, location3_.weatherId as weatherI7_4_2_, location3_.xCoord as xCoord8_4_2_, location3_.yCoord as yCoord9_4_2_, region4_.id as id1_10_3_, region4_.color as color2_10_3_, region4_.comment as comment3_10_3_, region4_.name as name4_10_3_, region4_.rainfallChanceId as rainfall5_10_3_, region4_.temperatureId as temperat6_10_3_, borders1x5_.region1 as region3_10_14_, borders1x5_.region1 as region3_2_14_, borders1x5_.region2 as region2_2_14_, borders1x5_.region1 as region3_2_4_, borders1x5_.region2 as region2_2_4_, borders1x5_.borderCost as borderCo1_2_4_, borders2x6_.region2 as region2_10_15_, borders2x6_.region1 as region3_2_15_, borders2x6_.region2 as region2_2_15_, borders2x6_.region1 as region3_2_5_, borders2x6_.region2 as region2_2_5_, borders2x6_.borderCost as borderCo1_2_5_, products7_.regionId as regionId2_10_16_, product8_.id as productI1_8_16_, product8_.id as id1_9_6_, product8_.attributeId as attribut2_9_6_, product8_.comment as comment3_9_6_, product8_.cost as cost4_9_6_, product8_.name as name5_9_6_, product8_.quality as quality6_9_6_, categories9_.productId as productI2_9_17_, productcat10_.id as category1_7_17_, productcat10_.id as id1_6_7_, productcat10_.name as name2_6_7_, productcat10_.parent_id as parent_i3_6_7_, productcat11_.id as id1_6_8_, productcat11_.name as name2_6_8_, productcat11_.parent_id as parent_i3_6_8_, offers12_.trader_id as trader_i6_12_18_, offers12_.id as id1_5_18_, offers12_.id as id1_5_9_, offers12_.amount as amount2_5_9_, offers12_.pricePerUnit as pricePer3_5_9_, offers12_.product_id as product_5_5_9_, offers12_.qualityId as qualityI4_5_9_, offers12_.trader_id as trader_i6_5_9_, product13_.id as id1_9_10_, product13_.attributeId as attribut2_9_10_, product13_.comment as comment3_9_10_, product13_.cost as cost4_9_10_, product13_.name as name5_9_10_, product13_.quality as quality6_9_10_ from traders trader0_ inner join traderCategories tradercate1_ on trader0_.category_id=tradercate1_.id left outer join deals deals2_ on trader0_.id=deals2_.trader_id inner join locations location3_ on trader0_.location_id=location3_.id left outer join regions region4_ on location3_.region=region4_.id left outer join borders borders1x5_ on region4_.id=borders1x5_.region1 left outer join borders borders2x6_ on region4_.id=borders2x6_.region2 left outer join product_regions products7_ on region4_.id=products7_.regionId left outer join products product8_ on products7_.productId=product8_.id left outer join product_categories categories9_ on product8_.id=categories9_.productId left outer join productCategories productcat10_ on categories9_.categoryId=productcat10_.id left outer join productCategories productcat11_ on productcat10_.parent_id=productcat11_.id left outer join offers offers12_ on trader0_.id=offers12_.trader_id left outer join products product13_ on offers12_.product_id=product13_.id where trader0_.id=?
2014-05-22 13:42:41,199 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Trader [UPGRADE]: select trader0_.id as id1_12_0_, trader0_.category_id as categor11_12_0_, trader0_.charisma as charisma2_12_0_, trader0_.comment as comment3_12_0_, trader0_.convince as convince4_12_0_, trader0_.intelligence as intellig5_12_0_, trader0_.location_id as locatio12_12_0_, trader0_.mut as mut6_12_0_, trader0_.name as name7_12_0_, trader0_.size as size8_12_0_, trader0_.xPos as xPos9_12_0_, trader0_.yPos as yPos10_12_0_ from traders trader0_ where trader0_.id=?
2014-05-22 13:42:41,204 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Trader [UPGRADE_NOWAIT]: select trader0_.id as id1_12_0_, trader0_.category_id as categor11_12_0_, trader0_.charisma as charisma2_12_0_, trader0_.comment as comment3_12_0_, trader0_.convince as convince4_12_0_, trader0_.intelligence as intellig5_12_0_, trader0_.location_id as locatio12_12_0_, trader0_.mut as mut6_12_0_, trader0_.name as name7_12_0_, trader0_.size as size8_12_0_, trader0_.xPos as xPos9_12_0_, trader0_.yPos as yPos10_12_0_ from traders trader0_ where trader0_.id=?
2014-05-22 13:42:41,204 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Trader [FORCE]: select trader0_.id as id1_12_0_, trader0_.category_id as categor11_12_0_, trader0_.charisma as charisma2_12_0_, trader0_.comment as comment3_12_0_, trader0_.convince as convince4_12_0_, trader0_.intelligence as intellig5_12_0_, trader0_.location_id as locatio12_12_0_, trader0_.mut as mut6_12_0_, trader0_.name as name7_12_0_, trader0_.size as size8_12_0_, trader0_.xPos as xPos9_12_0_, trader0_.yPos as yPos10_12_0_ from traders trader0_ where trader0_.id=?
2014-05-22 13:42:41,205 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Trader [PESSIMISTIC_READ]: select trader0_.id as id1_12_0_, trader0_.category_id as categor11_12_0_, trader0_.charisma as charisma2_12_0_, trader0_.comment as comment3_12_0_, trader0_.convince as convince4_12_0_, trader0_.intelligence as intellig5_12_0_, trader0_.location_id as locatio12_12_0_, trader0_.mut as mut6_12_0_, trader0_.name as name7_12_0_, trader0_.size as size8_12_0_, trader0_.xPos as xPos9_12_0_, trader0_.yPos as yPos10_12_0_ from traders trader0_ where trader0_.id=?
2014-05-22 13:42:41,205 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Trader [PESSIMISTIC_WRITE]: select trader0_.id as id1_12_0_, trader0_.category_id as categor11_12_0_, trader0_.charisma as charisma2_12_0_, trader0_.comment as comment3_12_0_, trader0_.convince as convince4_12_0_, trader0_.intelligence as intellig5_12_0_, trader0_.location_id as locatio12_12_0_, trader0_.mut as mut6_12_0_, trader0_.name as name7_12_0_, trader0_.size as size8_12_0_, trader0_.xPos as xPos9_12_0_, trader0_.yPos as yPos10_12_0_ from traders trader0_ where trader0_.id=?
2014-05-22 13:42:41,205 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Trader [PESSIMISTIC_FORCE_INCREMENT]: select trader0_.id as id1_12_0_, trader0_.category_id as categor11_12_0_, trader0_.charisma as charisma2_12_0_, trader0_.comment as comment3_12_0_, trader0_.convince as convince4_12_0_, trader0_.intelligence as intellig5_12_0_, trader0_.location_id as locatio12_12_0_, trader0_.mut as mut6_12_0_, trader0_.name as name7_12_0_, trader0_.size as size8_12_0_, trader0_.xPos as xPos9_12_0_, trader0_.yPos as yPos10_12_0_ from traders trader0_ where trader0_.id=?
2014-05-22 13:42:41,205 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Trader [OPTIMISTIC]: select trader0_.id as id1_12_0_, trader0_.category_id as categor11_12_0_, trader0_.charisma as charisma2_12_0_, trader0_.comment as comment3_12_0_, trader0_.convince as convince4_12_0_, trader0_.intelligence as intellig5_12_0_, trader0_.location_id as locatio12_12_0_, trader0_.mut as mut6_12_0_, trader0_.name as name7_12_0_, trader0_.size as size8_12_0_, trader0_.xPos as xPos9_12_0_, trader0_.yPos as yPos10_12_0_ from traders trader0_ where trader0_.id=?
2014-05-22 13:42:41,205 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Trader [OPTIMISTIC_FORCE_INCREMENT]: select trader0_.id as id1_12_0_, trader0_.category_id as categor11_12_0_, trader0_.charisma as charisma2_12_0_, trader0_.comment as comment3_12_0_, trader0_.convince as convince4_12_0_, trader0_.intelligence as intellig5_12_0_, trader0_.location_id as locatio12_12_0_, trader0_.mut as mut6_12_0_, trader0_.name as name7_12_0_, trader0_.size as size8_12_0_, trader0_.xPos as xPos9_12_0_, trader0_.yPos as yPos10_12_0_ from traders trader0_ where trader0_.id=?
2014-05-22 13:42:41,206 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity sepm.dsa.model.Trader: select trader0_.id as id1_12_1_, trader0_.category_id as categor11_12_1_, trader0_.charisma as charisma2_12_1_, trader0_.comment as comment3_12_1_, trader0_.convince as convince4_12_1_, trader0_.intelligence as intellig5_12_1_, trader0_.location_id as locatio12_12_1_, trader0_.mut as mut6_12_1_, trader0_.name as name7_12_1_, trader0_.size as size8_12_1_, trader0_.xPos as xPos9_12_1_, trader0_.yPos as yPos10_12_1_, deals1_.trader_id as trader_i7_12_3_, deals1_.id as id1_3_3_, deals1_.id as id1_3_0_, deals1_.amount as amount2_3_0_, deals1_.date as date3_3_0_, deals1_.price as price4_3_0_, deals1_.purchase as purchase5_3_0_, deals1_.qualityId as qualityI6_3_0_, deals1_.trader_id as trader_i7_3_0_ from traders trader0_ left outer join deals deals1_ on trader0_.id=deals1_.trader_id where trader0_.id=?
2014-05-22 13:42:41,207 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity sepm.dsa.model.Trader: select trader0_.id as id1_12_1_, trader0_.category_id as categor11_12_1_, trader0_.charisma as charisma2_12_1_, trader0_.comment as comment3_12_1_, trader0_.convince as convince4_12_1_, trader0_.intelligence as intellig5_12_1_, trader0_.location_id as locatio12_12_1_, trader0_.mut as mut6_12_1_, trader0_.name as name7_12_1_, trader0_.size as size8_12_1_, trader0_.xPos as xPos9_12_1_, trader0_.yPos as yPos10_12_1_, deals1_.trader_id as trader_i7_12_3_, deals1_.id as id1_3_3_, deals1_.id as id1_3_0_, deals1_.amount as amount2_3_0_, deals1_.date as date3_3_0_, deals1_.price as price4_3_0_, deals1_.purchase as purchase5_3_0_, deals1_.qualityId as qualityI6_3_0_, deals1_.trader_id as trader_i7_3_0_ from traders trader0_ left outer join deals deals1_ on trader0_.id=deals1_.trader_id where trader0_.id=?
2014-05-22 13:42:41,207 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Location [NONE]: select location0_.id as id1_4_6_, location0_.comment as comment2_4_6_, location0_.height as height3_4_6_, location0_.name as name4_4_6_, location0_.planFileName as planFile5_4_6_, location0_.region as region10_4_6_, location0_.sizeId as sizeId6_4_6_, location0_.weatherId as weatherI7_4_6_, location0_.xCoord as xCoord8_4_6_, location0_.yCoord as yCoord9_4_6_, region1_.id as id1_10_0_, region1_.color as color2_10_0_, region1_.comment as comment3_10_0_, region1_.name as name4_10_0_, region1_.rainfallChanceId as rainfall5_10_0_, region1_.temperatureId as temperat6_10_0_, borders1x2_.region1 as region3_10_8_, borders1x2_.region1 as region3_2_8_, borders1x2_.region2 as region2_2_8_, borders1x2_.region1 as region3_2_1_, borders1x2_.region2 as region2_2_1_, borders1x2_.borderCost as borderCo1_2_1_, borders2x3_.region2 as region2_10_9_, borders2x3_.region1 as region3_2_9_, borders2x3_.region2 as region2_2_9_, borders2x3_.region1 as region3_2_2_, borders2x3_.region2 as region2_2_2_, borders2x3_.borderCost as borderCo1_2_2_, products4_.regionId as regionId2_10_10_, product5_.id as productI1_8_10_, product5_.id as id1_9_3_, product5_.attributeId as attribut2_9_3_, product5_.comment as comment3_9_3_, product5_.cost as cost4_9_3_, product5_.name as name5_9_3_, product5_.quality as quality6_9_3_, categories6_.productId as productI2_9_11_, productcat7_.id as category1_7_11_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_, productcat8_.id as id1_6_5_, productcat8_.name as name2_6_5_, productcat8_.parent_id as parent_i3_6_5_ from locations location0_ inner join regions region1_ on location0_.region=region1_.id left outer join borders borders1x2_ on region1_.id=borders1x2_.region1 left outer join borders borders2x3_ on region1_.id=borders2x3_.region2 left outer join product_regions products4_ on region1_.id=products4_.regionId left outer join products product5_ on products4_.productId=product5_.id left outer join product_categories categories6_ on product5_.id=categories6_.productId left outer join productCategories productcat7_ on categories6_.categoryId=productcat7_.id left outer join productCategories productcat8_ on productcat7_.parent_id=productcat8_.id where location0_.id=?
2014-05-22 13:42:41,209 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Location [READ]: select location0_.id as id1_4_6_, location0_.comment as comment2_4_6_, location0_.height as height3_4_6_, location0_.name as name4_4_6_, location0_.planFileName as planFile5_4_6_, location0_.region as region10_4_6_, location0_.sizeId as sizeId6_4_6_, location0_.weatherId as weatherI7_4_6_, location0_.xCoord as xCoord8_4_6_, location0_.yCoord as yCoord9_4_6_, region1_.id as id1_10_0_, region1_.color as color2_10_0_, region1_.comment as comment3_10_0_, region1_.name as name4_10_0_, region1_.rainfallChanceId as rainfall5_10_0_, region1_.temperatureId as temperat6_10_0_, borders1x2_.region1 as region3_10_8_, borders1x2_.region1 as region3_2_8_, borders1x2_.region2 as region2_2_8_, borders1x2_.region1 as region3_2_1_, borders1x2_.region2 as region2_2_1_, borders1x2_.borderCost as borderCo1_2_1_, borders2x3_.region2 as region2_10_9_, borders2x3_.region1 as region3_2_9_, borders2x3_.region2 as region2_2_9_, borders2x3_.region1 as region3_2_2_, borders2x3_.region2 as region2_2_2_, borders2x3_.borderCost as borderCo1_2_2_, products4_.regionId as regionId2_10_10_, product5_.id as productI1_8_10_, product5_.id as id1_9_3_, product5_.attributeId as attribut2_9_3_, product5_.comment as comment3_9_3_, product5_.cost as cost4_9_3_, product5_.name as name5_9_3_, product5_.quality as quality6_9_3_, categories6_.productId as productI2_9_11_, productcat7_.id as category1_7_11_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_, productcat8_.id as id1_6_5_, productcat8_.name as name2_6_5_, productcat8_.parent_id as parent_i3_6_5_ from locations location0_ inner join regions region1_ on location0_.region=region1_.id left outer join borders borders1x2_ on region1_.id=borders1x2_.region1 left outer join borders borders2x3_ on region1_.id=borders2x3_.region2 left outer join product_regions products4_ on region1_.id=products4_.regionId left outer join products product5_ on products4_.productId=product5_.id left outer join product_categories categories6_ on product5_.id=categories6_.productId left outer join productCategories productcat7_ on categories6_.categoryId=productcat7_.id left outer join productCategories productcat8_ on productcat7_.parent_id=productcat8_.id where location0_.id=?
2014-05-22 13:42:41,209 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Location [UPGRADE]: select location0_.id as id1_4_0_, location0_.comment as comment2_4_0_, location0_.height as height3_4_0_, location0_.name as name4_4_0_, location0_.planFileName as planFile5_4_0_, location0_.region as region10_4_0_, location0_.sizeId as sizeId6_4_0_, location0_.weatherId as weatherI7_4_0_, location0_.xCoord as xCoord8_4_0_, location0_.yCoord as yCoord9_4_0_ from locations location0_ where location0_.id=?
2014-05-22 13:42:41,209 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Location [UPGRADE_NOWAIT]: select location0_.id as id1_4_0_, location0_.comment as comment2_4_0_, location0_.height as height3_4_0_, location0_.name as name4_4_0_, location0_.planFileName as planFile5_4_0_, location0_.region as region10_4_0_, location0_.sizeId as sizeId6_4_0_, location0_.weatherId as weatherI7_4_0_, location0_.xCoord as xCoord8_4_0_, location0_.yCoord as yCoord9_4_0_ from locations location0_ where location0_.id=?
2014-05-22 13:42:41,209 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Location [FORCE]: select location0_.id as id1_4_0_, location0_.comment as comment2_4_0_, location0_.height as height3_4_0_, location0_.name as name4_4_0_, location0_.planFileName as planFile5_4_0_, location0_.region as region10_4_0_, location0_.sizeId as sizeId6_4_0_, location0_.weatherId as weatherI7_4_0_, location0_.xCoord as xCoord8_4_0_, location0_.yCoord as yCoord9_4_0_ from locations location0_ where location0_.id=?
2014-05-22 13:42:41,209 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Location [PESSIMISTIC_READ]: select location0_.id as id1_4_0_, location0_.comment as comment2_4_0_, location0_.height as height3_4_0_, location0_.name as name4_4_0_, location0_.planFileName as planFile5_4_0_, location0_.region as region10_4_0_, location0_.sizeId as sizeId6_4_0_, location0_.weatherId as weatherI7_4_0_, location0_.xCoord as xCoord8_4_0_, location0_.yCoord as yCoord9_4_0_ from locations location0_ where location0_.id=?
2014-05-22 13:42:41,210 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Location [PESSIMISTIC_WRITE]: select location0_.id as id1_4_0_, location0_.comment as comment2_4_0_, location0_.height as height3_4_0_, location0_.name as name4_4_0_, location0_.planFileName as planFile5_4_0_, location0_.region as region10_4_0_, location0_.sizeId as sizeId6_4_0_, location0_.weatherId as weatherI7_4_0_, location0_.xCoord as xCoord8_4_0_, location0_.yCoord as yCoord9_4_0_ from locations location0_ where location0_.id=?
2014-05-22 13:42:41,210 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Location [PESSIMISTIC_FORCE_INCREMENT]: select location0_.id as id1_4_0_, location0_.comment as comment2_4_0_, location0_.height as height3_4_0_, location0_.name as name4_4_0_, location0_.planFileName as planFile5_4_0_, location0_.region as region10_4_0_, location0_.sizeId as sizeId6_4_0_, location0_.weatherId as weatherI7_4_0_, location0_.xCoord as xCoord8_4_0_, location0_.yCoord as yCoord9_4_0_ from locations location0_ where location0_.id=?
2014-05-22 13:42:41,210 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Location [OPTIMISTIC]: select location0_.id as id1_4_0_, location0_.comment as comment2_4_0_, location0_.height as height3_4_0_, location0_.name as name4_4_0_, location0_.planFileName as planFile5_4_0_, location0_.region as region10_4_0_, location0_.sizeId as sizeId6_4_0_, location0_.weatherId as weatherI7_4_0_, location0_.xCoord as xCoord8_4_0_, location0_.yCoord as yCoord9_4_0_ from locations location0_ where location0_.id=?
2014-05-22 13:42:41,210 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Location [OPTIMISTIC_FORCE_INCREMENT]: select location0_.id as id1_4_0_, location0_.comment as comment2_4_0_, location0_.height as height3_4_0_, location0_.name as name4_4_0_, location0_.planFileName as planFile5_4_0_, location0_.region as region10_4_0_, location0_.sizeId as sizeId6_4_0_, location0_.weatherId as weatherI7_4_0_, location0_.xCoord as xCoord8_4_0_, location0_.yCoord as yCoord9_4_0_ from locations location0_ where location0_.id=?
2014-05-22 13:42:41,211 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity sepm.dsa.model.Location: select location0_.id as id1_4_0_, location0_.comment as comment2_4_0_, location0_.height as height3_4_0_, location0_.name as name4_4_0_, location0_.planFileName as planFile5_4_0_, location0_.region as region10_4_0_, location0_.sizeId as sizeId6_4_0_, location0_.weatherId as weatherI7_4_0_, location0_.xCoord as xCoord8_4_0_, location0_.yCoord as yCoord9_4_0_ from locations location0_ where location0_.id=?
2014-05-22 13:42:41,211 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity sepm.dsa.model.Location: select location0_.id as id1_4_0_, location0_.comment as comment2_4_0_, location0_.height as height3_4_0_, location0_.name as name4_4_0_, location0_.planFileName as planFile5_4_0_, location0_.region as region10_4_0_, location0_.sizeId as sizeId6_4_0_, location0_.weatherId as weatherI7_4_0_, location0_.xCoord as xCoord8_4_0_, location0_.yCoord as yCoord9_4_0_ from locations location0_ where location0_.id=?
2014-05-22 13:42:41,211 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.AssortmentNature [NONE]: select assortment0_.id as id1_1_4_, assortment0_.defaultOccurence as defaultO2_1_4_, assortment0_.productCategory_id as productC3_1_4_, assortment0_.traderCategory_id as traderCa4_1_4_, productcat1_.id as id1_6_0_, productcat1_.name as name2_6_0_, productcat1_.parent_id as parent_i3_6_0_, productcat2_.id as id1_6_1_, productcat2_.name as name2_6_1_, productcat2_.parent_id as parent_i3_6_1_, products3_.categoryId as category1_6_6_, product4_.id as productI2_7_6_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, tradercate5_.id as id1_11_3_, tradercate5_.comment as comment2_11_3_, tradercate5_.name as name3_11_3_ from assortmentNatures assortment0_ left outer join productCategories productcat1_ on assortment0_.productCategory_id=productcat1_.id left outer join productCategories productcat2_ on productcat1_.parent_id=productcat2_.id left outer join product_categories products3_ on productcat2_.id=products3_.categoryId left outer join products product4_ on products3_.productId=product4_.id inner join traderCategories tradercate5_ on assortment0_.traderCategory_id=tradercate5_.id where assortment0_.id=?
2014-05-22 13:42:41,212 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.AssortmentNature [READ]: select assortment0_.id as id1_1_4_, assortment0_.defaultOccurence as defaultO2_1_4_, assortment0_.productCategory_id as productC3_1_4_, assortment0_.traderCategory_id as traderCa4_1_4_, productcat1_.id as id1_6_0_, productcat1_.name as name2_6_0_, productcat1_.parent_id as parent_i3_6_0_, productcat2_.id as id1_6_1_, productcat2_.name as name2_6_1_, productcat2_.parent_id as parent_i3_6_1_, products3_.categoryId as category1_6_6_, product4_.id as productI2_7_6_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, tradercate5_.id as id1_11_3_, tradercate5_.comment as comment2_11_3_, tradercate5_.name as name3_11_3_ from assortmentNatures assortment0_ left outer join productCategories productcat1_ on assortment0_.productCategory_id=productcat1_.id left outer join productCategories productcat2_ on productcat1_.parent_id=productcat2_.id left outer join product_categories products3_ on productcat2_.id=products3_.categoryId left outer join products product4_ on products3_.productId=product4_.id inner join traderCategories tradercate5_ on assortment0_.traderCategory_id=tradercate5_.id where assortment0_.id=?
2014-05-22 13:42:41,212 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.AssortmentNature [UPGRADE]: select assortment0_.id as id1_1_0_, assortment0_.defaultOccurence as defaultO2_1_0_, assortment0_.productCategory_id as productC3_1_0_, assortment0_.traderCategory_id as traderCa4_1_0_ from assortmentNatures assortment0_ where assortment0_.id=?
2014-05-22 13:42:41,212 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.AssortmentNature [UPGRADE_NOWAIT]: select assortment0_.id as id1_1_0_, assortment0_.defaultOccurence as defaultO2_1_0_, assortment0_.productCategory_id as productC3_1_0_, assortment0_.traderCategory_id as traderCa4_1_0_ from assortmentNatures assortment0_ where assortment0_.id=?
2014-05-22 13:42:41,213 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.AssortmentNature [FORCE]: select assortment0_.id as id1_1_0_, assortment0_.defaultOccurence as defaultO2_1_0_, assortment0_.productCategory_id as productC3_1_0_, assortment0_.traderCategory_id as traderCa4_1_0_ from assortmentNatures assortment0_ where assortment0_.id=?
2014-05-22 13:42:41,213 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.AssortmentNature [PESSIMISTIC_READ]: select assortment0_.id as id1_1_0_, assortment0_.defaultOccurence as defaultO2_1_0_, assortment0_.productCategory_id as productC3_1_0_, assortment0_.traderCategory_id as traderCa4_1_0_ from assortmentNatures assortment0_ where assortment0_.id=?
2014-05-22 13:42:41,213 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.AssortmentNature [PESSIMISTIC_WRITE]: select assortment0_.id as id1_1_0_, assortment0_.defaultOccurence as defaultO2_1_0_, assortment0_.productCategory_id as productC3_1_0_, assortment0_.traderCategory_id as traderCa4_1_0_ from assortmentNatures assortment0_ where assortment0_.id=?
2014-05-22 13:42:41,213 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.AssortmentNature [PESSIMISTIC_FORCE_INCREMENT]: select assortment0_.id as id1_1_0_, assortment0_.defaultOccurence as defaultO2_1_0_, assortment0_.productCategory_id as productC3_1_0_, assortment0_.traderCategory_id as traderCa4_1_0_ from assortmentNatures assortment0_ where assortment0_.id=?
2014-05-22 13:42:41,213 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.AssortmentNature [OPTIMISTIC]: select assortment0_.id as id1_1_0_, assortment0_.defaultOccurence as defaultO2_1_0_, assortment0_.productCategory_id as productC3_1_0_, assortment0_.traderCategory_id as traderCa4_1_0_ from assortmentNatures assortment0_ where assortment0_.id=?
2014-05-22 13:42:41,213 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.AssortmentNature [OPTIMISTIC_FORCE_INCREMENT]: select assortment0_.id as id1_1_0_, assortment0_.defaultOccurence as defaultO2_1_0_, assortment0_.productCategory_id as productC3_1_0_, assortment0_.traderCategory_id as traderCa4_1_0_ from assortmentNatures assortment0_ where assortment0_.id=?
2014-05-22 13:42:41,214 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity sepm.dsa.model.AssortmentNature: select assortment0_.id as id1_1_2_, assortment0_.defaultOccurence as defaultO2_1_2_, assortment0_.productCategory_id as productC3_1_2_, assortment0_.traderCategory_id as traderCa4_1_2_, tradercate1_.id as id1_11_0_, tradercate1_.comment as comment2_11_0_, tradercate1_.name as name3_11_0_, assortment2_.assortments_id as assortme5_11_4_, assortment2_.id as id1_1_4_, assortment2_.id as id1_1_1_, assortment2_.defaultOccurence as defaultO2_1_1_, assortment2_.productCategory_id as productC3_1_1_, assortment2_.traderCategory_id as traderCa4_1_1_ from assortmentNatures assortment0_ inner join traderCategories tradercate1_ on assortment0_.traderCategory_id=tradercate1_.id left outer join assortmentNatures assortment2_ on tradercate1_.id=assortment2_.assortments_id where assortment0_.id=?
2014-05-22 13:42:41,214 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity sepm.dsa.model.AssortmentNature: select assortment0_.id as id1_1_2_, assortment0_.defaultOccurence as defaultO2_1_2_, assortment0_.productCategory_id as productC3_1_2_, assortment0_.traderCategory_id as traderCa4_1_2_, tradercate1_.id as id1_11_0_, tradercate1_.comment as comment2_11_0_, tradercate1_.name as name3_11_0_, assortment2_.assortments_id as assortme5_11_4_, assortment2_.id as id1_1_4_, assortment2_.id as id1_1_1_, assortment2_.defaultOccurence as defaultO2_1_1_, assortment2_.productCategory_id as productC3_1_1_, assortment2_.traderCategory_id as traderCa4_1_1_ from assortmentNatures assortment0_ inner join traderCategories tradercate1_ on assortment0_.traderCategory_id=tradercate1_.id left outer join assortmentNatures assortment2_ on tradercate1_.id=assortment2_.assortments_id where assortment0_.id=?
2014-05-22 13:42:41,215 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Offer [NONE]: select offer0_.id as id1_5_11_, offer0_.amount as amount2_5_11_, offer0_.pricePerUnit as pricePer3_5_11_, offer0_.product_id as product_5_5_11_, offer0_.qualityId as qualityI4_5_11_, offer0_.trader_id as trader_i6_5_11_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_, categories2_.productId as productI2_9_13_, productcat3_.id as category1_7_13_, productcat3_.id as id1_6_1_, productcat3_.name as name2_6_1_, productcat3_.parent_id as parent_i3_6_1_, productcat4_.id as id1_6_2_, productcat4_.name as name2_6_2_, productcat4_.parent_id as parent_i3_6_2_, trader5_.id as id1_12_3_, trader5_.category_id as categor11_12_3_, trader5_.charisma as charisma2_12_3_, trader5_.comment as comment3_12_3_, trader5_.convince as convince4_12_3_, trader5_.intelligence as intellig5_12_3_, trader5_.location_id as locatio12_12_3_, trader5_.mut as mut6_12_3_, trader5_.name as name7_12_3_, trader5_.size as size8_12_3_, trader5_.xPos as xPos9_12_3_, trader5_.yPos as yPos10_12_3_, tradercate6_.id as id1_11_4_, tradercate6_.comment as comment2_11_4_, tradercate6_.name as name3_11_4_, deals7_.trader_id as trader_i7_12_14_, deals7_.id as id1_3_14_, deals7_.id as id1_3_5_, deals7_.amount as amount2_3_5_, deals7_.date as date3_3_5_, deals7_.price as price4_3_5_, deals7_.purchase as purchase5_3_5_, deals7_.qualityId as qualityI6_3_5_, deals7_.trader_id as trader_i7_3_5_, location8_.id as id1_4_6_, location8_.comment as comment2_4_6_, location8_.height as height3_4_6_, location8_.name as name4_4_6_, location8_.planFileName as planFile5_4_6_, location8_.region as region10_4_6_, location8_.sizeId as sizeId6_4_6_, location8_.weatherId as weatherI7_4_6_, location8_.xCoord as xCoord8_4_6_, location8_.yCoord as yCoord9_4_6_, region9_.id as id1_10_7_, region9_.color as color2_10_7_, region9_.comment as comment3_10_7_, region9_.name as name4_10_7_, region9_.rainfallChanceId as rainfall5_10_7_, region9_.temperatureId as temperat6_10_7_, borders1x10_.region1 as region3_10_15_, borders1x10_.region1 as region3_2_15_, borders1x10_.region2 as region2_2_15_, borders1x10_.region1 as region3_2_8_, borders1x10_.region2 as region2_2_8_, borders1x10_.borderCost as borderCo1_2_8_, borders2x11_.region2 as region2_10_16_, borders2x11_.region1 as region3_2_16_, borders2x11_.region2 as region2_2_16_, borders2x11_.region1 as region3_2_9_, borders2x11_.region2 as region2_2_9_, borders2x11_.borderCost as borderCo1_2_9_, products12_.regionId as regionId2_10_17_, product13_.id as productI1_8_17_, product13_.id as id1_9_10_, product13_.attributeId as attribut2_9_10_, product13_.comment as comment3_9_10_, product13_.cost as cost4_9_10_, product13_.name as name5_9_10_, product13_.quality as quality6_9_10_ from offers offer0_ inner join products product1_ on offer0_.product_id=product1_.id left outer join product_categories categories2_ on product1_.id=categories2_.productId left outer join productCategories productcat3_ on categories2_.categoryId=productcat3_.id left outer join productCategories productcat4_ on productcat3_.parent_id=productcat4_.id inner join traders trader5_ on offer0_.trader_id=trader5_.id left outer join traderCategories tradercate6_ on trader5_.category_id=tradercate6_.id left outer join deals deals7_ on trader5_.id=deals7_.trader_id left outer join locations location8_ on trader5_.location_id=location8_.id left outer join regions region9_ on location8_.region=region9_.id left outer join borders borders1x10_ on region9_.id=borders1x10_.region1 left outer join borders borders2x11_ on region9_.id=borders2x11_.region2 left outer join product_regions products12_ on region9_.id=products12_.regionId left outer join products product13_ on products12_.productId=product13_.id where offer0_.id=?
2014-05-22 13:42:41,216 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Offer [READ]: select offer0_.id as id1_5_11_, offer0_.amount as amount2_5_11_, offer0_.pricePerUnit as pricePer3_5_11_, offer0_.product_id as product_5_5_11_, offer0_.qualityId as qualityI4_5_11_, offer0_.trader_id as trader_i6_5_11_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_, categories2_.productId as productI2_9_13_, productcat3_.id as category1_7_13_, productcat3_.id as id1_6_1_, productcat3_.name as name2_6_1_, productcat3_.parent_id as parent_i3_6_1_, productcat4_.id as id1_6_2_, productcat4_.name as name2_6_2_, productcat4_.parent_id as parent_i3_6_2_, trader5_.id as id1_12_3_, trader5_.category_id as categor11_12_3_, trader5_.charisma as charisma2_12_3_, trader5_.comment as comment3_12_3_, trader5_.convince as convince4_12_3_, trader5_.intelligence as intellig5_12_3_, trader5_.location_id as locatio12_12_3_, trader5_.mut as mut6_12_3_, trader5_.name as name7_12_3_, trader5_.size as size8_12_3_, trader5_.xPos as xPos9_12_3_, trader5_.yPos as yPos10_12_3_, tradercate6_.id as id1_11_4_, tradercate6_.comment as comment2_11_4_, tradercate6_.name as name3_11_4_, deals7_.trader_id as trader_i7_12_14_, deals7_.id as id1_3_14_, deals7_.id as id1_3_5_, deals7_.amount as amount2_3_5_, deals7_.date as date3_3_5_, deals7_.price as price4_3_5_, deals7_.purchase as purchase5_3_5_, deals7_.qualityId as qualityI6_3_5_, deals7_.trader_id as trader_i7_3_5_, location8_.id as id1_4_6_, location8_.comment as comment2_4_6_, location8_.height as height3_4_6_, location8_.name as name4_4_6_, location8_.planFileName as planFile5_4_6_, location8_.region as region10_4_6_, location8_.sizeId as sizeId6_4_6_, location8_.weatherId as weatherI7_4_6_, location8_.xCoord as xCoord8_4_6_, location8_.yCoord as yCoord9_4_6_, region9_.id as id1_10_7_, region9_.color as color2_10_7_, region9_.comment as comment3_10_7_, region9_.name as name4_10_7_, region9_.rainfallChanceId as rainfall5_10_7_, region9_.temperatureId as temperat6_10_7_, borders1x10_.region1 as region3_10_15_, borders1x10_.region1 as region3_2_15_, borders1x10_.region2 as region2_2_15_, borders1x10_.region1 as region3_2_8_, borders1x10_.region2 as region2_2_8_, borders1x10_.borderCost as borderCo1_2_8_, borders2x11_.region2 as region2_10_16_, borders2x11_.region1 as region3_2_16_, borders2x11_.region2 as region2_2_16_, borders2x11_.region1 as region3_2_9_, borders2x11_.region2 as region2_2_9_, borders2x11_.borderCost as borderCo1_2_9_, products12_.regionId as regionId2_10_17_, product13_.id as productI1_8_17_, product13_.id as id1_9_10_, product13_.attributeId as attribut2_9_10_, product13_.comment as comment3_9_10_, product13_.cost as cost4_9_10_, product13_.name as name5_9_10_, product13_.quality as quality6_9_10_ from offers offer0_ inner join products product1_ on offer0_.product_id=product1_.id left outer join product_categories categories2_ on product1_.id=categories2_.productId left outer join productCategories productcat3_ on categories2_.categoryId=productcat3_.id left outer join productCategories productcat4_ on productcat3_.parent_id=productcat4_.id inner join traders trader5_ on offer0_.trader_id=trader5_.id left outer join traderCategories tradercate6_ on trader5_.category_id=tradercate6_.id left outer join deals deals7_ on trader5_.id=deals7_.trader_id left outer join locations location8_ on trader5_.location_id=location8_.id left outer join regions region9_ on location8_.region=region9_.id left outer join borders borders1x10_ on region9_.id=borders1x10_.region1 left outer join borders borders2x11_ on region9_.id=borders2x11_.region2 left outer join product_regions products12_ on region9_.id=products12_.regionId left outer join products product13_ on products12_.productId=product13_.id where offer0_.id=?
2014-05-22 13:42:41,217 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Offer [UPGRADE]: select offer0_.id as id1_5_0_, offer0_.amount as amount2_5_0_, offer0_.pricePerUnit as pricePer3_5_0_, offer0_.product_id as product_5_5_0_, offer0_.qualityId as qualityI4_5_0_, offer0_.trader_id as trader_i6_5_0_ from offers offer0_ where offer0_.id=?
2014-05-22 13:42:41,221 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Offer [UPGRADE_NOWAIT]: select offer0_.id as id1_5_0_, offer0_.amount as amount2_5_0_, offer0_.pricePerUnit as pricePer3_5_0_, offer0_.product_id as product_5_5_0_, offer0_.qualityId as qualityI4_5_0_, offer0_.trader_id as trader_i6_5_0_ from offers offer0_ where offer0_.id=?
2014-05-22 13:42:41,221 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Offer [FORCE]: select offer0_.id as id1_5_0_, offer0_.amount as amount2_5_0_, offer0_.pricePerUnit as pricePer3_5_0_, offer0_.product_id as product_5_5_0_, offer0_.qualityId as qualityI4_5_0_, offer0_.trader_id as trader_i6_5_0_ from offers offer0_ where offer0_.id=?
2014-05-22 13:42:41,222 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Offer [PESSIMISTIC_READ]: select offer0_.id as id1_5_0_, offer0_.amount as amount2_5_0_, offer0_.pricePerUnit as pricePer3_5_0_, offer0_.product_id as product_5_5_0_, offer0_.qualityId as qualityI4_5_0_, offer0_.trader_id as trader_i6_5_0_ from offers offer0_ where offer0_.id=?
2014-05-22 13:42:41,222 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Offer [PESSIMISTIC_WRITE]: select offer0_.id as id1_5_0_, offer0_.amount as amount2_5_0_, offer0_.pricePerUnit as pricePer3_5_0_, offer0_.product_id as product_5_5_0_, offer0_.qualityId as qualityI4_5_0_, offer0_.trader_id as trader_i6_5_0_ from offers offer0_ where offer0_.id=?
2014-05-22 13:42:41,222 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Offer [PESSIMISTIC_FORCE_INCREMENT]: select offer0_.id as id1_5_0_, offer0_.amount as amount2_5_0_, offer0_.pricePerUnit as pricePer3_5_0_, offer0_.product_id as product_5_5_0_, offer0_.qualityId as qualityI4_5_0_, offer0_.trader_id as trader_i6_5_0_ from offers offer0_ where offer0_.id=?
2014-05-22 13:42:41,222 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Offer [OPTIMISTIC]: select offer0_.id as id1_5_0_, offer0_.amount as amount2_5_0_, offer0_.pricePerUnit as pricePer3_5_0_, offer0_.product_id as product_5_5_0_, offer0_.qualityId as qualityI4_5_0_, offer0_.trader_id as trader_i6_5_0_ from offers offer0_ where offer0_.id=?
2014-05-22 13:42:41,222 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity sepm.dsa.model.Offer [OPTIMISTIC_FORCE_INCREMENT]: select offer0_.id as id1_5_0_, offer0_.amount as amount2_5_0_, offer0_.pricePerUnit as pricePer3_5_0_, offer0_.product_id as product_5_5_0_, offer0_.qualityId as qualityI4_5_0_, offer0_.trader_id as trader_i6_5_0_ from offers offer0_ where offer0_.id=?
2014-05-22 13:42:41,222 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity sepm.dsa.model.Offer: select offer0_.id as id1_5_0_, offer0_.amount as amount2_5_0_, offer0_.pricePerUnit as pricePer3_5_0_, offer0_.product_id as product_5_5_0_, offer0_.qualityId as qualityI4_5_0_, offer0_.trader_id as trader_i6_5_0_ from offers offer0_ where offer0_.id=?
2014-05-22 13:42:41,223 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity sepm.dsa.model.Offer: select offer0_.id as id1_5_0_, offer0_.amount as amount2_5_0_, offer0_.pricePerUnit as pricePer3_5_0_, offer0_.product_id as product_5_5_0_, offer0_.qualityId as qualityI4_5_0_, offer0_.trader_id as trader_i6_5_0_ from offers offer0_ where offer0_.id=?
2014-05-22 13:42:41,228 [JavaFX Application Thread] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many sepm.dsa.model.Trader.offers: select offers0_.trader_id as trader_i6_12_2_, offers0_.id as id1_5_2_, offers0_.id as id1_5_1_, offers0_.amount as amount2_5_1_, offers0_.pricePerUnit as pricePer3_5_1_, offers0_.product_id as product_5_5_1_, offers0_.qualityId as qualityI4_5_1_, offers0_.trader_id as trader_i6_5_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from offers offers0_ inner join products product1_ on offers0_.product_id=product1_.id where offers0_.trader_id=?
2014-05-22 13:42:41,229 [JavaFX Application Thread] DEBUG org.hibernate.loader.collection.BasicCollectionLoader - Static select for collection sepm.dsa.model.ProductCategory.products: select products0_.categoryId as category1_6_1_, products0_.productId as productI2_7_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_categories products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.categoryId=?
2014-05-22 13:42:41,230 [JavaFX Application Thread] DEBUG org.hibernate.loader.collection.BasicCollectionLoader - Static select for collection sepm.dsa.model.Product.categories: select categories0_.productId as productI2_9_2_, categories0_.categoryId as category1_7_2_, productcat1_.id as id1_6_0_, productcat1_.name as name2_6_0_, productcat1_.parent_id as parent_i3_6_0_, productcat2_.id as id1_6_1_, productcat2_.name as name2_6_1_, productcat2_.parent_id as parent_i3_6_1_ from product_categories categories0_ inner join productCategories productcat1_ on categories0_.categoryId=productcat1_.id left outer join productCategories productcat2_ on productcat1_.parent_id=productcat2_.id where categories0_.productId=?
2014-05-22 13:42:41,230 [JavaFX Application Thread] DEBUG org.hibernate.loader.collection.BasicCollectionLoader - Static select for collection sepm.dsa.model.Product.productionRegions: select production0_.productId as productI1_9_1_, production0_.regionId as regionId2_8_1_, region1_.id as id1_10_0_, region1_.color as color2_10_0_, region1_.comment as comment3_10_0_, region1_.name as name4_10_0_, region1_.rainfallChanceId as rainfall5_10_0_, region1_.temperatureId as temperat6_10_0_ from product_regions production0_ inner join regions region1_ on production0_.regionId=region1_.id where production0_.productId=?
2014-05-22 13:42:41,230 [JavaFX Application Thread] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many sepm.dsa.model.TraderCategory.assortments: select assortment0_.assortments_id as assortme5_11_4_, assortment0_.id as id1_1_4_, assortment0_.id as id1_1_3_, assortment0_.defaultOccurence as defaultO2_1_3_, assortment0_.productCategory_id as productC3_1_3_, assortment0_.traderCategory_id as traderCa4_1_3_, productcat1_.id as id1_6_0_, productcat1_.name as name2_6_0_, productcat1_.parent_id as parent_i3_6_0_, productcat2_.id as id1_6_1_, productcat2_.name as name2_6_1_, productcat2_.parent_id as parent_i3_6_1_, tradercate3_.id as id1_11_2_, tradercate3_.comment as comment2_11_2_, tradercate3_.name as name3_11_2_ from assortmentNatures assortment0_ left outer join productCategories productcat1_ on assortment0_.productCategory_id=productcat1_.id left outer join productCategories productcat2_ on productcat1_.parent_id=productcat2_.id inner join traderCategories tradercate3_ on assortment0_.traderCategory_id=tradercate3_.id where assortment0_.assortments_id=?
2014-05-22 13:42:41,230 [JavaFX Application Thread] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many sepm.dsa.model.ProductCategory.childs: select childs0_.parent_id as parent_i3_6_1_, childs0_.id as id1_6_1_, childs0_.id as id1_6_0_, childs0_.name as name2_6_0_, childs0_.parent_id as parent_i3_6_0_ from productCategories childs0_ where childs0_.parent_id=?
2014-05-22 13:42:41,231 [JavaFX Application Thread] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many sepm.dsa.model.Region.borders1: select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:42:41,231 [JavaFX Application Thread] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many sepm.dsa.model.Region.borders2: select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:42:41,231 [JavaFX Application Thread] DEBUG org.hibernate.loader.collection.BasicCollectionLoader - Static select for collection sepm.dsa.model.Region.products: select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:42:41,231 [JavaFX Application Thread] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many sepm.dsa.model.Trader.deals: select deals0_.trader_id as trader_i7_12_1_, deals0_.id as id1_3_1_, deals0_.id as id1_3_0_, deals0_.amount as amount2_3_0_, deals0_.date as date3_3_0_, deals0_.price as price4_3_0_, deals0_.purchase as purchase5_3_0_, deals0_.qualityId as qualityI6_3_0_, deals0_.trader_id as trader_i7_3_0_ from deals deals0_ where deals0_.trader_id=?
2014-05-22 13:42:41,281 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@67c9b3e9
2014-05-22 13:42:41,281 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 67944248-e1f7-413a-ba89-aead80617526 (<unnamed>)
2014-05-22 13:42:41,281 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2014-05-22 13:42:41,281 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2014-05-22 13:42:41,285 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2014-05-22 13:42:41,285 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata
2014-05-22 13:42:41,285 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:42:41,287 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema
2014-05-22 13:42:41,287 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files
2014-05-22 13:42:41,287 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Process annotated classes
2014-05-22 13:42:41,287 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
2014-05-22 13:42:41,287 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2014-05-22 13:42:41,287 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2014-05-22 13:42:41,287 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing collection mappings
2014-05-22 13:42:41,287 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
2014-05-22 13:42:41,287 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing association property references
2014-05-22 13:42:41,287 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers
2014-05-22 13:42:41,287 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints
2014-05-22 13:42:41,287 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.ProductCategory
2014-05-22 13:42:41,287 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.TraderCategory
2014-05-22 13:42:41,287 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.TraderCategory
2014-05-22 13:42:41,287 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Region
2014-05-22 13:42:41,288 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Region
2014-05-22 13:42:41,288 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Trader
2014-05-22 13:42:41,288 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Region
2014-05-22 13:42:41,288 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Product
2014-05-22 13:42:41,288 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Trader
2014-05-22 13:42:41,288 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.ProductCategory
2014-05-22 13:42:41,288 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Product
2014-05-22 13:42:41,288 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.ProductCategory
2014-05-22 13:42:41,288 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Region
2014-05-22 13:42:41,288 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Product
2014-05-22 13:42:41,288 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.TraderCategory
2014-05-22 13:42:41,288 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Resolving reference to class: sepm.dsa.model.Location
2014-05-22 13:42:41,301 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: ProductUnit
2014-05-22 13:42:41,301 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,303 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: assortmentNatures
2014-05-22 13:42:41,303 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,350 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.BORDERS
2014-05-22 13:42:41,350 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [region1, region2, bordercost]
2014-05-22 13:42:41,350 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_emhw2sfj7xjx3df0k5aseg9mq, fk_7xx83419llaxu9oo8ugtx6er3]
2014-05-22 13:42:41,350 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10130, sys_idx_sys_pk_10092_10093, sys_idx_10127]
2014-05-22 13:42:41,350 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: deals
2014-05-22 13:42:41,350 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,352 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.LOCATIONS
2014-05-22 13:42:41,353 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [sizeid, weatherid, xcoord, planfilename, name, comment, id, region, ycoord, height]
2014-05-22 13:42:41,353 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_1786dk9g78kmajpxnwxyll5n3]
2014-05-22 13:42:41,353 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10100_10107, sys_idx_10139]
2014-05-22 13:42:41,353 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: offers
2014-05-22 13:42:41,353 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,354 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: productCategories
2014-05-22 13:42:41,354 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,355 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: product_categories
2014-05-22 13:42:41,355 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: product_regions
2014-05-22 13:42:41,356 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: products
2014-05-22 13:42:41,356 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,359 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.REGIONS
2014-05-22 13:42:41,359 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [color, name, comment, id, rainfallchanceid, temperatureid]
2014-05-22 13:42:41,359 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 13:42:41,359 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10116_10121]
2014-05-22 13:42:41,361 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: traderCategories
2014-05-22 13:42:41,362 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,362 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: traders
2014-05-22 13:42:41,363 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,363 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: ProductUnit
2014-05-22 13:42:41,364 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: assortmentNatures
2014-05-22 13:42:41,365 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: deals
2014-05-22 13:42:41,366 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: offers
2014-05-22 13:42:41,366 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: productCategories
2014-05-22 13:42:41,367 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: product_categories
2014-05-22 13:42:41,370 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: product_regions
2014-05-22 13:42:41,371 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: products
2014-05-22 13:42:41,372 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: traderCategories
2014-05-22 13:42:41,372 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: traders
2014-05-22 13:42:41,373 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: ProductUnit
2014-05-22 13:42:41,373 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: assortmentNatures
2014-05-22 13:42:41,374 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: deals
2014-05-22 13:42:41,375 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: offers
2014-05-22 13:42:41,375 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: productCategories
2014-05-22 13:42:41,376 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: product_categories
2014-05-22 13:42:41,377 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: product_regions
2014-05-22 13:42:41,377 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: products
2014-05-22 13:42:41,378 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: traderCategories
2014-05-22 13:42:41,379 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: traders
2014-05-22 13:42:41,379 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,379 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,379 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,379 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,379 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,379 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,381 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,382 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,382 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,382 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.HSQLDialect]
2014-05-22 13:42:41,382 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - create table ProductUnit (id integer generated by default as identity (start with 1), name varchar(60) not null, unitType varchar(60) not null, value integer not null, primary key (id))
2014-05-22 13:42:41,387 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - create table assortmentNatures (id integer generated by default as identity (start with 1), defaultOccurence integer not null, productCategory_id integer, traderCategory_id integer not null, assortments_id integer, primary key (id))
2014-05-22 13:42:41,388 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - create table deals (id integer generated by default as identity (start with 1), amount integer not null, date bigint, price integer not null, purchase boolean not null, qualityId integer not null, trader_id integer not null, primary key (id))
2014-05-22 13:42:41,389 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - create table offers (id integer generated by default as identity (start with 1), amount integer not null, pricePerUnit integer not null, qualityId integer not null, product_id integer not null, trader_id integer not null, primary key (id))
2014-05-22 13:42:41,390 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - create table productCategories (id integer generated by default as identity (start with 1), name varchar(60) not null, parent_id integer, primary key (id))
2014-05-22 13:42:41,390 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - create table product_categories (categoryId integer not null, productId integer not null, primary key (productId, categoryId))
2014-05-22 13:42:41,391 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - create table product_regions (productId integer not null, regionId integer not null, primary key (regionId, productId))
2014-05-22 13:42:41,391 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - create table products (id integer generated by default as identity (start with 1), attributeId integer not null, comment varchar(1000), cost integer not null, name varchar(60) not null, quality boolean not null, primary key (id))
2014-05-22 13:42:41,395 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - create table traderCategories (id integer generated by default as identity (start with 1), comment varchar(1000), name varchar(60) not null, primary key (id))
2014-05-22 13:42:41,395 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - create table traders (id integer generated by default as identity (start with 1), charisma integer not null, comment varchar(1000), convince integer not null, intelligence integer not null, mut integer not null, name varchar(60) not null, size integer not null, xPos integer not null, yPos integer not null, category_id integer not null, location_id integer not null, primary key (id))
2014-05-22 13:42:41,397 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table assortmentNatures add constraint FK_ngm1h9j6b3mu5hftpr93wdvdv foreign key (productCategory_id) references productCategories
2014-05-22 13:42:41,398 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table assortmentNatures add constraint FK_5vsg15giupc62g5e5u81p7qwh foreign key (traderCategory_id) references traderCategories
2014-05-22 13:42:41,399 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table assortmentNatures add constraint FK_c328928buvo2stdblctp1byyh foreign key (assortments_id) references traderCategories
2014-05-22 13:42:41,400 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table deals add constraint FK_svghy0txlxvstjgu94i5lqox foreign key (trader_id) references traders
2014-05-22 13:42:41,401 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table offers add constraint FK_ndwyqhg5t22qpbn9w9yyfj8jv foreign key (product_id) references products
2014-05-22 13:42:41,402 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table offers add constraint FK_8fnfgctij6t1t5a6nv23vl6e1 foreign key (trader_id) references traders
2014-05-22 13:42:41,411 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table productCategories add constraint FK_i69xwofcgfip1jg9o51bqnnh8 foreign key (parent_id) references productCategories
2014-05-22 13:42:41,412 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table product_categories add constraint FK_mchvd9dqbw8sy1c274cowu197 foreign key (productId) references products
2014-05-22 13:42:41,412 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table product_categories add constraint FK_dpdy1mfn7h3qpa2csbadunh4k foreign key (categoryId) references productCategories
2014-05-22 13:42:41,413 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table product_regions add constraint FK_q7f6w9g0xjwtqan09noxg3oi7 foreign key (regionId) references regions
2014-05-22 13:42:41,414 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table product_regions add constraint FK_dqvpj6i7snhiu1pyalcwnhlbq foreign key (productId) references products
2014-05-22 13:42:41,414 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table traders add constraint FK_7fuswslb1h70hc8mjcxef277j foreign key (category_id) references traderCategories
2014-05-22 13:42:41,422 [JavaFX Application Thread] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table traders add constraint FK_pd546l32fc4omyfhy1wx4tbbi foreign key (location_id) references locations
2014-05-22 13:42:41,424 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete
2014-05-22 13:42:41,429 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Checking 11 named HQL queries
2014-05-22 13:42:41,429 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Checking named query: RegionBorder.findAllForRegion
2014-05-22 13:42:41,463 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: 
        from sepm.dsa.model.RegionBorder WHERE pk.region1.id = :regionId OR pk.region2.id = :regionId
    
2014-05-22 13:42:41,471 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'sepm'
    |           |  |  \-[IDENT] Node: 'dsa'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'RegionBorder'
    \-[WHERE] Node: 'WHERE'
       \-[OR] Node: 'OR'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'pk'
          |  |  |  \-[IDENT] Node: 'region1'
          |  |  \-[IDENT] Node: 'id'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'regionId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'pk'
             |  |  \-[IDENT] Node: 'region2'
             |  \-[IDENT] Node: 'id'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'regionId'

2014-05-22 13:42:41,471 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,504 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2014-05-22 13:42:41,527 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : sepm.dsa.model.RegionBorder (<no alias>) -> regionbord0_
2014-05-22 13:42:41,530 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2014-05-22 13:42:41,532 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : pk -> org.hibernate.type.ComponentType@53de12b4
2014-05-22 13:42:41,532 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - Unresolved property path is now 'pk.region1'
2014-05-22 13:42:41,532 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.pk -> regionbord0_.region1
2014-05-22 13:42:41,532 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : pk.region1 -> org.hibernate.type.ManyToOneType(sepm.dsa.model.Region)
2014-05-22 13:42:41,532 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceShortcut() : property id in sepm.dsa.model.RegionBorder does not require a join.
2014-05-22 13:42:41,532 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - Unresolved property path is now 'pk.region1.id'
2014-05-22 13:42:41,533 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.pk.region1 -> regionbord0_.region1
2014-05-22 13:42:41,533 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : pk.region1.id -> org.hibernate.type.IntegerType@198b2577
2014-05-22 13:42:41,533 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.pk.region1.id -> regionbord0_.region1
2014-05-22 13:42:41,536 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2014-05-22 13:42:41,536 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : pk -> org.hibernate.type.ComponentType@53de12b4
2014-05-22 13:42:41,536 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - Unresolved property path is now 'pk.region2'
2014-05-22 13:42:41,537 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.pk -> regionbord0_.region2
2014-05-22 13:42:41,537 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : pk.region2 -> org.hibernate.type.ManyToOneType(sepm.dsa.model.Region)
2014-05-22 13:42:41,537 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceShortcut() : property id in sepm.dsa.model.RegionBorder does not require a join.
2014-05-22 13:42:41,537 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - Unresolved property path is now 'pk.region2.id'
2014-05-22 13:42:41,537 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.pk.region2 -> regionbord0_.region2
2014-05-22 13:42:41,537 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : pk.region2.id -> org.hibernate.type.IntegerType@198b2577
2014-05-22 13:42:41,537 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.pk.region2.id -> regionbord0_.region2
2014-05-22 13:42:41,537 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2014-05-22 13:42:41,537 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} borders regionbord0_ ) ( WHERE ( OR ( = ( regionbord0_.region1 ( regionbord0_.region1 ( regionbord0_.region1 {synthetic-alias} pk ) region1 ) id ) ? ) ( = ( regionbord0_.region2 ( regionbord0_.region2 ( regionbord0_.region2 {synthetic-alias} pk ) region2 ) id ) ? ) ) ) )
2014-05-22 13:42:41,543 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2014-05-22 13:42:41,547 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [borders regionbord0_]
2014-05-22 13:42:41,548 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2014-05-22 13:42:41,548 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (borders)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=borders,tableAlias=regionbord0_,origin=null,columns={,className=sepm.dsa.model.RegionBorder}}}
    |  \-[SQL_TOKEN] SqlFragment: 'regionbord0_.borderCost as borderCo1_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[regionbord0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'borders regionbord0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=borders,tableAlias=regionbord0_,origin=null,columns={,className=sepm.dsa.model.RegionBorder}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[OR] SqlNode: 'OR'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'regionbord0_.region1' {propertyName=id,dereferenceType=ALL,propertyPath=pk.region1.id,path={synthetic-alias}.pk.region1.id,tableAlias=regionbord0_,className=sepm.dsa.model.RegionBorder,classAlias=null}
          |  |  +-[DOT] DotNode: 'regionbord0_.region1' {propertyName=id,dereferenceType=0,propertyPath=pk.region1.id,path={synthetic-alias}.pk.region1,tableAlias=regionbord0_,className=sepm.dsa.model.RegionBorder,classAlias=null}
          |  |  |  +-[DOT] DotNode: 'regionbord0_.region1' {propertyName=region1,dereferenceType=2,propertyPath=pk.region1,path={synthetic-alias}.pk,tableAlias=regionbord0_,className=sepm.dsa.model.RegionBorder,classAlias=null}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'pk' {originalText=pk}
          |  |  |  \-[IDENT] IdentNode: 'region1' {originalText=region1}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=regionId, expectedType=org.hibernate.type.IntegerType@198b2577}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'regionbord0_.region2' {propertyName=id,dereferenceType=ALL,propertyPath=pk.region2.id,path={synthetic-alias}.pk.region2.id,tableAlias=regionbord0_,className=sepm.dsa.model.RegionBorder,classAlias=null}
             |  +-[DOT] DotNode: 'regionbord0_.region2' {propertyName=id,dereferenceType=0,propertyPath=pk.region2.id,path={synthetic-alias}.pk.region2,tableAlias=regionbord0_,className=sepm.dsa.model.RegionBorder,classAlias=null}
             |  |  +-[DOT] DotNode: 'regionbord0_.region2' {propertyName=region2,dereferenceType=2,propertyPath=pk.region2,path={synthetic-alias}.pk,tableAlias=regionbord0_,className=sepm.dsa.model.RegionBorder,classAlias=null}
             |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  |  |  \-[IDENT] IdentNode: 'pk' {originalText=pk}
             |  |  \-[IDENT] IdentNode: 'region2' {originalText=region2}
             |  \-[IDENT] IdentNode: 'id' {originalText=id}
             \-[NAMED_PARAM] ParameterNode: '?' {name=regionId, expectedType=org.hibernate.type.IntegerType@198b2577}

2014-05-22 13:42:41,549 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,560 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: 
        from sepm.dsa.model.RegionBorder WHERE pk.region1.id = :regionId OR pk.region2.id = :regionId
    
2014-05-22 13:42:41,560 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:42:41,560 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,568 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Checking named query: ProductCategory.findAll
2014-05-22 13:42:41,568 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: 
        from sepm.dsa.model.ProductCategory ORDER BY name ASC
    
2014-05-22 13:42:41,571 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'sepm'
    |           |  |  \-[IDENT] Node: 'dsa'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'ProductCategory'
    \-[ORDER] Node: 'ORDER'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'ASC'

2014-05-22 13:42:41,571 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,571 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2014-05-22 13:42:41,572 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : sepm.dsa.model.ProductCategory (<no alias>) -> productcat0_
2014-05-22 13:42:41,573 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2014-05-22 13:42:41,573 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : name -> org.hibernate.type.StringType@2de901f0
2014-05-22 13:42:41,575 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.name -> productcat0_.name
2014-05-22 13:42:41,575 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2014-05-22 13:42:41,575 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} productCategories productcat0_ ) ( ORDER ( productcat0_.name {synthetic-alias} name ) ASC ) )
2014-05-22 13:42:41,575 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2014-05-22 13:42:41,575 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [productCategories productcat0_]
2014-05-22 13:42:41,575 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2014-05-22 13:42:41,576 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (productCategories)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'productcat0_.id as id1_6_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=productCategories,tableAlias=productcat0_,origin=null,columns={,className=sepm.dsa.model.ProductCategory}}}
    |  \-[SQL_TOKEN] SqlFragment: 'productcat0_.name as name2_6_, productcat0_.parent_id as parent_i3_6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[productcat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'productCategories productcat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=productCategories,tableAlias=productcat0_,origin=null,columns={,className=sepm.dsa.model.ProductCategory}}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'productcat0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=productcat0_,className=sepm.dsa.model.ProductCategory,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'ASC'

2014-05-22 13:42:41,576 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,576 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: 
        from sepm.dsa.model.ProductCategory ORDER BY name ASC
    
2014-05-22 13:42:41,576 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select productcat0_.id as id1_6_, productcat0_.name as name2_6_, productcat0_.parent_id as parent_i3_6_ from productCategories productcat0_ order by productcat0_.name ASC
2014-05-22 13:42:41,576 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,577 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Checking named query: Region.findAll
2014-05-22 13:42:41,577 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: 
        from sepm.dsa.model.Region ORDER BY name ASC
    
2014-05-22 13:42:41,579 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'sepm'
    |           |  |  \-[IDENT] Node: 'dsa'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Region'
    \-[ORDER] Node: 'ORDER'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'ASC'

2014-05-22 13:42:41,579 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,579 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2014-05-22 13:42:41,580 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : sepm.dsa.model.Region (<no alias>) -> region0_
2014-05-22 13:42:41,580 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2014-05-22 13:42:41,580 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : name -> org.hibernate.type.StringType@2de901f0
2014-05-22 13:42:41,580 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.name -> region0_.name
2014-05-22 13:42:41,580 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2014-05-22 13:42:41,580 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} regions region0_ ) ( ORDER ( region0_.name {synthetic-alias} name ) ASC ) )
2014-05-22 13:42:41,580 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2014-05-22 13:42:41,580 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [regions region0_]
2014-05-22 13:42:41,580 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2014-05-22 13:42:41,581 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (regions)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'region0_.id as id1_10_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=regions,tableAlias=region0_,origin=null,columns={,className=sepm.dsa.model.Region}}}
    |  \-[SQL_TOKEN] SqlFragment: 'region0_.color as color2_10_, region0_.comment as comment3_10_, region0_.name as name4_10_, region0_.rainfallChanceId as rainfall5_10_, region0_.temperatureId as temperat6_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[region0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'regions region0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=regions,tableAlias=region0_,origin=null,columns={,className=sepm.dsa.model.Region}}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'region0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=region0_,className=sepm.dsa.model.Region,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'ASC'

2014-05-22 13:42:41,581 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,584 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: 
        from sepm.dsa.model.Region ORDER BY name ASC
    
2014-05-22 13:42:41,584 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select region0_.id as id1_10_, region0_.color as color2_10_, region0_.comment as comment3_10_, region0_.name as name4_10_, region0_.rainfallChanceId as rainfall5_10_, region0_.temperatureId as temperat6_10_ from regions region0_ order by region0_.name ASC
2014-05-22 13:42:41,584 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,584 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Checking named query: trader.getAllForLocation
2014-05-22 13:42:41,585 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: 
        from sepm.dsa.model.Trader WHERE location = :location ORDER BY id ASC
    
2014-05-22 13:42:41,587 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'sepm'
    |           |  |  \-[IDENT] Node: 'dsa'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Trader'
    +-[WHERE] Node: 'WHERE'
    |  \-[EQ] Node: '='
    |     +-[IDENT] Node: 'location'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'location'
    \-[ORDER] Node: 'ORDER'
       +-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'ASC'

2014-05-22 13:42:41,587 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,587 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2014-05-22 13:42:41,589 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : sepm.dsa.model.Trader (<no alias>) -> trader0_
2014-05-22 13:42:41,589 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2014-05-22 13:42:41,589 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : location -> org.hibernate.type.ManyToOneType(sepm.dsa.model.Location)
2014-05-22 13:42:41,589 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceShortcut() : property location in sepm.dsa.model.Trader does not require a join.
2014-05-22 13:42:41,590 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - Terminal propertyPath = [location]
2014-05-22 13:42:41,590 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.location -> trader0_.location_id
2014-05-22 13:42:41,590 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2014-05-22 13:42:41,590 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.IntegerType@198b2577
2014-05-22 13:42:41,590 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.id -> trader0_.id
2014-05-22 13:42:41,590 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2014-05-22 13:42:41,590 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} traders trader0_ ) ( WHERE ( = ( trader0_.location_id {synthetic-alias} location ) ? ) ) ( ORDER ( trader0_.id {synthetic-alias} id ) ASC ) )
2014-05-22 13:42:41,590 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2014-05-22 13:42:41,591 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [traders trader0_]
2014-05-22 13:42:41,591 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2014-05-22 13:42:41,591 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (traders)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'trader0_.id as id1_12_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=traders,tableAlias=trader0_,origin=null,columns={,className=sepm.dsa.model.Trader}}}
    |  \-[SQL_TOKEN] SqlFragment: 'trader0_.category_id as categor11_12_, trader0_.charisma as charisma2_12_, trader0_.comment as comment3_12_, trader0_.convince as convince4_12_, trader0_.intelligence as intellig5_12_, trader0_.location_id as locatio12_12_, trader0_.mut as mut6_12_, trader0_.name as name7_12_, trader0_.size as size8_12_, trader0_.xPos as xPos9_12_, trader0_.yPos as yPos10_12_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[trader0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'traders trader0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=traders,tableAlias=trader0_,origin=null,columns={,className=sepm.dsa.model.Trader}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'trader0_.location_id' {propertyName=location,dereferenceType=0,propertyPath=location,path={synthetic-alias}.location,tableAlias=trader0_,className=sepm.dsa.model.Trader,classAlias=null}
    |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |     |  \-[IDENT] IdentNode: 'location' {originalText=location}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=location, expectedType=org.hibernate.type.ManyToOneType(sepm.dsa.model.Location)}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'trader0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=trader0_,className=sepm.dsa.model.Trader,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'ASC'

2014-05-22 13:42:41,591 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,591 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: 
        from sepm.dsa.model.Trader WHERE location = :location ORDER BY id ASC
    
2014-05-22 13:42:41,592 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select trader0_.id as id1_12_, trader0_.category_id as categor11_12_, trader0_.charisma as charisma2_12_, trader0_.comment as comment3_12_, trader0_.convince as convince4_12_, trader0_.intelligence as intellig5_12_, trader0_.location_id as locatio12_12_, trader0_.mut as mut6_12_, trader0_.name as name7_12_, trader0_.size as size8_12_, trader0_.xPos as xPos9_12_, trader0_.yPos as yPos10_12_ from traders trader0_ where trader0_.location_id=? order by trader0_.id ASC
2014-05-22 13:42:41,592 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,592 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Checking named query: TraderCategory.findAll
2014-05-22 13:42:41,592 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: 
        from sepm.dsa.model.TraderCategory ORDER BY id ASC
    
2014-05-22 13:42:41,593 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'sepm'
    |           |  |  \-[IDENT] Node: 'dsa'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'TraderCategory'
    \-[ORDER] Node: 'ORDER'
       +-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'ASC'

2014-05-22 13:42:41,593 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,594 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2014-05-22 13:42:41,594 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : sepm.dsa.model.TraderCategory (<no alias>) -> tradercate0_
2014-05-22 13:42:41,594 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2014-05-22 13:42:41,594 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.IntegerType@198b2577
2014-05-22 13:42:41,594 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.id -> tradercate0_.id
2014-05-22 13:42:41,594 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2014-05-22 13:42:41,594 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} traderCategories tradercate0_ ) ( ORDER ( tradercate0_.id {synthetic-alias} id ) ASC ) )
2014-05-22 13:42:41,594 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2014-05-22 13:42:41,594 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [traderCategories tradercate0_]
2014-05-22 13:42:41,594 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2014-05-22 13:42:41,595 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (traderCategories)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tradercate0_.id as id1_11_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=traderCategories,tableAlias=tradercate0_,origin=null,columns={,className=sepm.dsa.model.TraderCategory}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tradercate0_.comment as comment2_11_, tradercate0_.name as name3_11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tradercate0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'traderCategories tradercate0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=traderCategories,tableAlias=tradercate0_,origin=null,columns={,className=sepm.dsa.model.TraderCategory}}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'tradercate0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=tradercate0_,className=sepm.dsa.model.TraderCategory,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'ASC'

2014-05-22 13:42:41,595 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,595 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: 
        from sepm.dsa.model.TraderCategory ORDER BY id ASC
    
2014-05-22 13:42:41,595 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tradercate0_.id as id1_11_, tradercate0_.comment as comment2_11_, tradercate0_.name as name3_11_ from traderCategories tradercate0_ order by tradercate0_.id ASC
2014-05-22 13:42:41,595 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,595 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Checking named query: Product.findAll
2014-05-22 13:42:41,596 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: 
        from sepm.dsa.model.Product ORDER BY name ASC
    
2014-05-22 13:42:41,597 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'sepm'
    |           |  |  \-[IDENT] Node: 'dsa'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Product'
    \-[ORDER] Node: 'ORDER'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'ASC'

2014-05-22 13:42:41,597 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,597 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2014-05-22 13:42:41,597 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : sepm.dsa.model.Product (<no alias>) -> product0_
2014-05-22 13:42:41,597 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2014-05-22 13:42:41,597 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : name -> org.hibernate.type.StringType@2de901f0
2014-05-22 13:42:41,597 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.name -> product0_.name
2014-05-22 13:42:41,598 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2014-05-22 13:42:41,598 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} products product0_ ) ( ORDER ( product0_.name {synthetic-alias} name ) ASC ) )
2014-05-22 13:42:41,598 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2014-05-22 13:42:41,598 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [products product0_]
2014-05-22 13:42:41,598 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2014-05-22 13:42:41,598 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (products)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.id as id1_9_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=products,tableAlias=product0_,origin=null,columns={,className=sepm.dsa.model.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.attributeId as attribut2_9_, product0_.comment as comment3_9_, product0_.cost as cost4_9_, product0_.name as name5_9_, product0_.quality as quality6_9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'products product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=products,tableAlias=product0_,origin=null,columns={,className=sepm.dsa.model.Product}}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'product0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=product0_,className=sepm.dsa.model.Product,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'ASC'

2014-05-22 13:42:41,601 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,601 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: 
        from sepm.dsa.model.Product ORDER BY name ASC
    
2014-05-22 13:42:41,601 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select product0_.id as id1_9_, product0_.attributeId as attribut2_9_, product0_.comment as comment3_9_, product0_.cost as cost4_9_, product0_.name as name5_9_, product0_.quality as quality6_9_ from products product0_ order by product0_.name ASC
2014-05-22 13:42:41,601 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,601 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Checking named query: RegionBorder.findAll
2014-05-22 13:42:41,602 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: 
        from sepm.dsa.model.RegionBorder
    
2014-05-22 13:42:41,604 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'sepm'
                |  |  \-[IDENT] Node: 'dsa'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'RegionBorder'

2014-05-22 13:42:41,604 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,604 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2014-05-22 13:42:41,604 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : sepm.dsa.model.RegionBorder (<no alias>) -> regionbord0_
2014-05-22 13:42:41,604 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2014-05-22 13:42:41,604 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} borders regionbord0_ ) )
2014-05-22 13:42:41,604 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2014-05-22 13:42:41,605 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [borders regionbord0_]
2014-05-22 13:42:41,605 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2014-05-22 13:42:41,605 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (borders)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=borders,tableAlias=regionbord0_,origin=null,columns={,className=sepm.dsa.model.RegionBorder}}}
    |  \-[SQL_TOKEN] SqlFragment: 'regionbord0_.borderCost as borderCo1_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[regionbord0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'borders regionbord0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=borders,tableAlias=regionbord0_,origin=null,columns={,className=sepm.dsa.model.RegionBorder}}

2014-05-22 13:42:41,605 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,605 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: 
        from sepm.dsa.model.RegionBorder
    
2014-05-22 13:42:41,605 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_
2014-05-22 13:42:41,605 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,605 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Checking named query: trader.getAllForCategory
2014-05-22 13:42:41,605 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: 
        from sepm.dsa.model.Trader WHERE category = :category ORDER BY id ASC
    
2014-05-22 13:42:41,607 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'sepm'
    |           |  |  \-[IDENT] Node: 'dsa'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Trader'
    +-[WHERE] Node: 'WHERE'
    |  \-[EQ] Node: '='
    |     +-[IDENT] Node: 'category'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'category'
    \-[ORDER] Node: 'ORDER'
       +-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'ASC'

2014-05-22 13:42:41,607 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,607 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2014-05-22 13:42:41,607 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : sepm.dsa.model.Trader (<no alias>) -> trader0_
2014-05-22 13:42:41,607 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2014-05-22 13:42:41,607 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : category -> org.hibernate.type.ManyToOneType(sepm.dsa.model.TraderCategory)
2014-05-22 13:42:41,608 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceShortcut() : property category in sepm.dsa.model.Trader does not require a join.
2014-05-22 13:42:41,608 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - Terminal propertyPath = [category]
2014-05-22 13:42:41,608 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.category -> trader0_.category_id
2014-05-22 13:42:41,608 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2014-05-22 13:42:41,608 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.IntegerType@198b2577
2014-05-22 13:42:41,608 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.id -> trader0_.id
2014-05-22 13:42:41,608 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2014-05-22 13:42:41,608 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} traders trader0_ ) ( WHERE ( = ( trader0_.category_id {synthetic-alias} category ) ? ) ) ( ORDER ( trader0_.id {synthetic-alias} id ) ASC ) )
2014-05-22 13:42:41,608 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2014-05-22 13:42:41,610 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [traders trader0_]
2014-05-22 13:42:41,610 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2014-05-22 13:42:41,610 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (traders)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'trader0_.id as id1_12_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=traders,tableAlias=trader0_,origin=null,columns={,className=sepm.dsa.model.Trader}}}
    |  \-[SQL_TOKEN] SqlFragment: 'trader0_.category_id as categor11_12_, trader0_.charisma as charisma2_12_, trader0_.comment as comment3_12_, trader0_.convince as convince4_12_, trader0_.intelligence as intellig5_12_, trader0_.location_id as locatio12_12_, trader0_.mut as mut6_12_, trader0_.name as name7_12_, trader0_.size as size8_12_, trader0_.xPos as xPos9_12_, trader0_.yPos as yPos10_12_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[trader0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'traders trader0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=traders,tableAlias=trader0_,origin=null,columns={,className=sepm.dsa.model.Trader}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'trader0_.category_id' {propertyName=category,dereferenceType=0,propertyPath=category,path={synthetic-alias}.category,tableAlias=trader0_,className=sepm.dsa.model.Trader,classAlias=null}
    |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |     |  \-[IDENT] IdentNode: 'category' {originalText=category}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=category, expectedType=org.hibernate.type.ManyToOneType(sepm.dsa.model.TraderCategory)}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'trader0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=trader0_,className=sepm.dsa.model.Trader,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'ASC'

2014-05-22 13:42:41,610 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,610 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: 
        from sepm.dsa.model.Trader WHERE category = :category ORDER BY id ASC
    
2014-05-22 13:42:41,610 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select trader0_.id as id1_12_, trader0_.category_id as categor11_12_, trader0_.charisma as charisma2_12_, trader0_.comment as comment3_12_, trader0_.convince as convince4_12_, trader0_.intelligence as intellig5_12_, trader0_.location_id as locatio12_12_, trader0_.mut as mut6_12_, trader0_.name as name7_12_, trader0_.size as size8_12_, trader0_.xPos as xPos9_12_, trader0_.yPos as yPos10_12_ from traders trader0_ where trader0_.category_id=? order by trader0_.id ASC
2014-05-22 13:42:41,610 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,611 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Checking named query: Location.findAll
2014-05-22 13:42:41,611 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: 
        from sepm.dsa.model.Location ORDER BY name ASC
    
2014-05-22 13:42:41,612 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'sepm'
    |           |  |  \-[IDENT] Node: 'dsa'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Location'
    \-[ORDER] Node: 'ORDER'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'ASC'

2014-05-22 13:42:41,612 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,612 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2014-05-22 13:42:41,613 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : sepm.dsa.model.Location (<no alias>) -> location0_
2014-05-22 13:42:41,613 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2014-05-22 13:42:41,613 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : name -> org.hibernate.type.StringType@2de901f0
2014-05-22 13:42:41,613 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.name -> location0_.name
2014-05-22 13:42:41,613 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2014-05-22 13:42:41,613 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} locations location0_ ) ( ORDER ( location0_.name {synthetic-alias} name ) ASC ) )
2014-05-22 13:42:41,613 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2014-05-22 13:42:41,613 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [locations location0_]
2014-05-22 13:42:41,613 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2014-05-22 13:42:41,614 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (locations)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'location0_.id as id1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=locations,tableAlias=location0_,origin=null,columns={,className=sepm.dsa.model.Location}}}
    |  \-[SQL_TOKEN] SqlFragment: 'location0_.comment as comment2_4_, location0_.height as height3_4_, location0_.name as name4_4_, location0_.planFileName as planFile5_4_, location0_.region as region10_4_, location0_.sizeId as sizeId6_4_, location0_.weatherId as weatherI7_4_, location0_.xCoord as xCoord8_4_, location0_.yCoord as yCoord9_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[location0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'locations location0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=locations,tableAlias=location0_,origin=null,columns={,className=sepm.dsa.model.Location}}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'location0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=location0_,className=sepm.dsa.model.Location,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'ASC'

2014-05-22 13:42:41,614 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,614 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: 
        from sepm.dsa.model.Location ORDER BY name ASC
    
2014-05-22 13:42:41,614 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select location0_.id as id1_4_, location0_.comment as comment2_4_, location0_.height as height3_4_, location0_.name as name4_4_, location0_.planFileName as planFile5_4_, location0_.region as region10_4_, location0_.sizeId as sizeId6_4_, location0_.weatherId as weatherI7_4_, location0_.xCoord as xCoord8_4_, location0_.yCoord as yCoord9_4_ from locations location0_ order by location0_.name ASC
2014-05-22 13:42:41,614 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,614 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Checking named query: ProductUnit.findAll
2014-05-22 13:42:41,614 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: 
        from sepm.dsa.model.ProductUnit ORDER BY name ASC
    
2014-05-22 13:42:41,616 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'sepm'
    |           |  |  \-[IDENT] Node: 'dsa'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'ProductUnit'
    \-[ORDER] Node: 'ORDER'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'ASC'

2014-05-22 13:42:41,616 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,616 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2014-05-22 13:42:41,616 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : sepm.dsa.model.ProductUnit (<no alias>) -> productuni0_
2014-05-22 13:42:41,616 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2014-05-22 13:42:41,616 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : name -> org.hibernate.type.StringType@2de901f0
2014-05-22 13:42:41,617 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.name -> productuni0_.name
2014-05-22 13:42:41,617 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2014-05-22 13:42:41,617 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} ProductUnit productuni0_ ) ( ORDER ( productuni0_.name {synthetic-alias} name ) ASC ) )
2014-05-22 13:42:41,617 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2014-05-22 13:42:41,617 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [ProductUnit productuni0_]
2014-05-22 13:42:41,617 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2014-05-22 13:42:41,617 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ProductUnit)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'productuni0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ProductUnit,tableAlias=productuni0_,origin=null,columns={,className=sepm.dsa.model.ProductUnit}}}
    |  \-[SQL_TOKEN] SqlFragment: 'productuni0_.name as name2_0_, productuni0_.unitType as unitType3_0_, productuni0_.value as value4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[productuni0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ProductUnit productuni0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ProductUnit,tableAlias=productuni0_,origin=null,columns={,className=sepm.dsa.model.ProductUnit}}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'productuni0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=productuni0_,className=sepm.dsa.model.ProductUnit,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'ASC'

2014-05-22 13:42:41,617 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,617 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: 
        from sepm.dsa.model.ProductUnit ORDER BY name ASC
    
2014-05-22 13:42:41,617 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select productuni0_.id as id1_0_, productuni0_.name as name2_0_, productuni0_.unitType as unitType3_0_, productuni0_.value as value4_0_ from ProductUnit productuni0_ order by productuni0_.name ASC
2014-05-22 13:42:41,618 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,618 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Checking named query: AssortmentNature.findAll
2014-05-22 13:42:41,618 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: 
        from sepm.dsa.model.AssortmentNature ORDER BY id ASC
    
2014-05-22 13:42:41,619 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'sepm'
    |           |  |  \-[IDENT] Node: 'dsa'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'AssortmentNature'
    \-[ORDER] Node: 'ORDER'
       +-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'ASC'

2014-05-22 13:42:41,619 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,619 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2014-05-22 13:42:41,620 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : sepm.dsa.model.AssortmentNature (<no alias>) -> assortment0_
2014-05-22 13:42:41,620 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2014-05-22 13:42:41,620 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.IntegerType@198b2577
2014-05-22 13:42:41,620 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.id -> assortment0_.id
2014-05-22 13:42:41,620 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2014-05-22 13:42:41,620 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} assortmentNatures assortment0_ ) ( ORDER ( assortment0_.id {synthetic-alias} id ) ASC ) )
2014-05-22 13:42:41,620 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2014-05-22 13:42:41,620 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [assortmentNatures assortment0_]
2014-05-22 13:42:41,621 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2014-05-22 13:42:41,621 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (assortmentNatures)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'assortment0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=assortmentNatures,tableAlias=assortment0_,origin=null,columns={,className=sepm.dsa.model.AssortmentNature}}}
    |  \-[SQL_TOKEN] SqlFragment: 'assortment0_.defaultOccurence as defaultO2_1_, assortment0_.productCategory_id as productC3_1_, assortment0_.traderCategory_id as traderCa4_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[assortment0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'assortmentNatures assortment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=assortmentNatures,tableAlias=assortment0_,origin=null,columns={,className=sepm.dsa.model.AssortmentNature}}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'assortment0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=assortment0_,className=sepm.dsa.model.AssortmentNature,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'ASC'

2014-05-22 13:42:41,624 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,624 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: 
        from sepm.dsa.model.AssortmentNature ORDER BY id ASC
    
2014-05-22 13:42:41,624 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select assortment0_.id as id1_1_, assortment0_.defaultOccurence as defaultO2_1_, assortment0_.productCategory_id as productC3_1_, assortment0_.traderCategory_id as traderCa4_1_ from assortmentNatures assortment0_ order by assortment0_.id ASC
2014-05-22 13:42:41,624 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2014-05-22 13:42:41,624 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Checking 0 named SQL queries
2014-05-22 13:42:41,630 [JavaFX Application Thread] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2014-05-22 13:42:41,630 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:41,632 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'sessionFactory'
2014-05-22 13:42:41,632 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loader'
2014-05-22 13:42:41,632 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'loader'
2014-05-22 13:42:41,633 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'loader' to allow for resolving potential circular references
2014-05-22 13:42:41,636 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:41,636 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'loader'
2014-05-22 13:42:41,636 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'regionDao'
2014-05-22 13:42:41,636 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'regionDao'
2014-05-22 13:42:41,638 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'regionDao' to allow for resolving potential circular references
2014-05-22 13:42:41,640 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2014-05-22 13:42:41,640 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:41,649 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:41,654 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2014-05-22 13:42:41,667 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'regionDao' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:41,670 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.dao.RegionDaoHbmImpl@69f4b818]
2014-05-22 13:42:41,676 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'regionDao'
2014-05-22 13:42:41,676 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'regionBorderDao'
2014-05-22 13:42:41,676 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'regionBorderDao'
2014-05-22 13:42:41,676 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'regionBorderDao' to allow for resolving potential circular references
2014-05-22 13:42:41,679 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2014-05-22 13:42:41,679 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:41,679 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2014-05-22 13:42:41,679 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'regionBorderDao' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:41,679 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.dao.RegionBorderDaoHbmImpl@795b16d0]
2014-05-22 13:42:41,682 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'regionBorderDao'
2014-05-22 13:42:41,682 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'traderDao'
2014-05-22 13:42:41,682 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'traderDao'
2014-05-22 13:42:41,682 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'traderDao' to allow for resolving potential circular references
2014-05-22 13:42:41,684 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2014-05-22 13:42:41,685 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:41,685 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2014-05-22 13:42:41,685 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'traderDao' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:41,685 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.dao.TraderDaoHbmImpl@513186fc]
2014-05-22 13:42:41,689 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'traderDao'
2014-05-22 13:42:41,689 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'productDao'
2014-05-22 13:42:41,689 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'productDao'
2014-05-22 13:42:41,690 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'productDao' to allow for resolving potential circular references
2014-05-22 13:42:41,692 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2014-05-22 13:42:41,692 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:41,693 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2014-05-22 13:42:41,693 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'productDao' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:41,693 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.dao.ProductDaoHbmImpl@60e63d89]
2014-05-22 13:42:41,697 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'productDao'
2014-05-22 13:42:41,697 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'traderCategoryDao'
2014-05-22 13:42:41,697 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'traderCategoryDao'
2014-05-22 13:42:41,698 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'traderCategoryDao' to allow for resolving potential circular references
2014-05-22 13:42:41,700 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2014-05-22 13:42:41,700 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'traderDao'
2014-05-22 13:42:41,701 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:41,701 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2014-05-22 13:42:41,701 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'traderCategoryDao' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:41,701 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.dao.TraderCategoryDaoImpl@1dc34b35]
2014-05-22 13:42:41,706 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'traderCategoryDao'
2014-05-22 13:42:41,706 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'locationDao'
2014-05-22 13:42:41,706 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'locationDao'
2014-05-22 13:42:41,706 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'locationDao' to allow for resolving potential circular references
2014-05-22 13:42:41,715 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2014-05-22 13:42:41,716 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:41,718 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2014-05-22 13:42:41,718 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'locationDao' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:41,718 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.dao.LocationDaoImpl@5a6661fd]
2014-05-22 13:42:41,735 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'locationDao'
2014-05-22 13:42:41,735 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'productCategoryDao'
2014-05-22 13:42:41,735 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'productCategoryDao'
2014-05-22 13:42:41,735 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'productCategoryDao' to allow for resolving potential circular references
2014-05-22 13:42:41,737 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2014-05-22 13:42:41,738 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:41,738 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2014-05-22 13:42:41,738 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'productCategoryDao' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:41,738 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.dao.ProductCategoryDaoHbmImpl@3c749d0]
2014-05-22 13:42:41,741 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'productCategoryDao'
2014-05-22 13:42:41,741 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'productUnitDao'
2014-05-22 13:42:41,741 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'productUnitDao'
2014-05-22 13:42:41,741 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'productUnitDao' to allow for resolving potential circular references
2014-05-22 13:42:41,743 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2014-05-22 13:42:41,743 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:41,744 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2014-05-22 13:42:41,744 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'productUnitDao' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:41,744 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.dao.ProductUnitDaoHbmImpl@309a134c]
2014-05-22 13:42:41,747 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'productUnitDao'
2014-05-22 13:42:41,747 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'regionService'
2014-05-22 13:42:41,747 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'regionService'
2014-05-22 13:42:41,763 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.1.0.Final
2014-05-22 13:42:41,771 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2014-05-22 13:42:41,772 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2014-05-22 13:42:41,781 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2014-05-22 13:42:41,795 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:42:41,863 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:42:41,907 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'regionService' to allow for resolving potential circular references
2014-05-22 13:42:41,909 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'regionDao'
2014-05-22 13:42:41,909 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'regionBorderDao'
2014-05-22 13:42:41,909 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2014-05-22 13:42:41,909 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2014-05-22 13:42:41,911 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2014-05-22 13:42:41,916 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2014-05-22 13:42:41,916 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2014-05-22 13:42:41,916 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2014-05-22 13:42:41,918 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:41,919 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2014-05-22 13:42:41,919 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'regionService' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:41,919 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.service.RegionServiceImpl@400b95ae]
2014-05-22 13:42:41,922 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'regionService'
2014-05-22 13:42:41,922 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'regionBorderService'
2014-05-22 13:42:41,922 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'regionBorderService'
2014-05-22 13:42:41,922 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2014-05-22 13:42:41,922 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2014-05-22 13:42:41,923 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2014-05-22 13:42:41,924 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:42:41,935 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:42:41,936 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'regionBorderService' to allow for resolving potential circular references
2014-05-22 13:42:41,938 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'regionBorderDao'
2014-05-22 13:42:41,939 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:41,939 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2014-05-22 13:42:41,939 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'regionBorderService' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:41,939 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.service.RegionBorderServiceImpl@28d4f196]
2014-05-22 13:42:41,941 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'regionBorderService'
2014-05-22 13:42:41,941 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'locationService'
2014-05-22 13:42:41,941 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'locationService'
2014-05-22 13:42:41,942 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2014-05-22 13:42:41,942 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2014-05-22 13:42:41,942 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2014-05-22 13:42:41,943 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:42:41,951 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:42:41,953 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'locationService' to allow for resolving potential circular references
2014-05-22 13:42:41,958 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'locationDao'
2014-05-22 13:42:41,958 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:41,959 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2014-05-22 13:42:41,959 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'locationService' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:41,959 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.service.LocationServiceImpl@6ebc2788]
2014-05-22 13:42:41,963 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'locationService'
2014-05-22 13:42:41,963 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'productService'
2014-05-22 13:42:41,963 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'productService'
2014-05-22 13:42:41,963 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2014-05-22 13:42:41,963 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2014-05-22 13:42:41,965 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2014-05-22 13:42:41,966 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:42:41,982 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:42:41,984 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'productService' to allow for resolving potential circular references
2014-05-22 13:42:41,986 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'productDao'
2014-05-22 13:42:41,986 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:41,986 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2014-05-22 13:42:41,987 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'productService' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:41,987 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.service.ProductServiceImpl@78331c8]
2014-05-22 13:42:41,990 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'productService'
2014-05-22 13:42:41,994 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'productCategoryService'
2014-05-22 13:42:41,994 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'productCategoryService'
2014-05-22 13:42:41,994 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2014-05-22 13:42:41,994 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2014-05-22 13:42:41,994 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2014-05-22 13:42:41,995 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:42:42,014 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:42:42,016 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'productCategoryService' to allow for resolving potential circular references
2014-05-22 13:42:42,019 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'productCategoryDao'
2014-05-22 13:42:42,019 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,020 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2014-05-22 13:42:42,020 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'productCategoryService' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:42,020 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.service.ProductCategoryServiceImpl@6f2b7dd5]
2014-05-22 13:42:42,023 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'productCategoryService'
2014-05-22 13:42:42,023 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'productUnitService'
2014-05-22 13:42:42,023 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'productUnitService'
2014-05-22 13:42:42,024 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2014-05-22 13:42:42,024 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2014-05-22 13:42:42,024 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2014-05-22 13:42:42,025 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:42:42,041 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:42:42,042 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'productUnitService' to allow for resolving potential circular references
2014-05-22 13:42:42,044 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'productUnitDao'
2014-05-22 13:42:42,045 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,045 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2014-05-22 13:42:42,045 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'productUnitService' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:42,045 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.service.ProductUnitServiceImpl@8b73a20]
2014-05-22 13:42:42,048 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'productUnitService'
2014-05-22 13:42:42,048 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'traderCategoryService'
2014-05-22 13:42:42,048 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'traderCategoryService'
2014-05-22 13:42:42,048 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2014-05-22 13:42:42,048 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2014-05-22 13:42:42,048 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2014-05-22 13:42:42,049 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:42:42,060 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:42:42,061 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'traderCategoryService' to allow for resolving potential circular references
2014-05-22 13:42:42,063 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'traderCategoryDao'
2014-05-22 13:42:42,063 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,064 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2014-05-22 13:42:42,064 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'traderCategoryService' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:42,064 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.service.TraderCategoryServiceImpl@2444fa86]
2014-05-22 13:42:42,067 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'traderCategoryService'
2014-05-22 13:42:42,067 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'traderService'
2014-05-22 13:42:42,067 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'traderService'
2014-05-22 13:42:42,068 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2014-05-22 13:42:42,068 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2014-05-22 13:42:42,068 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2014-05-22 13:42:42,069 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:42:42,082 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:42:42,083 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'traderService' to allow for resolving potential circular references
2014-05-22 13:42:42,087 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'traderDao'
2014-05-22 13:42:42,087 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'productService'
2014-05-22 13:42:42,087 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'pathService'
2014-05-22 13:42:42,087 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'pathService'
2014-05-22 13:42:42,089 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'pathService' to allow for resolving potential circular references
2014-05-22 13:42:42,092 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,092 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'pathService'
2014-05-22 13:42:42,093 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'regionService'
2014-05-22 13:42:42,093 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'regionBorderService'
2014-05-22 13:42:42,093 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,094 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2014-05-22 13:42:42,094 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'traderService' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:42,094 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.service.TraderServiceImpl@4c3ea1ca]
2014-05-22 13:42:42,097 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'traderService'
2014-05-22 13:42:42,097 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'pathService'
2014-05-22 13:42:42,097 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'assortmentNatureService'
2014-05-22 13:42:42,097 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'assortmentNatureService'
2014-05-22 13:42:42,098 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2014-05-22 13:42:42,098 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2014-05-22 13:42:42,098 [JavaFX Application Thread] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2014-05-22 13:42:42,099 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:42:42,111 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:42:42,113 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'assortmentNatureService' to allow for resolving potential circular references
2014-05-22 13:42:42,116 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,118 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'validate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:42:42,118 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'assortmentNatureService' with 0 common interceptors and 1 specific interceptors
2014-05-22 13:42:42,118 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [sepm.dsa.service.AssortmentNatureServiceImpl@2e651f20]
2014-05-22 13:42:42,122 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'assortmentNatureService'
2014-05-22 13:42:42,122 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'MainMenuController'
2014-05-22 13:42:42,122 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'MainMenuController'
2014-05-22 13:42:42,123 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'MainMenuController' to allow for resolving potential circular references
2014-05-22 13:42:42,127 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'loader'
2014-05-22 13:42:42,135 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,135 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'MainMenuController'
2014-05-22 13:42:42,135 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'RegionListController'
2014-05-22 13:42:42,135 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'RegionListController'
2014-05-22 13:42:42,136 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'RegionListController' to allow for resolving potential circular references
2014-05-22 13:42:42,139 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'loader'
2014-05-22 13:42:42,143 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'regionService'
2014-05-22 13:42:42,143 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'regionBorderService'
2014-05-22 13:42:42,144 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,146 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'RegionListController'
2014-05-22 13:42:42,146 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'EditRegionController'
2014-05-22 13:42:42,146 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'EditRegionController'
2014-05-22 13:42:42,147 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'EditRegionController' to allow for resolving potential circular references
2014-05-22 13:42:42,152 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'loader'
2014-05-22 13:42:42,154 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'regionService'
2014-05-22 13:42:42,155 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'regionBorderService'
2014-05-22 13:42:42,155 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,155 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'EditRegionController'
2014-05-22 13:42:42,156 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'LocationListController'
2014-05-22 13:42:42,156 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'LocationListController'
2014-05-22 13:42:42,156 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'LocationListController' to allow for resolving potential circular references
2014-05-22 13:42:42,159 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'loader'
2014-05-22 13:42:42,159 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'locationService'
2014-05-22 13:42:42,159 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,160 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'LocationListController'
2014-05-22 13:42:42,160 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'EditLocationController'
2014-05-22 13:42:42,160 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'EditLocationController'
2014-05-22 13:42:42,161 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'EditLocationController' to allow for resolving potential circular references
2014-05-22 13:42:42,165 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'loader'
2014-05-22 13:42:42,165 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'locationService'
2014-05-22 13:42:42,165 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'regionService'
2014-05-22 13:42:42,166 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,168 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'EditLocationController'
2014-05-22 13:42:42,168 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'productListController'
2014-05-22 13:42:42,168 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'productListController'
2014-05-22 13:42:42,168 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'productListController' to allow for resolving potential circular references
2014-05-22 13:42:42,172 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'productService'
2014-05-22 13:42:42,173 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,173 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'productListController'
2014-05-22 13:42:42,173 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'editProductController'
2014-05-22 13:42:42,173 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'editProductController'
2014-05-22 13:42:42,173 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'editProductController' to allow for resolving potential circular references
2014-05-22 13:42:42,176 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'productService'
2014-05-22 13:42:42,177 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'productCategoryService'
2014-05-22 13:42:42,177 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'productUnitService'
2014-05-22 13:42:42,177 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'regionService'
2014-05-22 13:42:42,178 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,178 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'editProductController'
2014-05-22 13:42:42,178 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'TraderCategoryList'
2014-05-22 13:42:42,178 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'TraderCategoryList'
2014-05-22 13:42:42,178 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'TraderCategoryList' to allow for resolving potential circular references
2014-05-22 13:42:42,181 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'loader'
2014-05-22 13:42:42,182 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'traderCategoryService'
2014-05-22 13:42:42,182 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,182 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'TraderCategoryList'
2014-05-22 13:42:42,182 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'editTraderCategory'
2014-05-22 13:42:42,182 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'editTraderCategory'
2014-05-22 13:42:42,187 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'editTraderCategory' to allow for resolving potential circular references
2014-05-22 13:42:42,190 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'loader'
2014-05-22 13:42:42,190 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'traderCategoryService'
2014-05-22 13:42:42,190 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'productCategoryService'
2014-05-22 13:42:42,191 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'assortmentNatureService'
2014-05-22 13:42:42,191 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,191 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'editTraderCategory'
2014-05-22 13:42:42,191 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2014-05-22 13:42:42,191 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2014-05-22 13:42:42,191 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2014-05-22 13:42:42,191 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,191 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
2014-05-22 13:42:42,191 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'transactionManager'
2014-05-22 13:42:42,199 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2014-05-22 13:42:42,205 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2014-05-22 13:42:42,205 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager'
2014-05-22 13:42:42,214 [JavaFX Application Thread] INFO  org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@5dba3b73] of Hibernate SessionFactory for HibernateTransactionManager
2014-05-22 13:42:42,215 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2014-05-22 13:42:42,215 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'transactionManager'
2014-05-22 13:42:42,216 [JavaFX Application Thread] DEBUG org.springframework.context.support.ClassPathXmlApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@14c9d67]
2014-05-22 13:42:42,217 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
2014-05-22 13:42:42,223 [JavaFX Application Thread] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2014-05-22 13:42:42,223 [JavaFX Application Thread] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2014-05-22 13:42:42,223 [JavaFX Application Thread] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2014-05-22 13:42:42,223 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'loader'
2014-05-22 13:42:42,248 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'MainMenuController'
2014-05-22 13:42:57,591 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'RegionListController'
2014-05-22 13:42:57,742 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'getAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:42:57,747 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:42:57,760 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionServiceImpl.getAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:42:57,872 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:42:57,875 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:42:57,875 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:42:57,876 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:42:57,876 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:42:57,880 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@76212a6] read-only
2014-05-22 13:42:57,888 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:42:57,888 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:42:57,889 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:42:57,892 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@76212a6]
2014-05-22 13:42:57,896 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'getAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:42:57,897 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:42:57,897 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:42:57,897 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:42:58,017 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_, region0_.color as color2_10_, region0_.comment as comment3_10_, region0_.name as name4_10_, region0_.rainfallChanceId as rainfall5_10_, region0_.temperatureId as temperat6_10_ from regions region0_ order by region0_.name ASC
2014-05-22 13:42:58,038 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,049 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:42:58,068 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:42:58,068 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:42:58,069 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2014-05-22 13:42:58,069 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:42:58,069 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2014-05-22 13:42:58,071 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:42:58,074 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,113 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,113 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,114 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,124 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,125 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:42:58,136 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,144 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,145 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,145 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,146 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:42:58,146 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,146 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:42:58,148 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,148 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,148 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,149 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,149 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:42:58,149 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,149 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:42:58,151 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,151 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,158 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,159 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,160 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:42:58,161 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:42:58,161 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,162 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,162 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,162 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:42:58,163 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:42:58,163 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,163 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,163 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,164 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:42:58,164 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:42:58,164 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:42:58,166 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:42:58,166 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,166 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:42:58,166 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,167 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:42:58,167 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:42:58,167 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:42:58,168 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:42:58,169 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,169 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:42:58,170 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:42:58,171 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,171 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:42:58,171 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,171 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:42:58,172 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:42:58,172 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:42:58,173 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:42:58,174 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,174 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:42:58,174 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,174 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:42:58,174 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,175 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:42:58,176 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,177 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,177 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,177 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,177 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:42:58,177 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,177 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:42:58,181 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,181 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,182 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,182 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,183 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:42:58,183 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,184 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,185 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,185 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,185 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,186 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:42:58,186 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,186 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:42:58,188 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,188 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,188 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,188 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,189 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:42:58,189 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:42:58,189 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:42:58,193 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:42:58,193 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,193 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:42:58,193 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,194 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:42:58,194 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:42:58,194 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:42:58,195 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:42:58,196 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,196 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:42:58,196 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,196 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:42:58,196 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:42:58,197 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:42:58,198 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:42:58,198 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,199 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,199 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:42:58,200 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,200 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:42:58,200 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,200 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:42:58,204 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:42:58,208 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:42:58,208 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:42:58,209 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:42:58,209 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:42:58,212 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@76212a6]
2014-05-22 13:42:58,213 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:42:58,213 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:42:58,218 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:42:58,531 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'getAllByRegion' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:42:58,531 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:42:58,531 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:42:58,532 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:42:58,532 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:42:58,532 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:42:58,532 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:42:58,532 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:42:58,533 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@da5dfea] read-only
2014-05-22 13:42:58,533 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:42:58,533 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:42:58,533 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:42:58,533 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@da5dfea]
2014-05-22 13:42:58,534 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'getAllByRegion' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:42:58,534 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:42:58,534 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:42:58,534 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:42:58,537 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:42:58,540 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,541 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,541 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,545 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,546 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,547 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,549 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,551 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:42:58,551 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,551 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,553 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,554 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:42:58,554 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,555 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,556 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,557 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:42:58,557 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,558 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,558 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,558 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:42:58,559 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,561 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,562 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,563 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:42:58,563 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:42:58,564 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:42:58,564 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:42:58,565 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,565 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,565 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:42:58,566 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:42:58,566 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,566 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:42:58,566 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,568 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,568 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:42:58,568 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,569 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,569 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:42:58,569 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,569 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,569 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,570 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:42:58,571 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,571 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,572 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,572 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,572 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,572 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,573 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,573 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,573 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,573 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,573 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,574 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,574 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,574 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,574 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,574 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,574 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,574 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,575 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:42:58,575 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,575 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,576 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,576 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,577 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,577 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,578 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,578 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,578 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,578 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,578 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,578 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,578 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,578 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,579 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,579 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:42:58,579 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:42:58,580 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:42:58,580 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:42:58,580 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,581 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,582 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,582 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:42:58,582 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,582 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,583 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:42:58,583 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,583 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,583 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:42:58,583 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,583 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,583 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,584 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,585 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:42:58,585 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:42:58,585 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:42:58,585 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:42:58,585 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:42:58,586 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@da5dfea]
2014-05-22 13:42:58,586 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:42:58,586 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:42:58,590 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:42:58,651 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:42:58,651 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:42:58,651 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:42:58,651 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:42:58,651 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:42:58,652 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:42:58,652 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:42:58,652 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@cee561f] read-only
2014-05-22 13:42:58,653 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:42:58,653 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:42:58,653 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:42:58,653 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@cee561f]
2014-05-22 13:42:58,653 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:42:58,653 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:42:58,653 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:42:58,654 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:42:58,656 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,656 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,657 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,661 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,662 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,662 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,663 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,664 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:42:58,664 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,665 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,665 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,665 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:42:58,666 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,666 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,667 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,668 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:42:58,668 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,669 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,669 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,670 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:42:58,670 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,670 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,671 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,672 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:42:58,673 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:42:58,673 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:42:58,674 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:42:58,674 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,674 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,679 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:42:58,679 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:42:58,679 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,680 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:42:58,680 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,680 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,680 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:42:58,680 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,680 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,680 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:42:58,680 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,681 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,681 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,681 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:42:58,681 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,682 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,682 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,682 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,683 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,683 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,683 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,685 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,685 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,685 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,685 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,685 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,685 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,686 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,686 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,686 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,686 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,686 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,686 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:42:58,687 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,687 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,687 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,688 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,688 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,688 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,688 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,688 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,688 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,689 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,689 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,689 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,689 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,689 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,689 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,689 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,690 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,690 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,691 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:42:58,691 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:42:58,691 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:42:58,692 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:42:58,692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,694 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,694 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:42:58,695 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,695 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,695 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:42:58,695 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,695 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,695 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:42:58,695 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,695 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,696 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,696 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,697 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:42:58,697 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:42:58,697 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:42:58,697 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:42:58,698 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:42:58,698 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@cee561f]
2014-05-22 13:42:58,698 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:42:58,698 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:42:58,702 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:42:58,725 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:42:58,725 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:42:58,725 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:42:58,726 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:42:58,726 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:42:58,726 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:42:58,726 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:42:58,726 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@7d140fe0] read-only
2014-05-22 13:42:58,727 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:42:58,727 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:42:58,727 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:42:58,727 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@7d140fe0]
2014-05-22 13:42:58,727 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:42:58,727 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:42:58,727 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:42:58,728 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:42:58,730 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,730 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,735 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,740 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,741 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,741 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,742 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,746 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:42:58,746 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,746 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,747 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,747 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:42:58,748 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,748 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,749 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,751 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:42:58,751 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,752 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,752 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,752 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:42:58,753 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,753 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,756 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,757 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:42:58,757 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:42:58,757 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:42:58,758 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:42:58,758 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,759 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,759 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:42:58,759 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:42:58,759 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:42:58,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:42:58,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:42:58,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,761 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,761 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,761 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:42:58,761 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,781 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,781 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,781 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,781 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,782 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,782 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,782 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,782 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,782 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,782 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,782 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,783 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,783 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,783 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,783 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,783 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,783 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,784 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:42:58,784 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,784 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,784 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,784 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,785 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,785 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,786 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,786 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,786 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,786 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,786 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,786 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,786 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,786 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,787 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,787 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,787 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,787 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,787 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:42:58,787 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:42:58,788 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:42:58,788 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:42:58,788 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,789 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,789 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,789 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:42:58,793 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,793 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,793 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:42:58,794 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,794 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,794 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:42:58,794 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,794 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,794 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,795 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,795 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:42:58,795 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,796 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:42:58,796 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:42:58,796 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:42:58,796 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:42:58,801 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:42:58,801 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@7d140fe0]
2014-05-22 13:42:58,802 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:42:58,802 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:42:58,806 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:42:58,822 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:42:58,822 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:42:58,823 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:42:58,823 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:42:58,823 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:42:58,823 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:42:58,824 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:42:58,824 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@7123752f] read-only
2014-05-22 13:42:58,824 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:42:58,824 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:42:58,824 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:42:58,824 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@7123752f]
2014-05-22 13:42:58,824 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:42:58,825 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:42:58,825 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:42:58,825 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:42:58,827 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,828 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,832 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,836 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,837 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,837 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,838 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,842 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,842 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,843 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,844 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:42:58,844 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:42:58,844 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:42:58,845 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:42:58,845 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,845 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,845 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,845 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,846 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,846 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:42:58,853 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,854 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,854 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:42:58,854 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,854 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,854 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:42:58,854 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,854 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,855 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,855 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:42:58,855 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,856 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,856 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,856 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:42:58,857 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:42:58,857 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,857 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,858 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,858 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,858 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,858 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,859 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,862 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,862 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,863 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,863 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,863 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,863 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,863 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,863 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,863 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,863 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,864 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,864 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:42:58,864 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,865 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,866 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,866 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:42:58,867 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,867 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,870 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,871 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:42:58,872 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:42:58,872 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:42:58,873 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:42:58,873 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,873 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,873 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:42:58,874 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:42:58,874 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,874 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:42:58,874 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,874 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,874 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:42:58,874 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,874 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,875 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:42:58,875 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,875 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,875 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,876 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:42:58,876 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,877 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,877 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,877 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,877 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,878 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,878 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,878 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,878 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,878 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,878 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,878 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,878 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,879 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,879 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,879 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,879 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:42:58,880 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:42:58,880 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:42:58,882 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:42:58,882 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:42:58,882 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:42:58,882 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@7123752f]
2014-05-22 13:42:58,883 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:42:58,883 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:42:58,887 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:42:58,901 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:42:58,901 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:42:58,901 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:42:58,902 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:42:58,902 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:42:58,902 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:42:58,902 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:42:58,902 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@759cf497] read-only
2014-05-22 13:42:58,903 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:42:58,903 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:42:58,903 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:42:58,903 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@759cf497]
2014-05-22 13:42:58,903 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:42:58,903 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:42:58,903 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:42:58,904 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:42:58,905 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,906 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,906 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,910 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,911 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,911 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,912 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,912 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,913 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,939 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,940 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:42:58,942 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:42:58,942 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:42:58,942 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:42:58,943 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,943 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:42:58,943 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,943 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,944 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,944 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:42:58,944 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,944 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,944 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:42:58,944 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,944 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,944 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:42:58,944 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,945 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,945 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,945 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:42:58,945 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,953 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,953 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,953 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:42:58,954 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:42:58,954 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,954 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,955 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,955 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,955 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:42:58,955 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,956 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,956 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,956 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:42:58,956 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,956 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,956 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:42:58,956 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,956 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,957 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:42:58,957 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,957 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,957 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,957 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:42:58,957 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,958 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,958 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,958 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:42:58,959 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,959 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:42:58,960 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:42:58,961 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:42:58,961 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:42:58,961 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:42:58,961 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:42:58,962 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,962 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:42:58,962 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:42:58,962 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:42:58,967 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,967 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:42:58,967 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,967 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,967 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:42:58,968 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,968 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,968 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:42:58,968 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,968 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,968 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,969 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:42:58,969 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,969 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,970 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,970 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,970 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:42:58,970 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,970 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:42:58,971 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:42:58,971 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,971 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:42:58,971 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:42:58,976 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,977 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:42:58,977 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:42:58,977 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:42:58,977 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:42:58,978 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:42:58,978 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:42:58,978 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:42:58,979 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:42:58,979 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:42:58,979 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:42:58,979 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:42:58,979 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:42:58,980 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@759cf497]
2014-05-22 13:42:58,980 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:42:58,988 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:42:58,992 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:01,426 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'EditRegionController'
2014-05-22 13:43:02,211 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:02,211 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:02,212 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:02,212 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:02,212 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:02,212 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:02,213 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:02,213 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@146dbf65] read-only
2014-05-22 13:43:02,214 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:02,214 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:02,215 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:02,215 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@146dbf65]
2014-05-22 13:43:02,215 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:02,215 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:02,215 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:43:02,216 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:43:02,218 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:02,218 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:43:02,218 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:02,222 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:02,222 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:43:02,223 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:02,223 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:02,224 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:02,224 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:02,225 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:02,225 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:02,225 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:02,225 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:43:02,225 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:02,227 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:02,227 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:02,228 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:02,228 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:02,228 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:02,228 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:02,229 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:43:02,229 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:02,230 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:02,230 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:43:02,231 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:02,231 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:02,231 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:02,231 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:43:02,232 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:43:02,238 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:02,239 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:02,239 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,239 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:02,240 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,240 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,240 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:02,240 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,240 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,240 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:02,240 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,240 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:02,240 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:02,241 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:02,241 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:02,242 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:02,242 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:02,242 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:43:02,242 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:43:02,242 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,242 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,245 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,245 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:02,245 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,245 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,245 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:02,245 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,245 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,245 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:02,245 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,246 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:02,246 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:02,246 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:02,246 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:02,247 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:02,247 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:02,247 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:43:02,247 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:43:02,247 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,248 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,248 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,248 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:02,248 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,248 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,249 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:02,249 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,249 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,249 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:02,249 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,249 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:02,250 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:02,250 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:43:02,250 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:02,251 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:02,251 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:02,251 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:43:02,251 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:43:02,251 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,252 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:02,252 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,252 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,252 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:02,252 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,252 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,252 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:02,253 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,253 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:02,253 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:02,253 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,254 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:02,254 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:02,254 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:02,254 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:02,254 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:02,255 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@146dbf65]
2014-05-22 13:43:02,255 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:02,257 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:02,262 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:02,281 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:02,281 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionServiceImpl.getAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:02,281 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:02,281 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:02,282 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:02,282 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:02,282 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:02,282 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@1d5c2aa8] read-only
2014-05-22 13:43:02,282 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:02,283 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:02,283 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:02,283 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@1d5c2aa8]
2014-05-22 13:43:02,283 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:02,283 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:02,283 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:43:02,284 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_, region0_.color as color2_10_, region0_.comment as comment3_10_, region0_.name as name4_10_, region0_.rainfallChanceId as rainfall5_10_, region0_.temperatureId as temperat6_10_ from regions region0_ order by region0_.name ASC
2014-05-22 13:43:02,285 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:02,285 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:43:02,286 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:02,286 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:02,287 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2014-05-22 13:43:02,287 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:43:02,287 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2014-05-22 13:43:02,287 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:02,287 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:43:02,288 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:43:02,288 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:43:02,288 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:43:02,288 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:43:02,288 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:43:02,288 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:43:02,289 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:43:02,289 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:02,289 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:43:02,291 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:02,291 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,291 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:02,292 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,292 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:02,292 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:02,292 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:43:02,293 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:02,293 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,295 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:02,295 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,295 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:02,296 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:02,296 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:43:02,297 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:02,297 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:02,298 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,298 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:02,298 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:02,299 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:02,299 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:02,299 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,300 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,300 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:02,300 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:02,300 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,300 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:02,300 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,300 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:02,301 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:02,301 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:43:02,304 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:02,304 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,305 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:02,305 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,305 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:02,305 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:02,305 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:43:02,306 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:02,307 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:02,307 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:02,307 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:02,307 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,308 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:02,308 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,308 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:02,308 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:02,308 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:43:02,309 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:02,310 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,310 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:02,310 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,310 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:02,310 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:02,310 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:43:02,312 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:02,312 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,312 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:02,312 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,312 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:02,312 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:02,313 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:43:02,314 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:02,314 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:02,314 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,315 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:02,315 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:02,315 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,315 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:02,316 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,316 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,316 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,316 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:02,316 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,316 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:02,326 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:02,327 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:43:02,328 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:02,329 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,329 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:02,329 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,330 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:02,330 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:02,330 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:43:02,331 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:02,332 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,332 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:02,332 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,332 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:02,332 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:02,332 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:43:02,333 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:02,334 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,334 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:02,334 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,334 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:02,334 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:02,334 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:43:02,335 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:02,335 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:02,336 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,336 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:02,336 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,337 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:02,337 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,337 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:02,337 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:02,337 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:02,337 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:02,338 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:02,338 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:02,338 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@1d5c2aa8]
2014-05-22 13:43:02,338 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:02,341 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:02,345 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:02,345 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:02,346 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:02,346 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:02,346 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:02,346 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:02,346 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:02,347 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:02,347 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@360a7981] read-only
2014-05-22 13:43:02,347 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:02,347 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:02,348 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:02,348 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@360a7981]
2014-05-22 13:43:02,348 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:02,348 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:02,348 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:43:02,349 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:43:02,350 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:02,350 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:43:02,351 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:02,354 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:02,355 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:43:02,355 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:02,355 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:02,356 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:02,356 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:02,357 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:02,357 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:02,357 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:02,357 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:43:02,358 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:02,358 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:02,359 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:02,360 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:02,360 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:02,360 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:02,360 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:02,361 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:43:02,361 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:02,363 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:02,364 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:43:02,364 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:02,365 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:02,365 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:02,365 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:43:02,365 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:43:02,366 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:02,366 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:02,366 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,366 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:02,366 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,366 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,366 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:02,366 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,367 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,367 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:02,367 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,367 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:02,367 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:02,367 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:02,367 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:02,368 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:02,368 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:02,368 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:43:02,369 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:43:02,369 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,369 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,369 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,369 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:02,369 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,369 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,369 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:02,370 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,370 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,370 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:02,370 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,370 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:02,370 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:02,370 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:02,370 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:02,371 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:02,371 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:02,371 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:43:02,376 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:43:02,376 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,376 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,377 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,377 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:02,377 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,377 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,377 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:02,377 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,377 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,377 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:02,378 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,378 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:02,378 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:02,378 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:43:02,378 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:02,379 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:02,379 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:02,379 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:43:02,379 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:43:02,380 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,380 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:02,386 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:02,386 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,386 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:02,386 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:02,386 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,387 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:02,387 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:02,387 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:02,387 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:02,387 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:02,388 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:02,389 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:02,389 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:02,389 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:02,389 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:02,389 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@360a7981]
2014-05-22 13:43:02,394 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:02,394 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:02,395 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:07,318 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'RegionListController'
2014-05-22 13:43:07,352 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:07,352 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionServiceImpl.getAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:07,353 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:07,353 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:07,353 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:07,353 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:07,353 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:07,354 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@494aa94b] read-only
2014-05-22 13:43:07,354 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:07,354 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:07,354 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:07,354 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@494aa94b]
2014-05-22 13:43:07,354 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:07,354 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:07,354 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:43:07,354 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_, region0_.color as color2_10_, region0_.comment as comment3_10_, region0_.name as name4_10_, region0_.rainfallChanceId as rainfall5_10_, region0_.temperatureId as temperat6_10_ from regions region0_ order by region0_.name ASC
2014-05-22 13:43:07,356 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,356 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:43:07,356 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:07,356 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:07,356 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2014-05-22 13:43:07,357 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:43:07,357 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2014-05-22 13:43:07,357 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:07,357 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,359 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,359 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:43:07,361 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,361 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,361 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,361 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,361 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:07,362 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,362 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:43:07,363 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,363 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,363 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,363 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,363 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:07,364 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,364 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:43:07,365 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,365 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,366 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,366 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,366 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:07,367 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:07,367 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,368 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,368 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,368 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:07,368 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:07,368 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,368 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,368 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,369 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:07,369 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:07,369 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:43:07,370 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:07,371 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,371 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:07,371 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,371 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:07,371 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:07,371 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:43:07,372 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:07,372 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,373 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:07,373 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:07,373 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,373 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:07,373 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,373 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:07,373 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:07,374 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:43:07,374 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:07,374 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,375 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:07,375 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,375 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:07,375 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,375 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:43:07,376 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,376 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,376 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,376 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,376 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:07,377 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,377 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:43:07,378 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,378 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,378 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,379 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,379 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:07,379 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,379 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,380 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,380 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,380 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,380 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,380 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,381 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:07,381 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,381 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:43:07,383 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,383 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,384 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,384 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,384 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:07,384 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:07,384 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:43:07,385 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:07,386 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,386 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:07,386 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,386 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:07,386 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:07,386 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:43:07,387 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:07,387 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,387 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:07,387 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,387 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:07,387 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:07,387 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:43:07,389 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:07,389 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,389 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,390 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:07,390 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,390 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:07,390 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,390 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:07,390 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:07,391 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:07,391 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:07,391 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:07,391 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:07,391 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@494aa94b]
2014-05-22 13:43:07,391 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:07,392 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:07,396 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:07,446 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:07,446 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:07,446 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:07,446 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:07,446 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:07,446 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:07,447 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:07,447 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@5dfec386] read-only
2014-05-22 13:43:07,447 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:07,447 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:07,447 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:07,448 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@5dfec386]
2014-05-22 13:43:07,448 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:07,448 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:07,448 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:43:07,449 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:43:07,450 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,451 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,451 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,454 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,454 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,455 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,455 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,456 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:07,456 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,456 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,457 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,457 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:07,457 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,457 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,458 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,459 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:07,459 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,459 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,459 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,459 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:07,460 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,460 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,460 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,461 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:43:07,461 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:07,462 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:07,462 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:07,462 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,462 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,464 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:07,464 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:07,465 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,465 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:07,465 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,465 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,465 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:07,465 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,465 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,465 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:07,465 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,466 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,466 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,466 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:07,466 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,467 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,467 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,467 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,467 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,467 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,467 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,469 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,469 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,469 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,470 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,470 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,470 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,470 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,470 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,470 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,470 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,470 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,471 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:07,471 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,471 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,471 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,471 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,472 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,472 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,472 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,472 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,472 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,472 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,473 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,473 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,473 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,473 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,473 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,473 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,473 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,473 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,474 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:43:07,474 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:07,474 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:07,474 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:07,475 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,475 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,477 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,478 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:07,478 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,478 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,478 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:07,478 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,478 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,478 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:07,478 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,479 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,479 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,479 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,480 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:07,480 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:07,480 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:07,481 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:07,482 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:07,483 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@5dfec386]
2014-05-22 13:43:07,483 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:07,483 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:07,487 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:07,500 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:07,501 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:07,501 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:07,501 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:07,501 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:07,501 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:07,502 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:07,502 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@5fcdac91] read-only
2014-05-22 13:43:07,502 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:07,502 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:07,502 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:07,502 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@5fcdac91]
2014-05-22 13:43:07,503 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:07,503 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:07,503 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:43:07,503 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:43:07,505 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,505 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,506 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,509 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,509 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,509 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,510 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,511 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:07,511 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,511 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,512 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,512 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:07,512 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,512 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,514 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,515 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:07,515 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,516 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,516 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,516 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:07,516 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,516 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,517 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,518 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:43:07,518 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:07,518 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:07,519 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:07,519 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,519 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,535 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:07,535 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:07,535 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,535 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:07,535 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,535 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,535 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:07,536 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,536 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,536 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:07,536 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,536 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,536 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,536 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:07,536 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,537 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,537 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,537 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,538 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,538 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,538 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,559 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,560 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,560 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,560 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,560 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,560 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,560 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,560 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,560 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,560 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,561 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,561 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:07,561 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,561 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,562 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,562 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,562 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,562 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,562 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,562 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,563 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,563 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,563 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,563 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,563 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,563 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,564 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,564 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,564 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,564 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,564 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:43:07,564 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:07,565 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:07,565 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:07,565 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,565 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,565 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,565 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:07,566 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,566 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,566 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:07,566 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,566 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,566 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:07,566 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,572 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,573 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,573 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,573 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:07,574 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:07,574 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:07,574 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:07,574 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:07,574 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@5fcdac91]
2014-05-22 13:43:07,575 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:07,576 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:07,580 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:07,593 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:07,593 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:07,594 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:07,594 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:07,594 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:07,594 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:07,594 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:07,595 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@1c631258] read-only
2014-05-22 13:43:07,595 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:07,595 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:07,595 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:07,595 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@1c631258]
2014-05-22 13:43:07,595 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:07,595 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:07,595 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:43:07,596 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:43:07,598 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,611 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,611 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,614 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,615 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,615 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,624 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,625 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:07,625 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,626 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,626 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,626 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:07,626 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,627 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,627 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,628 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:07,628 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,628 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,628 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,629 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:07,629 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,631 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,632 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,632 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:43:07,632 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:07,633 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:07,633 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:07,633 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,633 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,634 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:07,634 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:07,634 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,634 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:07,634 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,635 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,635 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:07,635 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,635 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,635 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:07,635 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,636 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,636 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,636 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:07,636 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,637 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,637 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,637 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,637 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,637 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,638 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,638 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,638 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,638 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,638 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,638 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,638 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,641 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,641 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,641 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,642 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,642 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,642 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:07,642 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,642 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,643 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,643 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,643 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,643 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,643 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,644 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,644 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,644 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,644 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,644 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,644 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,644 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,644 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,644 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,645 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,645 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,645 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:43:07,645 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:07,646 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:07,646 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:07,646 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,646 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,647 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,647 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:07,647 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,647 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,647 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:07,647 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,647 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,648 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:07,648 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,648 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,648 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,648 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,648 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:07,648 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,649 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:07,659 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:07,659 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:07,660 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:07,660 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:07,660 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@1c631258]
2014-05-22 13:43:07,660 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:07,660 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:07,665 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:07,675 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:07,676 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:07,676 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:07,676 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:07,676 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:07,676 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:07,677 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:07,677 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@422e71e0] read-only
2014-05-22 13:43:07,677 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:07,677 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:07,677 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:07,677 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@422e71e0]
2014-05-22 13:43:07,678 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:07,678 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:07,678 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:43:07,678 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:43:07,680 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,681 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,682 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,685 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,686 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,686 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,687 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,718 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,718 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,719 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,719 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:43:07,720 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:07,720 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:07,721 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:07,721 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,721 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,721 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,721 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,721 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,722 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:07,725 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,725 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,725 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:07,725 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,725 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,725 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:07,725 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,726 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,726 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,726 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:07,726 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,726 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,727 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,727 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:07,727 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:07,728 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,728 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,728 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,728 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,728 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,728 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,729 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,741 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,741 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,741 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,741 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,741 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,741 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,741 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,741 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,741 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,741 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,742 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,742 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:07,742 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,743 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,743 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,743 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:07,743 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,743 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,746 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,746 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:43:07,747 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:07,747 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:07,747 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:07,747 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,747 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,748 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:07,748 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:07,748 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,748 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:07,748 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,748 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,748 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:07,749 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,749 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,749 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:07,749 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,749 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,749 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,749 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:07,749 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,759 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,759 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,759 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,759 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,760 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,761 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,761 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,761 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:07,762 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:07,762 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:07,764 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:07,764 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:07,764 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:07,764 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@422e71e0]
2014-05-22 13:43:07,765 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:07,765 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:07,769 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:07,778 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:07,778 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:07,779 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:07,779 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:07,779 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:07,779 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:07,780 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:07,780 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@4090cc51] read-only
2014-05-22 13:43:07,780 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:07,780 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:07,780 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:07,780 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@4090cc51]
2014-05-22 13:43:07,781 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:07,781 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:07,781 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:43:07,781 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:43:07,783 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,784 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,785 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,788 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,788 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,789 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,789 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,792 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,792 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,793 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,793 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:43:07,794 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:07,794 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:07,794 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:07,794 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,794 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:43:07,795 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,795 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,795 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,795 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:07,804 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,805 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,805 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:07,805 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,805 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,805 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:07,805 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,805 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,805 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,806 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:07,806 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,806 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,806 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,807 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:07,807 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:07,807 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,807 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,807 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,808 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,808 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:43:07,808 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,808 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,810 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,810 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:07,810 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,810 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,811 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:07,811 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,811 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,811 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:07,811 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,811 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,811 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,811 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:07,812 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,812 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,812 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,812 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:07,813 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,813 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:07,816 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:07,816 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:43:07,817 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:07,817 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:07,817 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:07,817 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,818 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:43:07,818 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:07,818 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:07,818 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,818 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:07,818 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,818 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,819 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:07,819 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,819 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,819 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:07,819 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,819 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,819 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,820 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:07,820 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,823 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,823 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,824 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,824 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:43:07,824 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,824 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:07,825 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:07,825 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,825 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:07,825 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:07,825 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,825 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:07,825 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:07,825 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:07,825 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:07,826 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:07,826 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:07,826 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:07,826 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:07,827 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:07,829 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:07,829 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:07,829 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:07,829 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@4090cc51]
2014-05-22 13:43:07,829 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:07,830 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:07,833 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:12,276 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'TraderCategoryList'
2014-05-22 13:43:12,325 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'getAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:12,325 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:12,326 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.dao.TraderCategoryDaoImpl.getAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:12,326 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:12,326 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:12,326 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:12,326 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:12,327 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:12,327 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@f82c688] read-only
2014-05-22 13:43:12,328 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:12,328 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:12,328 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:12,328 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@f82c688]
2014-05-22 13:43:12,328 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select tradercate0_.id as id1_11_, tradercate0_.comment as comment2_11_, tradercate0_.name as name3_11_ from traderCategories tradercate0_ order by tradercate0_.id ASC
2014-05-22 13:43:12,329 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:12,329 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:12,329 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:12,330 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:12,330 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:12,330 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@f82c688]
2014-05-22 13:43:12,330 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:12,330 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:12,334 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:14,566 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'editTraderCategory'
2014-05-22 13:43:14,778 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'getAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:14,778 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:14,779 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.ProductCategoryServiceImpl.getAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:14,779 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:14,779 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:14,779 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:14,779 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:14,781 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:14,781 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@404f036e] read-only
2014-05-22 13:43:14,781 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:14,781 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:14,781 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:14,781 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@404f036e]
2014-05-22 13:43:14,782 [JavaFX Application Thread] DEBUG org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'getAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:14,783 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:14,783 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:14,783 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:43:14,785 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select productcat0_.id as id1_6_, productcat0_.name as name2_6_, productcat0_.parent_id as parent_i3_6_ from productCategories productcat0_ order by productcat0_.name ASC
2014-05-22 13:43:14,788 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:14,788 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:14,788 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:14,788 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:14,788 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:14,788 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@404f036e]
2014-05-22 13:43:14,788 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:14,790 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:14,795 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:45,770 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'RegionListController'
2014-05-22 13:43:45,798 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:45,799 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionServiceImpl.getAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:45,799 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:45,799 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:45,799 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:45,799 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:45,801 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:45,801 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@42a083e9] read-only
2014-05-22 13:43:45,801 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:45,801 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:45,801 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:45,801 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@42a083e9]
2014-05-22 13:43:45,801 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:45,801 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:45,802 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:43:45,802 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_, region0_.color as color2_10_, region0_.comment as comment3_10_, region0_.name as name4_10_, region0_.rainfallChanceId as rainfall5_10_, region0_.temperatureId as temperat6_10_ from regions region0_ order by region0_.name ASC
2014-05-22 13:43:45,803 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,803 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:43:45,804 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:45,804 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:45,804 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2014-05-22 13:43:45,804 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:43:45,804 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2014-05-22 13:43:45,804 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:45,804 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:43:45,805 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:43:45,805 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:43:45,805 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:43:45,805 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:43:45,805 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:43:45,805 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:43:45,806 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:43:45,806 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:45,807 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:43:45,808 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:45,808 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,808 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:45,808 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,809 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:45,809 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:45,809 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:43:45,810 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:45,810 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,811 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:45,811 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,811 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:45,811 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:45,811 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:43:45,812 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:45,812 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,813 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,813 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:45,813 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:45,813 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:45,814 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:45,814 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,814 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,814 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:45,814 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:45,814 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,815 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:45,815 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,815 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:45,815 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:45,815 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:43:45,817 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:45,817 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,817 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:45,817 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,817 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:45,817 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:45,818 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:43:45,819 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:45,819 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,820 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:45,820 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:45,820 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,820 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:45,820 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,821 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:45,821 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:45,821 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:43:45,822 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:45,822 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,822 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:45,822 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,823 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:45,823 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:45,823 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:43:45,824 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:45,824 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,824 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:45,824 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,825 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:45,825 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:45,825 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:43:45,826 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:45,826 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,826 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,827 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:45,827 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:45,827 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,827 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:45,828 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,828 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,828 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,828 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:45,828 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,828 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:45,828 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:45,828 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:43:45,830 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:45,830 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,830 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:45,831 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,831 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:45,831 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:45,831 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select products0_.regionId as regionId2_10_1_, products0_.productId as productI1_8_1_, product1_.id as id1_9_0_, product1_.attributeId as attribut2_9_0_, product1_.comment as comment3_9_0_, product1_.cost as cost4_9_0_, product1_.name as name5_9_0_, product1_.quality as quality6_9_0_ from product_regions products0_ inner join products product1_ on products0_.productId=product1_.id where products0_.regionId=?
2014-05-22 13:43:45,832 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:45,833 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,833 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:45,833 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,833 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:45,833 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:45,833 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders2x0_.region2 as region2_10_1_, borders2x0_.region1 as region3_2_1_, borders2x0_.region2 as region2_2_1_, borders2x0_.region1 as region3_2_0_, borders2x0_.region2 as region2_2_0_, borders2x0_.borderCost as borderCo1_2_0_ from borders borders2x0_ where borders2x0_.region2=?
2014-05-22 13:43:45,834 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:45,835 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,835 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:45,835 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,835 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:45,835 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:45,835 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select borders1x0_.region1 as region3_10_1_, borders1x0_.region1 as region3_2_1_, borders1x0_.region2 as region2_2_1_, borders1x0_.region1 as region3_2_0_, borders1x0_.region2 as region2_2_0_, borders1x0_.borderCost as borderCo1_2_0_ from borders borders1x0_ where borders1x0_.region1=?
2014-05-22 13:43:45,836 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:45,836 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,837 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,837 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:45,838 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,838 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:45,838 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,838 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done loading collection
2014-05-22 13:43:45,839 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:45,839 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:45,839 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:45,839 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:45,839 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:45,839 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@42a083e9]
2014-05-22 13:43:45,840 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:45,840 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:45,842 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:45,895 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:45,895 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:45,895 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:45,895 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:45,895 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:45,895 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:45,896 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:45,896 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@5c58b88e] read-only
2014-05-22 13:43:45,896 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:45,896 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:45,896 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:45,896 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@5c58b88e]
2014-05-22 13:43:45,896 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:45,896 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:45,896 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:43:45,897 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:43:45,898 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,899 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:43:45,899 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:45,903 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,904 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:43:45,904 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:45,904 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,905 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:45,905 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:45,905 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:45,906 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:45,906 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:45,906 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:43:45,907 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:45,907 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,908 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:45,908 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:45,908 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:45,909 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:45,909 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:45,909 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:43:45,909 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:45,910 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,910 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:43:45,910 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:45,910 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:45,911 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:45,911 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:43:45,911 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:43:45,913 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:45,913 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:45,913 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,913 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:45,913 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,913 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,913 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:45,913 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,913 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,914 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:45,914 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,914 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:45,914 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:45,914 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:45,914 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:45,915 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:45,915 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:45,915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:43:45,915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:43:45,915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,915 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,916 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:45,916 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,916 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,916 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:45,916 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,916 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,916 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:45,916 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,916 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:45,916 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:45,917 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:45,917 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:45,917 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:45,917 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:45,917 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:43:45,917 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:43:45,918 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,918 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,918 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,918 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:45,919 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,920 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,920 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:45,920 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,920 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,920 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:45,920 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,920 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:45,920 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:45,921 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:43:45,921 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:45,921 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:45,921 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:45,922 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:43:45,922 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:43:45,922 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,922 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:45,922 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,922 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,922 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:45,922 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,923 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,923 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:45,923 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,923 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:45,923 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:45,923 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,924 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:45,924 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:45,924 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:45,924 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:45,924 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:45,926 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@5c58b88e]
2014-05-22 13:43:45,926 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:45,926 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:45,930 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:45,941 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:45,941 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:45,942 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:45,942 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:45,942 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:45,942 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:45,942 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:45,943 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@4845a907] read-only
2014-05-22 13:43:45,943 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:45,943 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:45,943 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:45,943 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@4845a907]
2014-05-22 13:43:45,943 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:45,943 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:45,943 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:43:45,944 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:43:45,945 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,945 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:43:45,947 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:45,950 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,950 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:43:45,950 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:45,951 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,951 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:45,952 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:45,952 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:45,952 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:45,952 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:45,952 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:43:45,952 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:45,953 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,954 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:45,954 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:45,954 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:45,954 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:45,954 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:45,955 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:43:45,955 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:45,955 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,956 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:43:45,956 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:45,956 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:45,956 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:45,956 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:43:45,957 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:43:45,957 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:45,958 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:45,958 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,958 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:45,958 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,958 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,959 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:45,959 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,959 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,959 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:45,959 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,959 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:45,959 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:45,960 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:45,960 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:45,960 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:45,960 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:45,960 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:43:45,960 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:43:45,960 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,961 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,961 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,961 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:45,961 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,961 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,961 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:45,961 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,961 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,961 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:45,961 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,961 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:45,962 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:45,962 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:45,962 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:45,962 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:45,962 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:45,962 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:43:45,963 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:43:45,963 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,963 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,963 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,963 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:45,963 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,963 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,963 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:45,963 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,963 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,963 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:45,964 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,964 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:45,964 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:45,964 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:43:45,964 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:45,964 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:45,964 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:45,965 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:43:45,965 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:43:45,965 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,965 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:45,965 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,965 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,965 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:45,965 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,965 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,965 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:45,965 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,966 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:45,966 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:45,966 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:45,966 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:45,966 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:45,967 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:45,967 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:45,967 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:45,967 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@4845a907]
2014-05-22 13:43:45,967 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:45,967 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:45,968 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:45,978 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:45,979 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:45,979 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:45,979 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:45,979 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:45,979 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:45,980 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:45,980 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@5fbdd33] read-only
2014-05-22 13:43:45,980 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:45,980 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:45,980 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:45,980 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@5fbdd33]
2014-05-22 13:43:45,980 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:45,981 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:45,981 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:43:45,981 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:43:45,983 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,983 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:43:45,983 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:45,986 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,987 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:43:45,987 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:45,987 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,988 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:45,988 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:45,988 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:45,989 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:45,989 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:45,989 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:43:45,990 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:45,992 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,993 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:45,993 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:45,993 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:45,993 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:45,993 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:45,994 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:43:45,994 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:45,994 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:45,995 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:43:45,995 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:45,995 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:45,995 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:45,995 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:43:45,995 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:43:45,998 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:45,998 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:45,998 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,998 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:45,999 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:45,999 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,999 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:45,999 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:45,999 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,999 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:45,999 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:45,999 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:46,000 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:46,000 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:46,001 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:46,001 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:46,001 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:46,001 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:43:46,001 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:43:46,001 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:46,001 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:46,002 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,002 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:46,002 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,002 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,003 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:46,003 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,003 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,003 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:46,003 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,003 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:46,003 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:46,003 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:46,003 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:46,003 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:46,004 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:46,004 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:43:46,004 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:43:46,004 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:46,004 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:46,004 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,004 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:46,004 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,007 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,007 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:46,007 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,007 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,007 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:46,008 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,008 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:46,008 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:46,008 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:43:46,008 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:46,008 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:46,009 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:46,009 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:43:46,009 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:43:46,009 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,009 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:46,009 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,009 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,009 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:46,009 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,009 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,010 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:46,010 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,010 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:46,010 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:46,010 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:46,010 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:46,011 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:46,011 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:46,011 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:46,011 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:46,011 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:46,011 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:46,012 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@5fbdd33]
2014-05-22 13:43:46,012 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:46,013 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:46,014 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:46,022 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:46,023 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:46,023 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:46,023 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:46,023 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:46,023 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:46,024 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:46,024 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@760ef01a] read-only
2014-05-22 13:43:46,024 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:46,024 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:46,024 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:46,024 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@760ef01a]
2014-05-22 13:43:46,026 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:46,026 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:46,026 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:43:46,028 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:43:46,029 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:46,033 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:43:46,033 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:46,036 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:46,036 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:43:46,036 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:46,037 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:46,037 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:43:46,038 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:46,038 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:46,038 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:43:46,039 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:46,039 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:46,040 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:46,040 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:43:46,040 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:43:46,040 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:46,040 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:46,040 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,040 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:46,043 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,043 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,043 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:46,044 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,044 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,044 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:46,044 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,044 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:46,044 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:46,044 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:46,045 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:46,045 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:46,045 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:46,045 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:46,045 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:46,046 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:46,046 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:46,046 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:46,046 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:43:46,046 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:43:46,047 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:46,047 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:46,050 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,051 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:46,051 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,051 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,051 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:46,051 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,051 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,051 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:46,051 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,051 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:46,051 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:46,052 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:46,052 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:46,052 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:46,052 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:46,052 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:46,053 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:43:46,053 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:46,057 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:46,058 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:43:46,058 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:46,058 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:46,058 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:46,058 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:43:46,059 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:43:46,059 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:46,059 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:46,059 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,059 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:46,059 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,059 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,059 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:46,060 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,060 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,060 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:46,060 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,060 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:46,060 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:46,060 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:46,060 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:46,061 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:46,061 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:46,061 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:43:46,061 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:43:46,061 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,061 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:46,061 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,061 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,062 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:46,062 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,062 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,062 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:46,062 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,062 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:46,062 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:46,062 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:46,063 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:46,063 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:46,072 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:46,072 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:46,072 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:46,073 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@760ef01a]
2014-05-22 13:43:46,073 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:46,073 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:46,074 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:43:46,082 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:46,083 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [sepm.dsa.service.RegionBorderServiceImpl.getAllByRegion]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2014-05-22 13:43:46,083 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:46,083 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:46,083 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
2014-05-22 13:43:46,083 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:file:database/fooDB]
2014-05-22 13:43:46,084 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
2014-05-22 13:43:46,084 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hsqldb.jdbc.JDBCConnection@61ea9387] read-only
2014-05-22 13:43:46,084 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
2014-05-22 13:43:46,085 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
2014-05-22 13:43:46,085 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
2014-05-22 13:43:46,085 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hsqldb.jdbc.JDBCConnection@61ea9387]
2014-05-22 13:43:46,085 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2014-05-22 13:43:46,085 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2014-05-22 13:43:46,085 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Participating in existing transaction
2014-05-22 13:43:46,086 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select regionbord0_.region1 as region3_2_, regionbord0_.region2 as region2_2_, regionbord0_.borderCost as borderCo1_2_ from borders regionbord0_ where regionbord0_.region1=? or regionbord0_.region2=?
2014-05-22 13:43:46,087 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:46,088 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#4]
2014-05-22 13:43:46,088 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:46,096 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:46,096 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#2]
2014-05-22 13:43:46,096 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:46,097 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:46,097 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#1]
2014-05-22 13:43:46,097 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:46,098 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:46,098 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#1]
2014-05-22 13:43:46,099 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:46,099 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:46,099 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:46,099 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#1]
2014-05-22 13:43:46,100 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#1]
2014-05-22 13:43:46,100 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:46,100 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:46,100 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,100 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#1]
2014-05-22 13:43:46,100 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,100 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,100 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#1]
2014-05-22 13:43:46,101 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,101 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,101 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#1]
2014-05-22 13:43:46,101 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,101 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:46,101 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:46,101 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:46,101 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:46,111 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:46,112 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:46,112 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:46,112 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, EntityKey[sepm.dsa.model.Region#2]
2014-05-22 13:43:46,113 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:46,113 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:46,113 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:46,113 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#2]
2014-05-22 13:43:46,114 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#2]
2014-05-22 13:43:46,114 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:46,114 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:46,114 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,114 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#2]
2014-05-22 13:43:46,114 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,114 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,114 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#2]
2014-05-22 13:43:46,115 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,115 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,115 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#2]
2014-05-22 13:43:46,115 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,115 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:46,115 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:46,115 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:46,116 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:46,116 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:46,116 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:46,116 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:46,116 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Loading entity: [sepm.dsa.model.Region#3]
2014-05-22 13:43:46,116 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select region0_.id as id1_10_5_, region0_.color as color2_10_5_, region0_.comment as comment3_10_5_, region0_.name as name4_10_5_, region0_.rainfallChanceId as rainfall5_10_5_, region0_.temperatureId as temperat6_10_5_, borders1x1_.region1 as region3_10_7_, borders1x1_.region1 as region3_2_7_, borders1x1_.region2 as region2_2_7_, borders1x1_.region1 as region3_2_0_, borders1x1_.region2 as region2_2_0_, borders1x1_.borderCost as borderCo1_2_0_, borders2x2_.region2 as region2_10_8_, borders2x2_.region1 as region3_2_8_, borders2x2_.region2 as region2_2_8_, borders2x2_.region1 as region3_2_1_, borders2x2_.region2 as region2_2_1_, borders2x2_.borderCost as borderCo1_2_1_, products3_.regionId as regionId2_10_9_, product4_.id as productI1_8_9_, product4_.id as id1_9_2_, product4_.attributeId as attribut2_9_2_, product4_.comment as comment3_9_2_, product4_.cost as cost4_9_2_, product4_.name as name5_9_2_, product4_.quality as quality6_9_2_, categories5_.productId as productI2_9_10_, productcat6_.id as category1_7_10_, productcat6_.id as id1_6_3_, productcat6_.name as name2_6_3_, productcat6_.parent_id as parent_i3_6_3_, productcat7_.id as id1_6_4_, productcat7_.name as name2_6_4_, productcat7_.parent_id as parent_i3_6_4_ from regions region0_ left outer join borders borders1x1_ on region0_.id=borders1x1_.region1 left outer join borders borders2x2_ on region0_.id=borders2x2_.region2 left outer join product_regions products3_ on region0_.id=products3_.regionId left outer join products product4_ on products3_.productId=product4_.id left outer join product_categories categories5_ on product4_.id=categories5_.productId left outer join productCategories productcat6_ on categories5_.categoryId=productcat6_.id left outer join productCategories productcat7_ on productcat6_.parent_id=productcat7_.id where region0_.id=?
2014-05-22 13:43:46,117 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2014-05-22 13:43:46,118 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: null, EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, EntityKey[sepm.dsa.model.Region#3]
2014-05-22 13:43:46,118 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:46,118 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:46,118 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:46,118 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#3]
2014-05-22 13:43:46,119 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#3]
2014-05-22 13:43:46,119 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:46,119 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:46,123 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,123 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#3]
2014-05-22 13:43:46,124 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,124 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,124 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#3]
2014-05-22 13:43:46,124 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,124 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,124 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#3]
2014-05-22 13:43:46,124 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,124 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:46,124 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:46,125 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], null, null, null, null, EntityKey[sepm.dsa.model.Region#4]
2014-05-22 13:43:46,125 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Found row of collection: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:46,125 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:46,125 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:46,125 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [sepm.dsa.model.Region#4]
2014-05-22 13:43:46,125 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [sepm.dsa.model.Region#4]
2014-05-22 13:43:46,125 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,125 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders1#4]
2014-05-22 13:43:46,126 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders1
2014-05-22 13:43:46,126 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,126 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.borders2#4]
2014-05-22 13:43:46,126 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.borders2
2014-05-22 13:43:46,126 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,127 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [sepm.dsa.model.Region.products#4]
2014-05-22 13:43:46,127 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: sepm.dsa.model.Region.products
2014-05-22 13:43:46,127 [JavaFX Application Thread] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - No collections were found in result set for role: sepm.dsa.model.Product.categories
2014-05-22 13:43:46,127 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Done entity load
2014-05-22 13:43:46,127 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]
2014-05-22 13:43:46,127 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2014-05-22 13:43:46,127 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}]
2014-05-22 13:43:46,128 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
2014-05-22 13:43:46,128 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2014-05-22 13:43:46,128 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
2014-05-22 13:43:46,128 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
2014-05-22 13:43:46,128 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
2014-05-22 13:43:46,129 [JavaFX Application Thread] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hsqldb.jdbc.JDBCConnection@61ea9387]
2014-05-22 13:43:46,129 [JavaFX Application Thread] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[sepm.dsa.model.Region#3], EntityKey[sepm.dsa.model.Region#4], EntityKey[sepm.dsa.model.Region#1], EntityKey[sepm.dsa.model.Region#2], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#1, region2=sepm.dsa.model.Region#2}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#3}], EntityKey[sepm.dsa.model.RegionBorder#component[region1,region2]{region1=sepm.dsa.model.Region#4, region2=sepm.dsa.model.Region#2}]],collectionKeys=[CollectionKey[sepm.dsa.model.Region.borders1#1], CollectionKey[sepm.dsa.model.Region.borders1#2], CollectionKey[sepm.dsa.model.Region.products#2], CollectionKey[sepm.dsa.model.Region.borders2#1], CollectionKey[sepm.dsa.model.Region.products#1], CollectionKey[sepm.dsa.model.Region.borders1#3], CollectionKey[sepm.dsa.model.Region.products#4], CollectionKey[sepm.dsa.model.Region.products#3], CollectionKey[sepm.dsa.model.Region.borders1#4], CollectionKey[sepm.dsa.model.Region.borders2#4], CollectionKey[sepm.dsa.model.Region.borders2#2], CollectionKey[sepm.dsa.model.Region.borders2#3]]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] collectionQueuedOps=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2014-05-22 13:43:46,181 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
2014-05-22 13:43:46,186 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
2014-05-22 13:44:32,663 [JavaFX Application Thread] INFO  org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7e12c5d7: startup date [Thu May 22 13:44:32 CEST 2014]; root of context hierarchy
2014-05-22 13:44:32,866 [JavaFX Application Thread] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml]
2014-05-22 13:44:33,778 [JavaFX Application Thread] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@68d0b7b: defining beans [dataSource,sessionFactory,loader,regionDao,regionBorderDao,traderDao,productDao,traderCategoryDao,locationDao,productCategoryDao,productUnitDao,regionService,regionBorderService,locationService,productService,productCategoryService,productUnitService,traderCategoryService,traderService,pathService,assortmentNatureService,MainMenuController,RegionListController,EditRegionController,LocationListController,EditLocationController,productListController,editProductController,TraderCategoryList,editTraderCategory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager]; root of factory hierarchy
2014-05-22 13:44:33,839 [JavaFX Application Thread] INFO  org.springframework.jdbc.datasource.DriverManagerDataSource - Loaded JDBC driver: org.hsqldb.jdbc.JDBCDriver
2014-05-22 13:44:34,443 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
2014-05-22 13:44:34,466 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.2.5.Final}
2014-05-22 13:44:34,473 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2014-05-22 13:44:34,478 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2014-05-22 13:44:36,284 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB461EF9920C.ENGINE - checkpointClose start
2014-05-22 13:44:36,351 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB461EF9920C.ENGINE - checkpointClose end
2014-05-22 13:44:36,462 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2014-05-22 13:44:37,493 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2014-05-22 13:44:37,506 [JavaFX Application Thread] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2014-05-22 13:44:38,430 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2014-05-22 13:44:38,431 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata
2014-05-22 13:44:38,438 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema
2014-05-22 13:44:38,585 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTUNIT
2014-05-22 13:44:38,587 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [unittype, name, id, value]
2014-05-22 13:44:38,587 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 13:44:38,588 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10167_10168]
2014-05-22 13:44:38,601 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.ASSORTMENTNATURES
2014-05-22 13:44:38,602 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [assortments_id, productcategory_id, tradercategory_id, id, defaultoccurence]
2014-05-22 13:44:38,602 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_c328928buvo2stdblctp1byyh, fk_ngm1h9j6b3mu5hftpr93wdvdv, fk_5vsg15giupc62g5e5u81p7qwh]
2014-05-22 13:44:38,603 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10262, sys_idx_10254, sys_idx_10258, sys_idx_sys_pk_10174_10175]
2014-05-22 13:44:38,610 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.BORDERS
2014-05-22 13:44:38,611 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [region1, region2, bordercost]
2014-05-22 13:44:38,611 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_emhw2sfj7xjx3df0k5aseg9mq, fk_7xx83419llaxu9oo8ugtx6er3]
2014-05-22 13:44:38,611 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10143, sys_idx_sys_pk_10092_10093, sys_idx_10146]
2014-05-22 13:44:38,619 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.DEALS
2014-05-22 13:44:38,620 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [date, trader_id, amount, price, purchase, id, qualityid]
2014-05-22 13:44:38,620 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_svghy0txlxvstjgu94i5lqox]
2014-05-22 13:44:38,621 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10266, sys_idx_sys_pk_10183_10184]
2014-05-22 13:44:38,632 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.LOCATIONS
2014-05-22 13:44:38,632 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [sizeid, weatherid, xcoord, planfilename, name, comment, id, region, ycoord, height]
2014-05-22 13:44:38,633 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_1786dk9g78kmajpxnwxyll5n3]
2014-05-22 13:44:38,633 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10100_10107, sys_idx_10155]
2014-05-22 13:44:38,657 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.OFFERS
2014-05-22 13:44:38,658 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [trader_id, amount, priceperunit, product_id, id, qualityid]
2014-05-22 13:44:38,658 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_ndwyqhg5t22qpbn9w9yyfj8jv, fk_8fnfgctij6t1t5a6nv23vl6e1]
2014-05-22 13:44:38,658 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10273, sys_idx_sys_pk_10195_10196, sys_idx_10280]
2014-05-22 13:44:38,688 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTCATEGORIES
2014-05-22 13:44:38,689 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [parent_id, name, id]
2014-05-22 13:44:38,694 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_i69xwofcgfip1jg9o51bqnnh8]
2014-05-22 13:44:38,696 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10203_10204, sys_idx_10287]
2014-05-22 13:44:38,708 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_CATEGORIES
2014-05-22 13:44:38,708 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, categoryid]
2014-05-22 13:44:38,709 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_mchvd9dqbw8sy1c274cowu197, fk_dpdy1mfn7h3qpa2csbadunh4k]
2014-05-22 13:44:38,711 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10294, sys_idx_sys_pk_10208_10209, sys_idx_10290]
2014-05-22 13:44:38,783 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_REGIONS
2014-05-22 13:44:38,784 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, regionid]
2014-05-22 13:44:38,784 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_dqvpj6i7snhiu1pyalcwnhlbq, fk_q7f6w9g0xjwtqan09noxg3oi7]
2014-05-22 13:44:38,785 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10298, sys_idx_sys_pk_10214_10215, sys_idx_10302]
2014-05-22 13:44:38,796 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTS
2014-05-22 13:44:38,798 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [attributeid, cost, name, comment, id, quality]
2014-05-22 13:44:38,805 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 13:44:38,806 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10222_10223]
2014-05-22 13:44:38,815 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.REGIONS
2014-05-22 13:44:38,815 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [color, name, comment, id, rainfallchanceid, temperatureid]
2014-05-22 13:44:38,816 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 13:44:38,816 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10116_10121]
2014-05-22 13:44:38,913 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERCATEGORIES
2014-05-22 13:44:38,913 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [name, comment, id]
2014-05-22 13:44:38,915 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 13:44:38,918 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10229_10230]
2014-05-22 13:44:38,938 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERS
2014-05-22 13:44:38,939 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [ypos, size, xpos, category_id, convince, name, comment, id, mut, charisma, location_id, intelligence]
2014-05-22 13:44:38,939 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_pd546l32fc4omyfhy1wx4tbbi, fk_7fuswslb1h70hc8mjcxef277j]
2014-05-22 13:44:38,939 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10242_10243, sys_idx_10306, sys_idx_10318]
2014-05-22 13:44:38,943 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete
2014-05-22 13:44:39,917 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.1.0.Final
2014-05-22 13:44:40,007 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:44:40,200 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:44:40,371 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:44:40,402 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:44:40,434 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:44:40,469 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:44:40,500 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:44:40,534 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:44:40,556 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:44:40,578 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:44:40,595 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:44:40,619 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:44:40,636 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:44:40,697 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:44:40,726 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:44:40,767 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:44:40,808 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 13:44:40,832 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 13:44:41,031 [JavaFX Application Thread] INFO  org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@72319b11] of Hibernate SessionFactory for HibernateTransactionManager
2014-05-22 14:46:04,835 [JavaFX Application Thread] INFO  org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@65df063a: startup date [Thu May 22 14:46:04 CEST 2014]; root of context hierarchy
2014-05-22 14:46:04,889 [JavaFX Application Thread] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml]
2014-05-22 14:46:05,197 [JavaFX Application Thread] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3177c1f8: defining beans [dataSource,sessionFactory,loader,regionDao,regionBorderDao,traderDao,productDao,traderCategoryDao,locationDao,productCategoryDao,productUnitDao,regionService,regionBorderService,locationService,productService,productCategoryService,productUnitService,traderCategoryService,traderService,pathService,assortmentNatureService,MainMenuController,RegionListController,EditRegionController,LocationListController,EditLocationController,productListController,editProductController,TraderCategoryList,editTraderCategory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager]; root of factory hierarchy
2014-05-22 14:46:05,215 [JavaFX Application Thread] INFO  org.springframework.jdbc.datasource.DriverManagerDataSource - Loaded JDBC driver: org.hsqldb.jdbc.JDBCDriver
2014-05-22 14:46:05,387 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
2014-05-22 14:46:05,392 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.2.5.Final}
2014-05-22 14:46:05,394 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2014-05-22 14:46:05,396 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2014-05-22 14:46:06,115 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB461EF9920C.ENGINE - checkpointClose start
2014-05-22 14:46:06,265 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB461EF9920C.ENGINE - checkpointClose end
2014-05-22 14:46:06,399 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2014-05-22 14:46:07,696 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2014-05-22 14:46:07,710 [JavaFX Application Thread] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2014-05-22 14:46:08,810 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2014-05-22 14:46:08,810 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata
2014-05-22 14:46:08,818 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema
2014-05-22 14:46:09,054 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTUNIT
2014-05-22 14:46:09,054 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [unittype, name, id, value]
2014-05-22 14:46:09,055 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 14:46:09,055 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10144_10148]
2014-05-22 14:46:09,066 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.ASSORTMENTNATURES
2014-05-22 14:46:09,067 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [assortments_id, productcategory_id, tradercategory_id, id, defaultoccurence]
2014-05-22 14:46:09,067 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_c328928buvo2stdblctp1byyh, fk_ngm1h9j6b3mu5hftpr93wdvdv, fk_5vsg15giupc62g5e5u81p7qwh]
2014-05-22 14:46:09,068 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10154_10157, sys_idx_10285, sys_idx_10290, sys_idx_10280]
2014-05-22 14:46:09,078 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.BORDERS
2014-05-22 14:46:09,078 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [region1, region2, bordercost]
2014-05-22 14:46:09,079 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_emhw2sfj7xjx3df0k5aseg9mq, fk_7xx83419llaxu9oo8ugtx6er3]
2014-05-22 14:46:09,079 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10262, sys_idx_sys_pk_10092_10093, sys_idx_10259]
2014-05-22 14:46:09,090 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.DEALS
2014-05-22 14:46:09,091 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [date, trader_id, amount, price, purchase, id, qualityid]
2014-05-22 14:46:09,091 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_svghy0txlxvstjgu94i5lqox]
2014-05-22 14:46:09,092 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10295, sys_idx_sys_pk_10162_10168]
2014-05-22 14:46:09,102 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.LOCATIONS
2014-05-22 14:46:09,103 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [sizeid, weatherid, xcoord, planfilename, name, comment, id, region, ycoord, height]
2014-05-22 14:46:09,103 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_1786dk9g78kmajpxnwxyll5n3]
2014-05-22 14:46:09,105 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10271, sys_idx_sys_pk_10100_10107]
2014-05-22 14:46:09,130 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.OFFERS
2014-05-22 14:46:09,131 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [trader_id, amount, priceperunit, product_id, id, qualityid]
2014-05-22 14:46:09,132 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_ndwyqhg5t22qpbn9w9yyfj8jv, fk_8fnfgctij6t1t5a6nv23vl6e1]
2014-05-22 14:46:09,132 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10311, sys_idx_sys_pk_10176_10182, sys_idx_10303]
2014-05-22 14:46:09,152 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTCATEGORIES
2014-05-22 14:46:09,153 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [parent_id, name, id]
2014-05-22 14:46:09,153 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_i69xwofcgfip1jg9o51bqnnh8]
2014-05-22 14:46:09,153 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10190_10192, sys_idx_10195]
2014-05-22 14:46:09,180 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_CATEGORIES
2014-05-22 14:46:09,181 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, categoryid]
2014-05-22 14:46:09,181 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_mchvd9dqbw8sy1c274cowu197, fk_dpdy1mfn7h3qpa2csbadunh4k]
2014-05-22 14:46:09,182 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10319, sys_idx_sys_pk_10199_10200, sys_idx_10203]
2014-05-22 14:46:09,194 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_REGIONS
2014-05-22 14:46:09,194 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, regionid]
2014-05-22 14:46:09,195 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_dqvpj6i7snhiu1pyalcwnhlbq, fk_q7f6w9g0xjwtqan09noxg3oi7]
2014-05-22 14:46:09,195 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10207_10208, sys_idx_10211, sys_idx_10323]
2014-05-22 14:46:09,222 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTS
2014-05-22 14:46:09,223 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [attributeid, cost, name, comment, id, quality]
2014-05-22 14:46:09,224 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 14:46:09,224 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10214_10219]
2014-05-22 14:46:09,235 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.REGIONS
2014-05-22 14:46:09,236 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [color, name, comment, id, rainfallchanceid, temperatureid]
2014-05-22 14:46:09,236 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 14:46:09,236 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10116_10121]
2014-05-22 14:46:09,251 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERCATEGORIES
2014-05-22 14:46:09,252 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [name, comment, id]
2014-05-22 14:46:09,252 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 14:46:09,253 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10226_10228]
2014-05-22 14:46:09,285 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERS
2014-05-22 14:46:09,286 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [ypos, size, xpos, category_id, convince, name, comment, id, mut, charisma, location_id, intelligence]
2014-05-22 14:46:09,289 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_pd546l32fc4omyfhy1wx4tbbi, fk_7fuswslb1h70hc8mjcxef277j]
2014-05-22 14:46:09,289 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10255, sys_idx_sys_pk_10232_10243, sys_idx_10257]
2014-05-22 14:46:09,294 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete
2014-05-22 14:46:10,068 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.1.0.Final
2014-05-22 14:46:10,136 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:46:10,283 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:46:10,483 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:46:10,560 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:46:10,598 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:46:10,646 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:46:10,670 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:46:10,711 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:46:10,738 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:46:10,793 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:46:10,841 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:46:10,887 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:46:10,910 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:46:10,952 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:46:10,972 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:46:11,008 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:46:11,069 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:46:11,120 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:46:11,302 [JavaFX Application Thread] INFO  org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@48a24bf5] of Hibernate SessionFactory for HibernateTransactionManager
2014-05-22 14:47:19,673 [JavaFX Application Thread] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper - SQL Error: -8, SQLState: 23504
2014-05-22 14:47:19,674 [JavaFX Application Thread] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper - integrity constraint violation: foreign key no action; FK_G0N1WNX5LMWNHRKDVH6O1X7JA table: CONNECTIONS
2014-05-22 14:47:19,679 [JavaFX Application Thread] INFO  org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl - HHH000010: On release of batch it still contained JDBC statements
2014-05-22 14:50:29,589 [JavaFX Application Thread] INFO  org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6f922fd1: startup date [Thu May 22 14:50:29 CEST 2014]; root of context hierarchy
2014-05-22 14:50:29,890 [JavaFX Application Thread] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml]
2014-05-22 14:50:30,796 [JavaFX Application Thread] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@37333b56: defining beans [dataSource,sessionFactory,loader,regionDao,regionBorderDao,traderDao,productDao,traderCategoryDao,locationDao,productCategoryDao,productUnitDao,regionService,regionBorderService,locationService,productService,productCategoryService,productUnitService,traderCategoryService,traderService,pathService,assortmentNatureService,MainMenuController,RegionListController,EditRegionController,LocationListController,EditLocationController,productListController,editProductController,TraderCategoryList,editTraderCategory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager]; root of factory hierarchy
2014-05-22 14:50:30,851 [JavaFX Application Thread] INFO  org.springframework.jdbc.datasource.DriverManagerDataSource - Loaded JDBC driver: org.hsqldb.jdbc.JDBCDriver
2014-05-22 14:50:31,350 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
2014-05-22 14:50:31,363 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.2.5.Final}
2014-05-22 14:50:31,368 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2014-05-22 14:50:31,373 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2014-05-22 14:50:32,597 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - Checkpoint start
2014-05-22 14:50:32,598 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose start
2014-05-22 14:50:32,628 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose end
2014-05-22 14:50:32,630 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - Checkpoint end - txts: 1
2014-05-22 14:50:32,691 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2014-05-22 14:50:33,276 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2014-05-22 14:50:33,282 [JavaFX Application Thread] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2014-05-22 14:50:33,773 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2014-05-22 14:50:33,773 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata
2014-05-22 14:50:33,777 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema
2014-05-22 14:50:33,794 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: ProductUnit
2014-05-22 14:50:33,798 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: assortmentNatures
2014-05-22 14:50:33,800 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: borders
2014-05-22 14:50:33,802 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: deals
2014-05-22 14:50:33,803 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: locations
2014-05-22 14:50:33,805 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: offers
2014-05-22 14:50:33,807 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: productCategories
2014-05-22 14:50:33,815 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: product_categories
2014-05-22 14:50:33,816 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: product_regions
2014-05-22 14:50:33,817 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: products
2014-05-22 14:50:33,818 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: regions
2014-05-22 14:50:33,819 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: traderCategories
2014-05-22 14:50:33,825 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: traders
2014-05-22 14:50:33,831 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: ProductUnit
2014-05-22 14:50:33,833 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: assortmentNatures
2014-05-22 14:50:33,834 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: borders
2014-05-22 14:50:33,835 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: deals
2014-05-22 14:50:33,836 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: locations
2014-05-22 14:50:33,836 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: offers
2014-05-22 14:50:33,838 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: productCategories
2014-05-22 14:50:33,839 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: product_categories
2014-05-22 14:50:33,841 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: product_regions
2014-05-22 14:50:33,842 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: products
2014-05-22 14:50:33,844 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: regions
2014-05-22 14:50:33,845 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: traderCategories
2014-05-22 14:50:33,846 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: traders
2014-05-22 14:50:33,847 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: ProductUnit
2014-05-22 14:50:33,847 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: assortmentNatures
2014-05-22 14:50:33,848 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: borders
2014-05-22 14:50:33,849 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: deals
2014-05-22 14:50:33,850 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: locations
2014-05-22 14:50:33,851 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: offers
2014-05-22 14:50:33,853 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: productCategories
2014-05-22 14:50:33,854 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: product_categories
2014-05-22 14:50:33,855 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: product_regions
2014-05-22 14:50:33,857 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: products
2014-05-22 14:50:33,857 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: regions
2014-05-22 14:50:33,858 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: traderCategories
2014-05-22 14:50:33,859 [JavaFX Application Thread] INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: traders
2014-05-22 14:50:33,897 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete
2014-05-22 14:50:34,556 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.1.0.Final
2014-05-22 14:50:34,616 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:50:34,751 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:50:34,895 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:50:34,923 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:50:34,939 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:50:34,965 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:50:34,981 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:50:35,014 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:50:35,033 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:50:35,068 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:50:35,092 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:50:35,121 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:50:35,137 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:50:35,162 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:50:35,174 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:50:35,197 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:50:35,220 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 14:50:35,237 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 14:50:35,344 [JavaFX Application Thread] INFO  org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@2d1378ca] of Hibernate SessionFactory for HibernateTransactionManager
2014-05-22 14:50:48,942 [JavaFX Application Thread] WARN  org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000386: ResultSet had no statement associated with it, but was not yet registered
2014-05-22 14:50:56,474 [JavaFX Application Thread] WARN  org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000386: ResultSet had no statement associated with it, but was not yet registered
2014-05-22 14:51:10,442 [JavaFX Application Thread] WARN  org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000386: ResultSet had no statement associated with it, but was not yet registered
2014-05-22 14:51:38,884 [JavaFX Application Thread] WARN  org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000386: ResultSet had no statement associated with it, but was not yet registered
2014-05-22 14:51:56,235 [JavaFX Application Thread] WARN  org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000386: ResultSet had no statement associated with it, but was not yet registered
2014-05-22 14:52:07,636 [JavaFX Application Thread] WARN  org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000386: ResultSet had no statement associated with it, but was not yet registered
2014-05-22 14:52:20,129 [JavaFX Application Thread] WARN  org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000386: ResultSet had no statement associated with it, but was not yet registered
2014-05-22 15:00:24,881 [JavaFX Application Thread] INFO  org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2b78ef4d: startup date [Thu May 22 15:00:24 CEST 2014]; root of context hierarchy
2014-05-22 15:00:24,942 [JavaFX Application Thread] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml]
2014-05-22 15:00:25,230 [JavaFX Application Thread] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6a715cf0: defining beans [dataSource,sessionFactory,loader,regionDao,regionBorderDao,traderDao,productDao,traderCategoryDao,locationDao,productCategoryDao,productUnitDao,regionService,regionBorderService,locationService,productService,productCategoryService,productUnitService,traderCategoryService,traderService,pathService,assortmentNatureService,MainMenuController,RegionListController,EditRegionController,LocationListController,EditLocationController,productListController,editProductController,TraderCategoryList,editTraderCategory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager]; root of factory hierarchy
2014-05-22 15:00:25,248 [JavaFX Application Thread] INFO  org.springframework.jdbc.datasource.DriverManagerDataSource - Loaded JDBC driver: org.hsqldb.jdbc.JDBCDriver
2014-05-22 15:00:25,430 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
2014-05-22 15:00:25,435 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.2.5.Final}
2014-05-22 15:00:25,437 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2014-05-22 15:00:25,439 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2014-05-22 15:00:26,388 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose start
2014-05-22 15:00:26,496 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose end
2014-05-22 15:00:26,844 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2014-05-22 15:00:27,988 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2014-05-22 15:00:28,002 [JavaFX Application Thread] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2014-05-22 15:00:29,059 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2014-05-22 15:00:29,059 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata
2014-05-22 15:00:29,064 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema
2014-05-22 15:00:29,203 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTUNIT
2014-05-22 15:00:29,204 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [unittype, name, id, value]
2014-05-22 15:00:29,204 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 15:00:29,205 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10094_10095]
2014-05-22 15:00:29,213 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.ASSORTMENTNATURES
2014-05-22 15:00:29,214 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [assortments_id, productcategory_id, tradercategory_id, id, defaultoccurence]
2014-05-22 15:00:29,214 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_c328928buvo2stdblctp1byyh, fk_ngm1h9j6b3mu5hftpr93wdvdv, fk_5vsg15giupc62g5e5u81p7qwh]
2014-05-22 15:00:29,216 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10209, sys_idx_10213, sys_idx_sys_pk_10101_10102, sys_idx_10217]
2014-05-22 15:00:29,223 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.BORDERS
2014-05-22 15:00:29,223 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [region1, region2, bordercost]
2014-05-22 15:00:29,223 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_emhw2sfj7xjx3df0k5aseg9mq, fk_7xx83419llaxu9oo8ugtx6er3]
2014-05-22 15:00:29,224 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10106_10107, sys_idx_10221, sys_idx_10224]
2014-05-22 15:00:29,232 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.DEALS
2014-05-22 15:00:29,232 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [date, trader_id, amount, price, purchase, id, qualityid]
2014-05-22 15:00:29,232 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_svghy0txlxvstjgu94i5lqox]
2014-05-22 15:00:29,233 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10114_10115, sys_idx_10227]
2014-05-22 15:00:29,240 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.LOCATIONS
2014-05-22 15:00:29,240 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [sizeid, weatherid, xcoord, planfilename, name, comment, id, region, ycoord, height]
2014-05-22 15:00:29,241 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_1786dk9g78kmajpxnwxyll5n3]
2014-05-22 15:00:29,241 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10234, sys_idx_sys_pk_10127_10128]
2014-05-22 15:00:29,248 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.OFFERS
2014-05-22 15:00:29,248 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [trader_id, amount, priceperunit, product_id, id, qualityid]
2014-05-22 15:00:29,248 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_ndwyqhg5t22qpbn9w9yyfj8jv, fk_8fnfgctij6t1t5a6nv23vl6e1]
2014-05-22 15:00:29,248 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10140_10141, sys_idx_10242, sys_idx_10249]
2014-05-22 15:00:29,262 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTCATEGORIES
2014-05-22 15:00:29,263 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [parent_id, name, id]
2014-05-22 15:00:29,263 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_i69xwofcgfip1jg9o51bqnnh8]
2014-05-22 15:00:29,263 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10148_10149, sys_idx_10256]
2014-05-22 15:00:29,284 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_CATEGORIES
2014-05-22 15:00:29,286 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, categoryid]
2014-05-22 15:00:29,287 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_mchvd9dqbw8sy1c274cowu197, fk_dpdy1mfn7h3qpa2csbadunh4k]
2014-05-22 15:00:29,288 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10153_10154, sys_idx_10263, sys_idx_10259]
2014-05-22 15:00:29,331 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_REGIONS
2014-05-22 15:00:29,332 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, regionid]
2014-05-22 15:00:29,332 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_dqvpj6i7snhiu1pyalcwnhlbq, fk_q7f6w9g0xjwtqan09noxg3oi7]
2014-05-22 15:00:29,332 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10271, sys_idx_10267, sys_idx_sys_pk_10159_10160]
2014-05-22 15:00:29,374 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTS
2014-05-22 15:00:29,375 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [attributeid, cost, name, comment, id, quality]
2014-05-22 15:00:29,381 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 15:00:29,381 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10167_10168]
2014-05-22 15:00:29,388 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.REGIONS
2014-05-22 15:00:29,389 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [color, name, comment, id, rainfallchanceid, temperatureid]
2014-05-22 15:00:29,389 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 15:00:29,390 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10177_10178]
2014-05-22 15:00:29,398 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERCATEGORIES
2014-05-22 15:00:29,398 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [name, comment, id]
2014-05-22 15:00:29,398 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 15:00:29,398 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10184_10185]
2014-05-22 15:00:29,411 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERS
2014-05-22 15:00:29,411 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [ypos, size, xpos, category_id, convince, name, comment, id, mut, charisma, location_id, intelligence]
2014-05-22 15:00:29,412 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_pd546l32fc4omyfhy1wx4tbbi, fk_7fuswslb1h70hc8mjcxef277j]
2014-05-22 15:00:29,412 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10197_10198, sys_idx_10275, sys_idx_10287]
2014-05-22 15:00:29,416 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete
2014-05-22 15:00:30,211 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.1.0.Final
2014-05-22 15:00:30,290 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:00:30,496 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:00:30,640 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:00:30,660 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:00:30,678 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:00:30,710 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:00:30,738 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:00:30,760 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:00:30,783 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:00:30,814 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:00:30,835 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:00:30,861 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:00:30,878 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:00:30,895 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:00:30,927 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:00:30,962 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:00:31,001 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:00:31,034 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:00:31,250 [JavaFX Application Thread] INFO  org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@30a545b9] of Hibernate SessionFactory for HibernateTransactionManager
2014-05-22 15:02:21,808 [JavaFX Application Thread] INFO  org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@73cb5ea8: startup date [Thu May 22 15:02:21 CEST 2014]; root of context hierarchy
2014-05-22 15:02:21,902 [JavaFX Application Thread] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml]
2014-05-22 15:02:22,439 [JavaFX Application Thread] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@119ab166: defining beans [dataSource,sessionFactory,loader,regionDao,regionBorderDao,traderDao,productDao,traderCategoryDao,locationDao,productCategoryDao,productUnitDao,regionService,regionBorderService,locationService,productService,productCategoryService,productUnitService,traderCategoryService,traderService,pathService,assortmentNatureService,MainMenuController,RegionListController,EditRegionController,LocationListController,EditLocationController,productListController,editProductController,TraderCategoryList,editTraderCategory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager]; root of factory hierarchy
2014-05-22 15:02:22,477 [JavaFX Application Thread] INFO  org.springframework.jdbc.datasource.DriverManagerDataSource - Loaded JDBC driver: org.hsqldb.jdbc.JDBCDriver
2014-05-22 15:02:22,871 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
2014-05-22 15:02:22,884 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.2.5.Final}
2014-05-22 15:02:22,887 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2014-05-22 15:02:22,890 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2014-05-22 15:02:24,044 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose start
2014-05-22 15:02:24,080 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose end
2014-05-22 15:02:24,143 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2014-05-22 15:02:24,777 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2014-05-22 15:02:24,780 [JavaFX Application Thread] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2014-05-22 15:02:25,090 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2014-05-22 15:02:25,091 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata
2014-05-22 15:02:25,092 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema
2014-05-22 15:02:25,141 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTUNIT
2014-05-22 15:02:25,141 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [unittype, name, id, value]
2014-05-22 15:02:25,142 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 15:02:25,142 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10092_10096]
2014-05-22 15:02:25,147 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.ASSORTMENTNATURES
2014-05-22 15:02:25,147 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [assortments_id, productcategory_id, tradercategory_id, id, defaultoccurence]
2014-05-22 15:02:25,147 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_c328928buvo2stdblctp1byyh, fk_ngm1h9j6b3mu5hftpr93wdvdv, fk_5vsg15giupc62g5e5u81p7qwh]
2014-05-22 15:02:25,147 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10242, sys_idx_sys_pk_10102_10105, sys_idx_10247, sys_idx_10237]
2014-05-22 15:02:25,156 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.BORDERS
2014-05-22 15:02:25,157 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [region1, region2, bordercost]
2014-05-22 15:02:25,157 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_emhw2sfj7xjx3df0k5aseg9mq, fk_7xx83419llaxu9oo8ugtx6er3]
2014-05-22 15:02:25,157 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10252, sys_idx_10255, sys_idx_sys_pk_10110_10111]
2014-05-22 15:02:25,162 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.DEALS
2014-05-22 15:02:25,162 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [date, trader_id, amount, price, purchase, id, qualityid]
2014-05-22 15:02:25,162 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_svghy0txlxvstjgu94i5lqox]
2014-05-22 15:02:25,162 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10258, sys_idx_sys_pk_10114_10120]
2014-05-22 15:02:25,164 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.LOCATIONS
2014-05-22 15:02:25,164 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [sizeid, weatherid, xcoord, planfilename, name, comment, id, region, ycoord, height]
2014-05-22 15:02:25,165 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_1786dk9g78kmajpxnwxyll5n3]
2014-05-22 15:02:25,165 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10128_10135, sys_idx_10266]
2014-05-22 15:02:25,166 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.OFFERS
2014-05-22 15:02:25,167 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [trader_id, amount, priceperunit, product_id, id, qualityid]
2014-05-22 15:02:25,167 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_ndwyqhg5t22qpbn9w9yyfj8jv, fk_8fnfgctij6t1t5a6nv23vl6e1]
2014-05-22 15:02:25,167 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10283, sys_idx_10275, sys_idx_sys_pk_10144_10150]
2014-05-22 15:02:25,169 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTCATEGORIES
2014-05-22 15:02:25,169 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [parent_id, name, id]
2014-05-22 15:02:25,169 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_i69xwofcgfip1jg9o51bqnnh8]
2014-05-22 15:02:25,169 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10163, sys_idx_sys_pk_10158_10160]
2014-05-22 15:02:25,171 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_CATEGORIES
2014-05-22 15:02:25,171 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, categoryid]
2014-05-22 15:02:25,171 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_mchvd9dqbw8sy1c274cowu197, fk_dpdy1mfn7h3qpa2csbadunh4k]
2014-05-22 15:02:25,171 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10171, sys_idx_sys_pk_10167_10168, sys_idx_10291]
2014-05-22 15:02:25,174 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_REGIONS
2014-05-22 15:02:25,177 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, regionid]
2014-05-22 15:02:25,177 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_dqvpj6i7snhiu1pyalcwnhlbq, fk_q7f6w9g0xjwtqan09noxg3oi7]
2014-05-22 15:02:25,177 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10295, sys_idx_sys_pk_10175_10176, sys_idx_10299]
2014-05-22 15:02:25,183 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTS
2014-05-22 15:02:25,183 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [attributeid, cost, name, comment, id, quality]
2014-05-22 15:02:25,183 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 15:02:25,184 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10180_10185]
2014-05-22 15:02:25,197 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.REGIONS
2014-05-22 15:02:25,198 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [color, name, comment, id, rainfallchanceid, temperatureid]
2014-05-22 15:02:25,198 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 15:02:25,198 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10192_10197]
2014-05-22 15:02:25,210 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERCATEGORIES
2014-05-22 15:02:25,210 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [name, comment, id]
2014-05-22 15:02:25,210 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 15:02:25,210 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10204_10206]
2014-05-22 15:02:25,216 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERS
2014-05-22 15:02:25,216 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [ypos, size, xpos, category_id, convince, name, comment, id, mut, charisma, location_id, intelligence]
2014-05-22 15:02:25,216 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_pd546l32fc4omyfhy1wx4tbbi, fk_7fuswslb1h70hc8mjcxef277j]
2014-05-22 15:02:25,242 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10210_10221, sys_idx_10233, sys_idx_10235]
2014-05-22 15:02:25,244 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete
2014-05-22 15:02:25,739 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.1.0.Final
2014-05-22 15:02:25,808 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:02:25,906 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:02:26,045 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:02:26,056 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:02:26,063 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:02:26,088 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:02:26,101 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:02:26,113 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:02:26,121 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:02:26,130 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:02:26,138 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:02:26,147 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:02:26,159 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:02:26,170 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:02:26,177 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:02:26,196 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:02:26,211 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:02:26,225 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:02:26,300 [JavaFX Application Thread] INFO  org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@6d2665df] of Hibernate SessionFactory for HibernateTransactionManager
2014-05-22 15:07:32,351 [JavaFX Application Thread] INFO  org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4fbe9c74: startup date [Thu May 22 15:07:32 CEST 2014]; root of context hierarchy
2014-05-22 15:07:32,556 [JavaFX Application Thread] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml]
2014-05-22 15:07:33,487 [JavaFX Application Thread] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@391803af: defining beans [dataSource,sessionFactory,loader,regionDao,regionBorderDao,traderDao,productDao,traderCategoryDao,locationDao,productCategoryDao,productUnitDao,regionService,regionBorderService,locationService,productService,productCategoryService,productUnitService,traderCategoryService,traderService,pathService,assortmentNatureService,MainMenuController,RegionListController,EditRegionController,LocationListController,EditLocationController,productListController,editProductController,TraderCategoryList,editTraderCategory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager]; root of factory hierarchy
2014-05-22 15:07:33,556 [JavaFX Application Thread] INFO  org.springframework.jdbc.datasource.DriverManagerDataSource - Loaded JDBC driver: org.hsqldb.jdbc.JDBCDriver
2014-05-22 15:07:34,169 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
2014-05-22 15:07:34,189 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.2.5.Final}
2014-05-22 15:07:34,196 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2014-05-22 15:07:34,202 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2014-05-22 15:07:35,971 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose start
2014-05-22 15:07:36,030 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose end
2014-05-22 15:07:36,141 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2014-05-22 15:07:37,223 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2014-05-22 15:07:37,236 [JavaFX Application Thread] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2014-05-22 15:07:38,229 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2014-05-22 15:07:38,229 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata
2014-05-22 15:07:38,236 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema
2014-05-22 15:07:38,390 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTUNIT
2014-05-22 15:07:38,391 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [unittype, name, id, value]
2014-05-22 15:07:38,391 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 15:07:38,392 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10092_10096]
2014-05-22 15:07:38,405 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.ASSORTMENTNATURES
2014-05-22 15:07:38,406 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [assortments_id, productcategory_id, tradercategory_id, id, defaultoccurence]
2014-05-22 15:07:38,406 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_c328928buvo2stdblctp1byyh, fk_ngm1h9j6b3mu5hftpr93wdvdv, fk_5vsg15giupc62g5e5u81p7qwh]
2014-05-22 15:07:38,407 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10242, sys_idx_sys_pk_10102_10105, sys_idx_10247, sys_idx_10237]
2014-05-22 15:07:38,418 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.BORDERS
2014-05-22 15:07:38,419 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [region1, region2, bordercost]
2014-05-22 15:07:38,419 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_emhw2sfj7xjx3df0k5aseg9mq, fk_7xx83419llaxu9oo8ugtx6er3]
2014-05-22 15:07:38,420 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10252, sys_idx_10255, sys_idx_sys_pk_10110_10111]
2014-05-22 15:07:38,442 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.DEALS
2014-05-22 15:07:38,443 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [date, trader_id, amount, price, purchase, id, qualityid]
2014-05-22 15:07:38,443 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_svghy0txlxvstjgu94i5lqox]
2014-05-22 15:07:38,444 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10258, sys_idx_sys_pk_10114_10120]
2014-05-22 15:07:38,458 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.LOCATIONS
2014-05-22 15:07:38,459 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [sizeid, weatherid, xcoord, planfilename, name, comment, id, region, ycoord, height]
2014-05-22 15:07:38,459 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_1786dk9g78kmajpxnwxyll5n3]
2014-05-22 15:07:38,460 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10128_10135, sys_idx_10266]
2014-05-22 15:07:38,472 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.OFFERS
2014-05-22 15:07:38,473 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [trader_id, amount, priceperunit, product_id, id, qualityid]
2014-05-22 15:07:38,473 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_ndwyqhg5t22qpbn9w9yyfj8jv, fk_8fnfgctij6t1t5a6nv23vl6e1]
2014-05-22 15:07:38,474 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10283, sys_idx_10275, sys_idx_sys_pk_10144_10150]
2014-05-22 15:07:38,482 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTCATEGORIES
2014-05-22 15:07:38,482 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [parent_id, name, id]
2014-05-22 15:07:38,483 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_i69xwofcgfip1jg9o51bqnnh8]
2014-05-22 15:07:38,483 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10163, sys_idx_sys_pk_10158_10160]
2014-05-22 15:07:38,491 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_CATEGORIES
2014-05-22 15:07:38,492 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, categoryid]
2014-05-22 15:07:38,492 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_mchvd9dqbw8sy1c274cowu197, fk_dpdy1mfn7h3qpa2csbadunh4k]
2014-05-22 15:07:38,492 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10171, sys_idx_sys_pk_10167_10168, sys_idx_10291]
2014-05-22 15:07:38,502 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_REGIONS
2014-05-22 15:07:38,503 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, regionid]
2014-05-22 15:07:38,503 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_dqvpj6i7snhiu1pyalcwnhlbq, fk_q7f6w9g0xjwtqan09noxg3oi7]
2014-05-22 15:07:38,504 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10295, sys_idx_sys_pk_10175_10176, sys_idx_10299]
2014-05-22 15:07:38,516 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTS
2014-05-22 15:07:38,516 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [attributeid, cost, name, comment, id, quality]
2014-05-22 15:07:38,517 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 15:07:38,517 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10180_10185]
2014-05-22 15:07:38,549 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.REGIONS
2014-05-22 15:07:38,549 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [color, name, comment, id, rainfallchanceid, temperatureid]
2014-05-22 15:07:38,550 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 15:07:38,550 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10192_10197]
2014-05-22 15:07:38,564 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERCATEGORIES
2014-05-22 15:07:38,564 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [name, comment, id]
2014-05-22 15:07:38,565 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 15:07:38,565 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10204_10206]
2014-05-22 15:07:38,576 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERS
2014-05-22 15:07:38,577 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [ypos, size, xpos, category_id, convince, name, comment, id, mut, charisma, location_id, intelligence]
2014-05-22 15:07:38,577 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_pd546l32fc4omyfhy1wx4tbbi, fk_7fuswslb1h70hc8mjcxef277j]
2014-05-22 15:07:38,577 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10210_10221, sys_idx_10233, sys_idx_10235]
2014-05-22 15:07:38,581 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete
2014-05-22 15:07:39,560 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.1.0.Final
2014-05-22 15:07:39,677 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:07:39,899 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:07:40,085 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:07:40,113 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:07:40,146 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:07:40,174 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:07:40,511 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:07:40,562 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:07:40,595 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:07:40,649 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:07:40,682 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:07:40,754 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:07:40,817 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:07:40,873 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:07:40,904 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:07:40,950 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:07:41,055 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:07:41,113 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:07:41,381 [JavaFX Application Thread] INFO  org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@208de503] of Hibernate SessionFactory for HibernateTransactionManager
2014-05-22 15:14:06,004 [JavaFX Application Thread] INFO  org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@50938f4c: startup date [Thu May 22 15:14:05 CEST 2014]; root of context hierarchy
2014-05-22 15:14:06,087 [JavaFX Application Thread] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml]
2014-05-22 15:14:06,662 [JavaFX Application Thread] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7012cb5: defining beans [dataSource,sessionFactory,loader,regionDao,regionBorderDao,traderDao,productDao,traderCategoryDao,locationDao,productCategoryDao,productUnitDao,regionService,regionBorderService,locationService,productService,productCategoryService,productUnitService,traderCategoryService,traderService,pathService,assortmentNatureService,MainMenuController,RegionListController,EditRegionController,LocationListController,EditLocationController,productListController,editProductController,TraderCategoryList,editTraderCategory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager]; root of factory hierarchy
2014-05-22 15:14:06,728 [JavaFX Application Thread] INFO  org.springframework.jdbc.datasource.DriverManagerDataSource - Loaded JDBC driver: org.hsqldb.jdbc.JDBCDriver
2014-05-22 15:14:07,356 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
2014-05-22 15:14:07,372 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.2.5.Final}
2014-05-22 15:14:07,378 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2014-05-22 15:14:07,382 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2014-05-22 15:14:09,257 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose start
2014-05-22 15:14:09,325 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose end
2014-05-22 15:14:09,414 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2014-05-22 15:14:10,534 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2014-05-22 15:14:10,546 [JavaFX Application Thread] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2014-05-22 15:14:11,471 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2014-05-22 15:14:11,472 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata
2014-05-22 15:14:11,478 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema
2014-05-22 15:14:11,654 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTUNIT
2014-05-22 15:14:11,655 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [unittype, name, id, value]
2014-05-22 15:14:11,656 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 15:14:11,657 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10092_10096]
2014-05-22 15:14:11,721 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.ASSORTMENTNATURES
2014-05-22 15:14:11,722 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [assortments_id, productcategory_id, tradercategory_id, id, defaultoccurence]
2014-05-22 15:14:11,722 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_c328928buvo2stdblctp1byyh, fk_ngm1h9j6b3mu5hftpr93wdvdv, fk_5vsg15giupc62g5e5u81p7qwh]
2014-05-22 15:14:11,723 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10242, sys_idx_sys_pk_10102_10105, sys_idx_10247, sys_idx_10237]
2014-05-22 15:14:11,732 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.BORDERS
2014-05-22 15:14:11,732 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [region1, region2, bordercost]
2014-05-22 15:14:11,736 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_emhw2sfj7xjx3df0k5aseg9mq, fk_7xx83419llaxu9oo8ugtx6er3]
2014-05-22 15:14:11,737 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10252, sys_idx_10255, sys_idx_sys_pk_10110_10111]
2014-05-22 15:14:11,746 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.DEALS
2014-05-22 15:14:11,747 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [date, trader_id, amount, price, purchase, id, qualityid]
2014-05-22 15:14:11,747 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_svghy0txlxvstjgu94i5lqox]
2014-05-22 15:14:11,748 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10258, sys_idx_sys_pk_10114_10120]
2014-05-22 15:14:11,789 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.LOCATIONS
2014-05-22 15:14:11,789 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [sizeid, weatherid, xcoord, planfilename, name, comment, id, region, ycoord, height]
2014-05-22 15:14:11,790 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_1786dk9g78kmajpxnwxyll5n3]
2014-05-22 15:14:11,790 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10128_10135, sys_idx_10266]
2014-05-22 15:14:11,801 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.OFFERS
2014-05-22 15:14:11,801 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [trader_id, amount, priceperunit, product_id, id, qualityid]
2014-05-22 15:14:11,802 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_ndwyqhg5t22qpbn9w9yyfj8jv, fk_8fnfgctij6t1t5a6nv23vl6e1]
2014-05-22 15:14:11,803 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10283, sys_idx_10275, sys_idx_sys_pk_10144_10150]
2014-05-22 15:14:11,811 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTCATEGORIES
2014-05-22 15:14:11,811 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [parent_id, name, id]
2014-05-22 15:14:11,812 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_i69xwofcgfip1jg9o51bqnnh8]
2014-05-22 15:14:11,812 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10163, sys_idx_sys_pk_10158_10160]
2014-05-22 15:14:11,822 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_CATEGORIES
2014-05-22 15:14:11,823 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, categoryid]
2014-05-22 15:14:11,823 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_mchvd9dqbw8sy1c274cowu197, fk_dpdy1mfn7h3qpa2csbadunh4k]
2014-05-22 15:14:11,824 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10171, sys_idx_sys_pk_10167_10168, sys_idx_10291]
2014-05-22 15:14:11,831 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_REGIONS
2014-05-22 15:14:11,832 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, regionid]
2014-05-22 15:14:11,832 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_dqvpj6i7snhiu1pyalcwnhlbq, fk_q7f6w9g0xjwtqan09noxg3oi7]
2014-05-22 15:14:11,833 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10295, sys_idx_sys_pk_10175_10176, sys_idx_10299]
2014-05-22 15:14:11,841 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTS
2014-05-22 15:14:11,842 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [attributeid, cost, name, comment, id, quality]
2014-05-22 15:14:11,843 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 15:14:11,843 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10180_10185]
2014-05-22 15:14:11,852 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.REGIONS
2014-05-22 15:14:11,852 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [color, name, comment, id, rainfallchanceid, temperatureid]
2014-05-22 15:14:11,853 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 15:14:11,853 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10192_10197]
2014-05-22 15:14:11,861 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERCATEGORIES
2014-05-22 15:14:11,863 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [name, comment, id]
2014-05-22 15:14:11,863 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 15:14:11,863 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10204_10206]
2014-05-22 15:14:11,873 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERS
2014-05-22 15:14:11,873 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [ypos, size, xpos, category_id, convince, name, comment, id, mut, charisma, location_id, intelligence]
2014-05-22 15:14:11,873 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_pd546l32fc4omyfhy1wx4tbbi, fk_7fuswslb1h70hc8mjcxef277j]
2014-05-22 15:14:11,874 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10210_10221, sys_idx_10233, sys_idx_10235]
2014-05-22 15:14:11,880 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete
2014-05-22 15:14:12,859 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.1.0.Final
2014-05-22 15:14:12,952 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:14:13,193 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:14:13,421 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:14:13,474 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:14:13,508 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:14:13,557 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:14:13,593 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:14:13,663 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:14:13,695 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:14:13,766 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:14:13,848 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:14:13,918 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:14:13,972 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:14:14,028 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:14:14,058 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:14:14,159 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:14:14,257 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 15:14:14,331 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 15:14:14,659 [JavaFX Application Thread] INFO  org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@27c370f9] of Hibernate SessionFactory for HibernateTransactionManager
2014-05-22 16:02:58,089 [JavaFX Application Thread] INFO  org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@127698a4: startup date [Thu May 22 16:02:58 CEST 2014]; root of context hierarchy
2014-05-22 16:02:58,275 [JavaFX Application Thread] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml]
2014-05-22 16:02:59,343 [JavaFX Application Thread] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7b60e95f: defining beans [dataSource,sessionFactory,loader,regionDao,regionBorderDao,traderDao,productDao,traderCategoryDao,locationDao,productCategoryDao,productUnitDao,regionService,regionBorderService,locationService,productService,productCategoryService,productUnitService,traderCategoryService,traderService,pathService,assortmentNatureService,MainMenuController,RegionListController,EditRegionController,LocationListController,EditLocationController,productListController,editProductController,TraderCategoryList,editTraderCategory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager]; root of factory hierarchy
2014-05-22 16:02:59,400 [JavaFX Application Thread] INFO  org.springframework.jdbc.datasource.DriverManagerDataSource - Loaded JDBC driver: org.hsqldb.jdbc.JDBCDriver
2014-05-22 16:02:59,977 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
2014-05-22 16:02:59,993 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.2.5.Final}
2014-05-22 16:02:59,997 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2014-05-22 16:03:00,001 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2014-05-22 16:03:01,902 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose start
2014-05-22 16:03:01,967 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose end
2014-05-22 16:03:02,261 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2014-05-22 16:03:03,170 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2014-05-22 16:03:03,183 [JavaFX Application Thread] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2014-05-22 16:03:04,078 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2014-05-22 16:03:04,079 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata
2014-05-22 16:03:04,086 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema
2014-05-22 16:03:04,234 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTUNIT
2014-05-22 16:03:04,234 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [unittype, name, id, value]
2014-05-22 16:03:04,235 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:03:04,235 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10092_10096]
2014-05-22 16:03:04,250 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.ASSORTMENTNATURES
2014-05-22 16:03:04,250 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [assortments_id, productcategory_id, tradercategory_id, id, defaultoccurence]
2014-05-22 16:03:04,251 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_c328928buvo2stdblctp1byyh, fk_ngm1h9j6b3mu5hftpr93wdvdv, fk_5vsg15giupc62g5e5u81p7qwh]
2014-05-22 16:03:04,251 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10242, sys_idx_sys_pk_10102_10105, sys_idx_10247, sys_idx_10237]
2014-05-22 16:03:04,259 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.BORDERS
2014-05-22 16:03:04,259 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [region1, region2, bordercost]
2014-05-22 16:03:04,260 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_emhw2sfj7xjx3df0k5aseg9mq, fk_7xx83419llaxu9oo8ugtx6er3]
2014-05-22 16:03:04,260 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10252, sys_idx_10255, sys_idx_sys_pk_10110_10111]
2014-05-22 16:03:04,268 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.DEALS
2014-05-22 16:03:04,268 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [date, trader_id, amount, price, purchase, id, qualityid]
2014-05-22 16:03:04,269 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_svghy0txlxvstjgu94i5lqox]
2014-05-22 16:03:04,269 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10258, sys_idx_sys_pk_10114_10120]
2014-05-22 16:03:04,309 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.LOCATIONS
2014-05-22 16:03:04,310 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [sizeid, weatherid, xcoord, planfilename, name, comment, id, region, ycoord, height]
2014-05-22 16:03:04,310 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_1786dk9g78kmajpxnwxyll5n3]
2014-05-22 16:03:04,314 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10128_10135, sys_idx_10266]
2014-05-22 16:03:04,323 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.OFFERS
2014-05-22 16:03:04,324 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [trader_id, amount, priceperunit, product_id, id, qualityid]
2014-05-22 16:03:04,324 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_ndwyqhg5t22qpbn9w9yyfj8jv, fk_8fnfgctij6t1t5a6nv23vl6e1]
2014-05-22 16:03:04,325 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10283, sys_idx_10275, sys_idx_sys_pk_10144_10150]
2014-05-22 16:03:04,333 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTCATEGORIES
2014-05-22 16:03:04,334 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [parent_id, name, id]
2014-05-22 16:03:04,334 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_i69xwofcgfip1jg9o51bqnnh8]
2014-05-22 16:03:04,335 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10163, sys_idx_sys_pk_10158_10160]
2014-05-22 16:03:04,342 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_CATEGORIES
2014-05-22 16:03:04,343 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, categoryid]
2014-05-22 16:03:04,343 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_mchvd9dqbw8sy1c274cowu197, fk_dpdy1mfn7h3qpa2csbadunh4k]
2014-05-22 16:03:04,345 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10171, sys_idx_sys_pk_10167_10168, sys_idx_10291]
2014-05-22 16:03:04,353 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_REGIONS
2014-05-22 16:03:04,353 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, regionid]
2014-05-22 16:03:04,354 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_dqvpj6i7snhiu1pyalcwnhlbq, fk_q7f6w9g0xjwtqan09noxg3oi7]
2014-05-22 16:03:04,354 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10295, sys_idx_sys_pk_10175_10176, sys_idx_10299]
2014-05-22 16:03:04,360 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTS
2014-05-22 16:03:04,360 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [attributeid, cost, name, comment, id, quality]
2014-05-22 16:03:04,361 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:03:04,361 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10180_10185]
2014-05-22 16:03:04,384 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.REGIONS
2014-05-22 16:03:04,386 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [color, name, comment, id, rainfallchanceid, temperatureid]
2014-05-22 16:03:04,387 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:03:04,387 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10192_10197]
2014-05-22 16:03:04,399 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERCATEGORIES
2014-05-22 16:03:04,400 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [name, comment, id]
2014-05-22 16:03:04,401 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:03:04,401 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10204_10206]
2014-05-22 16:03:04,427 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERS
2014-05-22 16:03:04,428 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [ypos, size, xpos, category_id, convince, name, comment, id, mut, charisma, location_id, intelligence]
2014-05-22 16:03:04,429 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_pd546l32fc4omyfhy1wx4tbbi, fk_7fuswslb1h70hc8mjcxef277j]
2014-05-22 16:03:04,429 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10210_10221, sys_idx_10233, sys_idx_10235]
2014-05-22 16:03:04,435 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete
2014-05-22 16:03:05,425 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.1.0.Final
2014-05-22 16:03:05,555 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:03:05,831 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:03:06,140 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:03:06,176 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:03:06,194 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:03:06,227 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:03:06,246 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:03:06,286 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:03:06,369 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:03:06,418 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:03:06,486 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:03:06,517 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:03:06,536 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:03:06,567 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:03:06,589 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:03:06,625 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:03:06,645 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:03:06,677 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:03:06,823 [JavaFX Application Thread] INFO  org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@21eeac3e] of Hibernate SessionFactory for HibernateTransactionManager
2014-05-22 16:05:51,210 [JavaFX Application Thread] INFO  org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7e12c5d7: startup date [Thu May 22 16:05:51 CEST 2014]; root of context hierarchy
2014-05-22 16:05:51,276 [JavaFX Application Thread] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml]
2014-05-22 16:05:51,639 [JavaFX Application Thread] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@68d0b7b: defining beans [dataSource,sessionFactory,loader,regionDao,regionBorderDao,traderDao,productDao,traderCategoryDao,locationDao,productCategoryDao,productUnitDao,regionService,regionBorderService,locationService,productService,productCategoryService,productUnitService,traderCategoryService,traderService,pathService,assortmentNatureService,MainMenuController,RegionListController,EditRegionController,LocationListController,EditLocationController,productListController,editProductController,TraderCategoryList,editTraderCategory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager]; root of factory hierarchy
2014-05-22 16:05:51,655 [JavaFX Application Thread] INFO  org.springframework.jdbc.datasource.DriverManagerDataSource - Loaded JDBC driver: org.hsqldb.jdbc.JDBCDriver
2014-05-22 16:05:52,208 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
2014-05-22 16:05:52,232 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.2.5.Final}
2014-05-22 16:05:52,238 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2014-05-22 16:05:52,242 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2014-05-22 16:05:54,965 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose start
2014-05-22 16:05:55,039 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose end
2014-05-22 16:05:55,138 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2014-05-22 16:05:56,700 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2014-05-22 16:05:56,713 [JavaFX Application Thread] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2014-05-22 16:05:57,694 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2014-05-22 16:05:57,694 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata
2014-05-22 16:05:57,700 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema
2014-05-22 16:05:57,859 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTUNIT
2014-05-22 16:05:57,860 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [unittype, name, id, value]
2014-05-22 16:05:57,860 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:05:57,861 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10092_10096]
2014-05-22 16:05:57,878 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.ASSORTMENTNATURES
2014-05-22 16:05:57,878 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [assortments_id, productcategory_id, tradercategory_id, id, defaultoccurence]
2014-05-22 16:05:57,879 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_c328928buvo2stdblctp1byyh, fk_ngm1h9j6b3mu5hftpr93wdvdv, fk_5vsg15giupc62g5e5u81p7qwh]
2014-05-22 16:05:57,879 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10242, sys_idx_sys_pk_10102_10105, sys_idx_10247, sys_idx_10237]
2014-05-22 16:05:57,889 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.BORDERS
2014-05-22 16:05:57,890 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [region1, region2, bordercost]
2014-05-22 16:05:57,890 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_emhw2sfj7xjx3df0k5aseg9mq, fk_7xx83419llaxu9oo8ugtx6er3]
2014-05-22 16:05:57,891 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10252, sys_idx_10255, sys_idx_sys_pk_10110_10111]
2014-05-22 16:05:57,926 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.DEALS
2014-05-22 16:05:57,927 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [date, trader_id, amount, price, purchase, id, qualityid]
2014-05-22 16:05:57,928 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_svghy0txlxvstjgu94i5lqox]
2014-05-22 16:05:57,929 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10258, sys_idx_sys_pk_10114_10120]
2014-05-22 16:05:57,940 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.LOCATIONS
2014-05-22 16:05:57,940 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [sizeid, weatherid, xcoord, planfilename, name, comment, id, region, ycoord, height]
2014-05-22 16:05:57,941 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_1786dk9g78kmajpxnwxyll5n3]
2014-05-22 16:05:57,941 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10128_10135, sys_idx_10266]
2014-05-22 16:05:57,952 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.OFFERS
2014-05-22 16:05:57,952 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [trader_id, amount, priceperunit, product_id, id, qualityid]
2014-05-22 16:05:57,953 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_ndwyqhg5t22qpbn9w9yyfj8jv, fk_8fnfgctij6t1t5a6nv23vl6e1]
2014-05-22 16:05:57,953 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10283, sys_idx_10275, sys_idx_sys_pk_10144_10150]
2014-05-22 16:05:57,960 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTCATEGORIES
2014-05-22 16:05:57,961 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [parent_id, name, id]
2014-05-22 16:05:57,961 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_i69xwofcgfip1jg9o51bqnnh8]
2014-05-22 16:05:57,962 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10163, sys_idx_sys_pk_10158_10160]
2014-05-22 16:05:57,975 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_CATEGORIES
2014-05-22 16:05:57,975 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, categoryid]
2014-05-22 16:05:57,975 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_mchvd9dqbw8sy1c274cowu197, fk_dpdy1mfn7h3qpa2csbadunh4k]
2014-05-22 16:05:57,976 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10171, sys_idx_sys_pk_10167_10168, sys_idx_10291]
2014-05-22 16:05:57,987 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_REGIONS
2014-05-22 16:05:57,987 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, regionid]
2014-05-22 16:05:57,987 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_dqvpj6i7snhiu1pyalcwnhlbq, fk_q7f6w9g0xjwtqan09noxg3oi7]
2014-05-22 16:05:57,988 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10295, sys_idx_sys_pk_10175_10176, sys_idx_10299]
2014-05-22 16:05:57,997 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTS
2014-05-22 16:05:57,997 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [attributeid, cost, name, comment, id, quality]
2014-05-22 16:05:57,998 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:05:57,998 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10180_10185]
2014-05-22 16:05:58,029 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.REGIONS
2014-05-22 16:05:58,030 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [color, name, comment, id, rainfallchanceid, temperatureid]
2014-05-22 16:05:58,030 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:05:58,031 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10192_10197]
2014-05-22 16:05:58,042 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERCATEGORIES
2014-05-22 16:05:58,044 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [name, comment, id]
2014-05-22 16:05:58,045 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:05:58,045 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10204_10206]
2014-05-22 16:05:58,057 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERS
2014-05-22 16:05:58,057 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [ypos, size, xpos, category_id, convince, name, comment, id, mut, charisma, location_id, intelligence]
2014-05-22 16:05:58,058 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_pd546l32fc4omyfhy1wx4tbbi, fk_7fuswslb1h70hc8mjcxef277j]
2014-05-22 16:05:58,058 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10210_10221, sys_idx_10233, sys_idx_10235]
2014-05-22 16:05:58,066 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete
2014-05-22 16:05:58,972 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.1.0.Final
2014-05-22 16:05:59,077 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:05:59,297 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:05:59,462 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:05:59,498 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:05:59,517 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:05:59,558 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:05:59,577 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:05:59,629 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:05:59,759 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:05:59,826 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:05:59,894 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:05:59,938 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:05:59,996 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:06:00,049 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:06:00,107 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:06:00,150 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:06:00,176 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:06:00,239 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:06:00,526 [JavaFX Application Thread] INFO  org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@699c90db] of Hibernate SessionFactory for HibernateTransactionManager
2014-05-22 16:06:36,635 [JavaFX Application Thread] INFO  org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7e12c5d7: startup date [Thu May 22 16:06:36 CEST 2014]; root of context hierarchy
2014-05-22 16:06:36,750 [JavaFX Application Thread] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml]
2014-05-22 16:06:37,354 [JavaFX Application Thread] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@68d0b7b: defining beans [dataSource,sessionFactory,loader,regionDao,regionBorderDao,traderDao,productDao,traderCategoryDao,locationDao,productCategoryDao,productUnitDao,regionService,regionBorderService,locationService,productService,productCategoryService,productUnitService,traderCategoryService,traderService,pathService,assortmentNatureService,MainMenuController,RegionListController,EditRegionController,LocationListController,EditLocationController,productListController,editProductController,TraderCategoryList,editTraderCategory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager]; root of factory hierarchy
2014-05-22 16:06:37,413 [JavaFX Application Thread] INFO  org.springframework.jdbc.datasource.DriverManagerDataSource - Loaded JDBC driver: org.hsqldb.jdbc.JDBCDriver
2014-05-22 16:06:38,001 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
2014-05-22 16:06:38,020 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.2.5.Final}
2014-05-22 16:06:38,025 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2014-05-22 16:06:38,030 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2014-05-22 16:06:39,924 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose start
2014-05-22 16:06:40,004 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose end
2014-05-22 16:06:40,113 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2014-05-22 16:06:41,268 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2014-05-22 16:06:41,281 [JavaFX Application Thread] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2014-05-22 16:06:42,183 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2014-05-22 16:06:42,183 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata
2014-05-22 16:06:42,190 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema
2014-05-22 16:06:42,366 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTUNIT
2014-05-22 16:06:42,367 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [unittype, name, id, value]
2014-05-22 16:06:42,368 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:06:42,368 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10092_10096]
2014-05-22 16:06:42,411 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.ASSORTMENTNATURES
2014-05-22 16:06:42,411 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [assortments_id, productcategory_id, tradercategory_id, id, defaultoccurence]
2014-05-22 16:06:42,414 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_c328928buvo2stdblctp1byyh, fk_ngm1h9j6b3mu5hftpr93wdvdv, fk_5vsg15giupc62g5e5u81p7qwh]
2014-05-22 16:06:42,414 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10242, sys_idx_sys_pk_10102_10105, sys_idx_10247, sys_idx_10237]
2014-05-22 16:06:42,436 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.BORDERS
2014-05-22 16:06:42,437 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [region1, region2, bordercost]
2014-05-22 16:06:42,437 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_emhw2sfj7xjx3df0k5aseg9mq, fk_7xx83419llaxu9oo8ugtx6er3]
2014-05-22 16:06:42,438 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10252, sys_idx_10255, sys_idx_sys_pk_10110_10111]
2014-05-22 16:06:42,448 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.DEALS
2014-05-22 16:06:42,449 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [date, trader_id, amount, price, purchase, id, qualityid]
2014-05-22 16:06:42,449 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_svghy0txlxvstjgu94i5lqox]
2014-05-22 16:06:42,450 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10258, sys_idx_sys_pk_10114_10120]
2014-05-22 16:06:42,461 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.LOCATIONS
2014-05-22 16:06:42,461 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [sizeid, weatherid, xcoord, planfilename, name, comment, id, region, ycoord, height]
2014-05-22 16:06:42,462 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_1786dk9g78kmajpxnwxyll5n3]
2014-05-22 16:06:42,464 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10128_10135, sys_idx_10266]
2014-05-22 16:06:42,472 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.OFFERS
2014-05-22 16:06:42,473 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [trader_id, amount, priceperunit, product_id, id, qualityid]
2014-05-22 16:06:42,473 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_ndwyqhg5t22qpbn9w9yyfj8jv, fk_8fnfgctij6t1t5a6nv23vl6e1]
2014-05-22 16:06:42,473 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10283, sys_idx_10275, sys_idx_sys_pk_10144_10150]
2014-05-22 16:06:42,480 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTCATEGORIES
2014-05-22 16:06:42,480 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [parent_id, name, id]
2014-05-22 16:06:42,480 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_i69xwofcgfip1jg9o51bqnnh8]
2014-05-22 16:06:42,481 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10163, sys_idx_sys_pk_10158_10160]
2014-05-22 16:06:42,488 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_CATEGORIES
2014-05-22 16:06:42,489 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, categoryid]
2014-05-22 16:06:42,489 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_mchvd9dqbw8sy1c274cowu197, fk_dpdy1mfn7h3qpa2csbadunh4k]
2014-05-22 16:06:42,489 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10171, sys_idx_sys_pk_10167_10168, sys_idx_10291]
2014-05-22 16:06:42,497 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_REGIONS
2014-05-22 16:06:42,498 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, regionid]
2014-05-22 16:06:42,498 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_dqvpj6i7snhiu1pyalcwnhlbq, fk_q7f6w9g0xjwtqan09noxg3oi7]
2014-05-22 16:06:42,499 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10295, sys_idx_sys_pk_10175_10176, sys_idx_10299]
2014-05-22 16:06:42,506 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTS
2014-05-22 16:06:42,507 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [attributeid, cost, name, comment, id, quality]
2014-05-22 16:06:42,507 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:06:42,507 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10180_10185]
2014-05-22 16:06:42,517 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.REGIONS
2014-05-22 16:06:42,517 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [color, name, comment, id, rainfallchanceid, temperatureid]
2014-05-22 16:06:42,518 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:06:42,518 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10192_10197]
2014-05-22 16:06:42,537 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERCATEGORIES
2014-05-22 16:06:42,538 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [name, comment, id]
2014-05-22 16:06:42,539 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:06:42,539 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10204_10206]
2014-05-22 16:06:42,559 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERS
2014-05-22 16:06:42,560 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [ypos, size, xpos, category_id, convince, name, comment, id, mut, charisma, location_id, intelligence]
2014-05-22 16:06:42,563 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_pd546l32fc4omyfhy1wx4tbbi, fk_7fuswslb1h70hc8mjcxef277j]
2014-05-22 16:06:42,563 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10210_10221, sys_idx_10233, sys_idx_10235]
2014-05-22 16:06:42,567 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete
2014-05-22 16:06:43,600 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.1.0.Final
2014-05-22 16:06:43,702 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:06:43,946 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:06:44,090 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:06:44,116 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:06:44,129 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:06:44,171 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:06:44,184 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:06:44,219 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:06:44,282 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:06:44,316 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:06:44,361 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:06:44,402 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:06:44,427 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:06:44,462 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:06:44,492 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:06:44,523 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:06:44,540 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:06:44,566 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:06:44,775 [JavaFX Application Thread] INFO  org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@699c90db] of Hibernate SessionFactory for HibernateTransactionManager
2014-05-22 16:12:00,844 [JavaFX Application Thread] INFO  org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2b78ef4d: startup date [Thu May 22 16:12:00 CEST 2014]; root of context hierarchy
2014-05-22 16:12:00,899 [JavaFX Application Thread] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml]
2014-05-22 16:12:01,248 [JavaFX Application Thread] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6a715cf0: defining beans [dataSource,sessionFactory,loader,regionDao,regionBorderDao,traderDao,productDao,traderCategoryDao,locationDao,productCategoryDao,productUnitDao,regionService,regionBorderService,locationService,productService,productCategoryService,productUnitService,traderCategoryService,traderService,pathService,assortmentNatureService,MainMenuController,RegionListController,EditRegionController,LocationListController,EditLocationController,productListController,editProductController,TraderCategoryList,editTraderCategory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager]; root of factory hierarchy
2014-05-22 16:12:01,265 [JavaFX Application Thread] INFO  org.springframework.jdbc.datasource.DriverManagerDataSource - Loaded JDBC driver: org.hsqldb.jdbc.JDBCDriver
2014-05-22 16:12:01,779 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
2014-05-22 16:12:01,795 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.2.5.Final}
2014-05-22 16:12:01,801 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2014-05-22 16:12:01,807 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2014-05-22 16:12:03,746 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose start
2014-05-22 16:12:03,821 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose end
2014-05-22 16:12:03,947 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2014-05-22 16:12:05,011 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2014-05-22 16:12:05,029 [JavaFX Application Thread] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2014-05-22 16:12:05,960 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2014-05-22 16:12:05,961 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata
2014-05-22 16:12:05,967 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema
2014-05-22 16:12:06,159 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTUNIT
2014-05-22 16:12:06,160 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [unittype, name, id, value]
2014-05-22 16:12:06,160 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:12:06,161 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10092_10096]
2014-05-22 16:12:06,210 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.ASSORTMENTNATURES
2014-05-22 16:12:06,211 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [assortments_id, productcategory_id, tradercategory_id, id, defaultoccurence]
2014-05-22 16:12:06,212 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_c328928buvo2stdblctp1byyh, fk_ngm1h9j6b3mu5hftpr93wdvdv, fk_5vsg15giupc62g5e5u81p7qwh]
2014-05-22 16:12:06,212 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10242, sys_idx_sys_pk_10102_10105, sys_idx_10247, sys_idx_10237]
2014-05-22 16:12:06,223 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.BORDERS
2014-05-22 16:12:06,223 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [region1, region2, bordercost]
2014-05-22 16:12:06,223 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_emhw2sfj7xjx3df0k5aseg9mq, fk_7xx83419llaxu9oo8ugtx6er3]
2014-05-22 16:12:06,224 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10252, sys_idx_10255, sys_idx_sys_pk_10110_10111]
2014-05-22 16:12:06,232 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.DEALS
2014-05-22 16:12:06,232 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [date, trader_id, amount, price, purchase, id, qualityid]
2014-05-22 16:12:06,233 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_svghy0txlxvstjgu94i5lqox]
2014-05-22 16:12:06,234 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10258, sys_idx_sys_pk_10114_10120]
2014-05-22 16:12:06,242 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.LOCATIONS
2014-05-22 16:12:06,243 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [sizeid, weatherid, xcoord, planfilename, name, comment, id, region, ycoord, height]
2014-05-22 16:12:06,243 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_1786dk9g78kmajpxnwxyll5n3]
2014-05-22 16:12:06,244 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10128_10135, sys_idx_10266]
2014-05-22 16:12:06,254 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.OFFERS
2014-05-22 16:12:06,254 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [trader_id, amount, priceperunit, product_id, id, qualityid]
2014-05-22 16:12:06,255 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_ndwyqhg5t22qpbn9w9yyfj8jv, fk_8fnfgctij6t1t5a6nv23vl6e1]
2014-05-22 16:12:06,255 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10283, sys_idx_10275, sys_idx_sys_pk_10144_10150]
2014-05-22 16:12:06,262 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTCATEGORIES
2014-05-22 16:12:06,262 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [parent_id, name, id]
2014-05-22 16:12:06,262 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_i69xwofcgfip1jg9o51bqnnh8]
2014-05-22 16:12:06,263 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10163, sys_idx_sys_pk_10158_10160]
2014-05-22 16:12:06,269 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_CATEGORIES
2014-05-22 16:12:06,270 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, categoryid]
2014-05-22 16:12:06,270 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_mchvd9dqbw8sy1c274cowu197, fk_dpdy1mfn7h3qpa2csbadunh4k]
2014-05-22 16:12:06,270 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10171, sys_idx_sys_pk_10167_10168, sys_idx_10291]
2014-05-22 16:12:06,277 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_REGIONS
2014-05-22 16:12:06,278 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, regionid]
2014-05-22 16:12:06,278 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_dqvpj6i7snhiu1pyalcwnhlbq, fk_q7f6w9g0xjwtqan09noxg3oi7]
2014-05-22 16:12:06,279 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10295, sys_idx_sys_pk_10175_10176, sys_idx_10299]
2014-05-22 16:12:06,285 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTS
2014-05-22 16:12:06,286 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [attributeid, cost, name, comment, id, quality]
2014-05-22 16:12:06,286 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:12:06,287 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10180_10185]
2014-05-22 16:12:06,295 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.REGIONS
2014-05-22 16:12:06,296 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [color, name, comment, id, rainfallchanceid, temperatureid]
2014-05-22 16:12:06,296 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:12:06,296 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10192_10197]
2014-05-22 16:12:06,308 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERCATEGORIES
2014-05-22 16:12:06,309 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [name, comment, id]
2014-05-22 16:12:06,309 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:12:06,309 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10204_10206]
2014-05-22 16:12:06,322 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERS
2014-05-22 16:12:06,323 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [ypos, size, xpos, category_id, convince, name, comment, id, mut, charisma, location_id, intelligence]
2014-05-22 16:12:06,324 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_pd546l32fc4omyfhy1wx4tbbi, fk_7fuswslb1h70hc8mjcxef277j]
2014-05-22 16:12:06,324 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10210_10221, sys_idx_10233, sys_idx_10235]
2014-05-22 16:12:06,328 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete
2014-05-22 16:12:07,290 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.1.0.Final
2014-05-22 16:12:07,385 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:12:07,611 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:12:07,749 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:12:07,774 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:12:07,788 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:12:07,838 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:12:07,863 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:12:07,901 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:12:08,019 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:12:08,051 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:12:08,159 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:12:08,197 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:12:08,229 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:12:08,258 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:12:08,300 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:12:08,374 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:12:08,410 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:12:08,490 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:12:08,814 [JavaFX Application Thread] INFO  org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@1e154d75] of Hibernate SessionFactory for HibernateTransactionManager
2014-05-22 16:13:26,194 [JavaFX Application Thread] INFO  org.hibernate.event.internal.DefaultDeleteEventListener - HHH000114: Handling transient entity in delete processing
2014-05-22 16:13:26,196 [JavaFX Application Thread] INFO  org.hibernate.event.internal.DefaultDeleteEventListener - HHH000114: Handling transient entity in delete processing
2014-05-22 16:13:26,197 [JavaFX Application Thread] INFO  org.hibernate.event.internal.DefaultDeleteEventListener - HHH000114: Handling transient entity in delete processing
2014-05-22 16:13:26,197 [JavaFX Application Thread] INFO  org.hibernate.event.internal.DefaultDeleteEventListener - HHH000114: Handling transient entity in delete processing
2014-05-22 16:13:57,562 [JavaFX Application Thread] INFO  org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@b89d5d3: startup date [Thu May 22 16:13:57 CEST 2014]; root of context hierarchy
2014-05-22 16:13:57,760 [JavaFX Application Thread] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml]
2014-05-22 16:13:58,699 [JavaFX Application Thread] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@47db6a39: defining beans [dataSource,sessionFactory,loader,regionDao,regionBorderDao,traderDao,productDao,traderCategoryDao,locationDao,productCategoryDao,productUnitDao,regionService,regionBorderService,locationService,productService,productCategoryService,productUnitService,traderCategoryService,traderService,pathService,assortmentNatureService,MainMenuController,RegionListController,EditRegionController,LocationListController,EditLocationController,productListController,editProductController,TraderCategoryList,editTraderCategory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager]; root of factory hierarchy
2014-05-22 16:13:58,758 [JavaFX Application Thread] INFO  org.springframework.jdbc.datasource.DriverManagerDataSource - Loaded JDBC driver: org.hsqldb.jdbc.JDBCDriver
2014-05-22 16:13:59,416 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
2014-05-22 16:13:59,436 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.2.5.Final}
2014-05-22 16:13:59,440 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2014-05-22 16:13:59,445 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2014-05-22 16:14:01,349 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose start
2014-05-22 16:14:01,420 [JavaFX Application Thread] INFO  hsqldb.db.HSQLDB4623FBA3DB.ENGINE - checkpointClose end
2014-05-22 16:14:01,730 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2014-05-22 16:14:02,674 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2014-05-22 16:14:02,687 [JavaFX Application Thread] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2014-05-22 16:14:03,607 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2014-05-22 16:14:03,607 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata
2014-05-22 16:14:03,614 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema
2014-05-22 16:14:03,754 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTUNIT
2014-05-22 16:14:03,755 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [unittype, name, id, value]
2014-05-22 16:14:03,756 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:14:03,756 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10094_10095]
2014-05-22 16:14:03,770 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.ASSORTMENTNATURES
2014-05-22 16:14:03,770 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [assortments_id, productcategory_id, tradercategory_id, id, defaultoccurence]
2014-05-22 16:14:03,771 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_c328928buvo2stdblctp1byyh, fk_ngm1h9j6b3mu5hftpr93wdvdv, fk_5vsg15giupc62g5e5u81p7qwh]
2014-05-22 16:14:03,771 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10209, sys_idx_10213, sys_idx_sys_pk_10101_10102, sys_idx_10217]
2014-05-22 16:14:03,781 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.BORDERS
2014-05-22 16:14:03,781 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [region1, region2, bordercost]
2014-05-22 16:14:03,782 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_emhw2sfj7xjx3df0k5aseg9mq, fk_7xx83419llaxu9oo8ugtx6er3]
2014-05-22 16:14:03,783 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10106_10107, sys_idx_10221, sys_idx_10224]
2014-05-22 16:14:03,792 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.DEALS
2014-05-22 16:14:03,793 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [date, trader_id, amount, price, purchase, id, qualityid]
2014-05-22 16:14:03,793 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_svghy0txlxvstjgu94i5lqox]
2014-05-22 16:14:03,794 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10114_10115, sys_idx_10227]
2014-05-22 16:14:03,803 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.LOCATIONS
2014-05-22 16:14:03,803 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [sizeid, weatherid, xcoord, planfilename, name, comment, id, region, ycoord, height]
2014-05-22 16:14:03,804 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_1786dk9g78kmajpxnwxyll5n3]
2014-05-22 16:14:03,805 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10234, sys_idx_sys_pk_10127_10128]
2014-05-22 16:14:03,811 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.OFFERS
2014-05-22 16:14:03,812 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [trader_id, amount, priceperunit, product_id, id, qualityid]
2014-05-22 16:14:03,812 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_ndwyqhg5t22qpbn9w9yyfj8jv, fk_8fnfgctij6t1t5a6nv23vl6e1]
2014-05-22 16:14:03,813 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10140_10141, sys_idx_10242, sys_idx_10249]
2014-05-22 16:14:03,821 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTCATEGORIES
2014-05-22 16:14:03,822 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [parent_id, name, id]
2014-05-22 16:14:03,823 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_i69xwofcgfip1jg9o51bqnnh8]
2014-05-22 16:14:03,823 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10148_10149, sys_idx_10256]
2014-05-22 16:14:03,840 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_CATEGORIES
2014-05-22 16:14:03,842 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, categoryid]
2014-05-22 16:14:03,843 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_mchvd9dqbw8sy1c274cowu197, fk_dpdy1mfn7h3qpa2csbadunh4k]
2014-05-22 16:14:03,844 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10153_10154, sys_idx_10263, sys_idx_10259]
2014-05-22 16:14:03,914 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCT_REGIONS
2014-05-22 16:14:03,914 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [productid, regionid]
2014-05-22 16:14:03,915 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_dqvpj6i7snhiu1pyalcwnhlbq, fk_q7f6w9g0xjwtqan09noxg3oi7]
2014-05-22 16:14:03,917 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_10271, sys_idx_10267, sys_idx_sys_pk_10159_10160]
2014-05-22 16:14:03,938 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.PRODUCTS
2014-05-22 16:14:03,939 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [attributeid, cost, name, comment, id, quality]
2014-05-22 16:14:03,939 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:14:03,940 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10167_10168]
2014-05-22 16:14:03,950 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.REGIONS
2014-05-22 16:14:03,950 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [color, name, comment, id, rainfallchanceid, temperatureid]
2014-05-22 16:14:03,951 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:14:03,951 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10177_10178]
2014-05-22 16:14:03,958 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERCATEGORIES
2014-05-22 16:14:03,958 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [name, comment, id]
2014-05-22 16:14:03,959 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
2014-05-22 16:14:03,959 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10184_10185]
2014-05-22 16:14:03,966 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: PUBLIC.PUBLIC.TRADERS
2014-05-22 16:14:03,967 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [ypos, size, xpos, category_id, convince, name, comment, id, mut, charisma, location_id, intelligence]
2014-05-22 16:14:03,967 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: [fk_pd546l32fc4omyfhy1wx4tbbi, fk_7fuswslb1h70hc8mjcxef277j]
2014-05-22 16:14:03,968 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [sys_idx_sys_pk_10197_10198, sys_idx_10275, sys_idx_10287]
2014-05-22 16:14:03,977 [JavaFX Application Thread] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete
2014-05-22 16:14:04,869 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.1.0.Final
2014-05-22 16:14:04,973 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:14:05,184 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:14:05,513 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:14:05,554 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:14:05,570 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:14:05,608 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:14:05,626 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:14:05,668 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:14:05,848 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:14:05,900 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:14:05,960 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:14:06,011 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:14:06,053 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:14:06,131 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:14:06,166 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:14:06,217 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:14:06,247 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2014-05-22 16:14:06,297 [JavaFX Application Thread] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000006: Using org.hibernate.validator.HibernateValidator as validation provider.
2014-05-22 16:14:06,620 [JavaFX Application Thread] INFO  org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@6e0e127a] of Hibernate SessionFactory for HibernateTransactionManager
2014-05-22 16:14:22,655 [JavaFX Application Thread] INFO  org.hibernate.event.internal.DefaultDeleteEventListener - HHH000114: Handling transient entity in delete processing
2014-05-22 16:14:22,657 [JavaFX Application Thread] INFO  org.hibernate.event.internal.DefaultDeleteEventListener - HHH000114: Handling transient entity in delete processing
2014-05-22 16:14:22,658 [JavaFX Application Thread] INFO  org.hibernate.event.internal.DefaultDeleteEventListener - HHH000114: Handling transient entity in delete processing
2014-05-22 16:14:22,658 [JavaFX Application Thread] INFO  org.hibernate.event.internal.DefaultDeleteEventListener - HHH000114: Handling transient entity in delete processing
